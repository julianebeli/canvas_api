#%RAML 1.0
title: Swagger API
version: 1.0
baseUri: https://canvas.instructure.com/doc/api/
baseUriParameters: {}
protocols:
- HTTPS
/v1:
  /accounts:
    get:
      displayName: list_accounts
      description: List accounts
      queryParameters:
        include:
          required: false
          displayName: include
          description: |
            Array of additional information to include.


            "lti_guid":: the 'tool_consumer_instance_guid' that will be sent for this account on LTI launches

            "registration_settings":: returns info about the privacy policy and terms of use

            "services":: returns services and whether they are enabled (requires account management permissions)
          type: string
          enum:
          - lti_guid
          - registration_settings
          - services
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
    /search:
      get:
        displayName: search_account_domains
        description: Search account domains
        queryParameters:
          name:
            required: false
            displayName: name
            description: campus name
            type: string
          domain:
            required: false
            displayName: domain
            description: no description
            type: string
          latitude:
            required: false
            displayName: latitude
            description: no description
            type: number
            format: double
          longitude:
            required: false
            displayName: longitude
            description: no description
            type: number
            format: double
        responses:
          200:
            description: Success
    /{id}:
      uriParameters:
        id:
          required: true
          displayName: id
          description: ID
          type: string
      get:
        displayName: get_single_account
        description: Get a single account
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      put:
        displayName: update_account
        description: Update an account
        body:
          multipart/form-data:
            type: object
            properties:
              account[name]:
                required: false
                displayName: account[name]
                description: Updates the account name
                type: string
              account[sis_account_id]:
                required: false
                displayName: account[sis_account_id]
                description: |
                  Updates the account sis_account_id

                  Must have manage_sis permission and must not be a root_account.
                type: string
              account[default_time_zone]:
                required: false
                displayName: account[default_time_zone]
                description: |
                  The default time zone of the account. Allowed time zones are

                  {http://www.iana.org/time-zones IANA time zones} or friendlier

                  {http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html Ruby on Rails time zones}.
                type: string
              account[default_storage_quota_mb]:
                required: false
                displayName: account[default_storage_quota_mb]
                description: The default course storage quota to be used, if not otherwise specified.
                type: integer
                format: int64
              account[default_user_storage_quota_mb]:
                required: false
                displayName: account[default_user_storage_quota_mb]
                description: The default user storage quota to be used, if not otherwise specified.
                type: integer
                format: int64
              account[default_group_storage_quota_mb]:
                required: false
                displayName: account[default_group_storage_quota_mb]
                description: The default group storage quota to be used, if not otherwise specified.
                type: integer
                format: int64
              account[settings][restrict_student_past_view][value]:
                required: false
                displayName: account[settings][restrict_student_past_view][value]
                description: Restrict students from viewing courses after end date
                type: boolean
              account[settings][restrict_student_past_view][locked]:
                required: false
                displayName: account[settings][restrict_student_past_view][locked]
                description: Lock this setting for sub-accounts and courses
                type: boolean
              account[settings][restrict_student_future_view][value]:
                required: false
                displayName: account[settings][restrict_student_future_view][value]
                description: Restrict students from viewing courses before start date
                type: boolean
              account[settings][restrict_student_future_view][locked]:
                required: false
                displayName: account[settings][restrict_student_future_view][locked]
                description: Lock this setting for sub-accounts and courses
                type: boolean
              account[settings][lock_all_announcements][value]:
                required: false
                displayName: account[settings][lock_all_announcements][value]
                description: Disable comments on announcements
                type: boolean
              account[settings][lock_all_announcements][locked]:
                required: false
                displayName: account[settings][lock_all_announcements][locked]
                description: Lock this setting for sub-accounts and courses
                type: boolean
              account[settings][restrict_student_future_listing][value]:
                required: false
                displayName: account[settings][restrict_student_future_listing][value]
                description: Restrict students from viewing future enrollments in course list
                type: boolean
              account[settings][restrict_student_future_listing][locked]:
                required: false
                displayName: account[settings][restrict_student_future_listing][locked]
                description: Lock this setting for sub-accounts and courses
                type: boolean
              account[services]:
                required: false
                displayName: account[services]
                description: Give this a set of keys and boolean values to enable or disable services matching the keys
                type: object
                additionalProperties: true
                properties: {}
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
    /{account_id}:
      uriParameters:
        account_id:
          required: true
          displayName: account_id
          description: ID
          type: string
      /scopes:
        get:
          displayName: list_scopes
          description: List scopes
          queryParameters:
            group_by:
              required: false
              displayName: group_by
              description: The attribute to group the scopes by. By default no grouping is done.
              type: string
              enum:
              - resource_name
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /account_notifications:
        get:
          displayName: index_of_active_global_notification_for_user
          description: Index of active global notification for the user
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_global_notification
          description: Create a global notification
          body:
            multipart/form-data:
              type: object
              properties:
                account_notification[subject]:
                  required: true
                  displayName: account_notification[subject]
                  description: The subject of the notification.
                  type: string
                account_notification[message]:
                  required: true
                  displayName: account_notification[message]
                  description: The message body of the notification.
                  type: string
                account_notification[start_at]:
                  required: true
                  displayName: account_notification[start_at]
                  description: |
                    The start date and time of the notification in ISO8601 format.

                    e.g. 2014-01-01T01:00Z
                  type: object
                account_notification[end_at]:
                  required: true
                  displayName: account_notification[end_at]
                  description: |
                    The end date and time of the notification in ISO8601 format.

                    e.g. 2014-01-01T01:00Z
                  type: object
                account_notification[icon]:
                  required: false
                  displayName: account_notification[icon]
                  description: |
                    The icon to display with the notification.

                    Note: Defaults to warning.
                  type: string
                  enum:
                  - warning
                  - information
                  - question
                  - error
                  - calendar
                account_notification_roles:
                  required: false
                  displayName: account_notification_roles
                  description: |
                    The role(s) to send global notification to.  Note:  ommitting this field will send to everyone

                    Example:
                      account_notification_roles: ["StudentEnrollment", "TeacherEnrollment"]
                  type: array
                  items:
                    type: string
          responses:
            200:
              description: Success
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: show_global_notification
            description: Show a global notification
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: close_notification_for_user
            description: Close notification for user
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: update_global_notification
            description: Update a global notification
            body:
              multipart/form-data:
                type: object
                properties:
                  account_notification[subject]:
                    required: false
                    displayName: account_notification[subject]
                    description: The subject of the notification.
                    type: string
                  account_notification[message]:
                    required: false
                    displayName: account_notification[message]
                    description: The message body of the notification.
                    type: string
                  account_notification[start_at]:
                    required: false
                    displayName: account_notification[start_at]
                    description: |
                      The start date and time of the notification in ISO8601 format.

                      e.g. 2014-01-01T01:00Z
                    type: object
                  account_notification[end_at]:
                    required: false
                    displayName: account_notification[end_at]
                    description: |
                      The end date and time of the notification in ISO8601 format.

                      e.g. 2014-01-01T01:00Z
                    type: object
                  account_notification[icon]:
                    required: false
                    displayName: account_notification[icon]
                    description: The icon to display with the notification.
                    type: string
                    enum:
                    - warning
                    - information
                    - question
                    - error
                    - calendar
                  account_notification_roles:
                    required: false
                    displayName: account_notification_roles
                    description: |
                      The role(s) to send global notification to.  Note:  ommitting this field will send to everyone

                      Example:
                        account_notification_roles: ["StudentEnrollment", "TeacherEnrollment"]
                    type: array
                    items:
                      type: string
            responses:
              200:
                description: Success
      /reports:
        get:
          displayName: list_available_reports
          description: List Available Reports
          responses:
            200:
              description: Success
        /{report}:
          uriParameters:
            report:
              required: true
              displayName: report
              description: ID
              type: string
          post:
            displayName: start_report
            description: Start a Report
            body:
              multipart/form-data:
                type: object
                properties:
                  parameters:
                    required: false
                    displayName: parameters
                    description: |
                      The parameters will vary for each report. To fetch a list

                      of available parameters for each report, see {api:AccountReportsController#available_reports List Available Reports}.

                      A few example parameters have been provided below. Note that the example

                      parameters provided below may not be valid for every report.
                    type: string
                  parameters[course_id]:
                    required: false
                    displayName: parameters[course_id]
                    description: |
                      The id of the course to report on.

                      Note: this parameter has been listed to serve as an example and may not be

                      valid for every report.
                    type: integer
                    format: int64
                  parameters[users]:
                    required: false
                    displayName: parameters[users]
                    description: |
                      If true, user data will be included. If

                      false, user data will be omitted. Note: this parameter has been listed to

                      serve as an example and may not be valid for every report.
                    type: boolean
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          get:
            displayName: index_of_reports
            description: Index of Reports
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /{id}:
            uriParameters:
              id:
                required: true
                displayName: id
                description: ID
                type: string
            get:
              displayName: status_of_report
              description: Status of a Report
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            delete:
              displayName: delete_report
              description: Delete a Report
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
      /permissions:
        get:
          displayName: permissions
          description: Permissions
          queryParameters:
            permissions:
              required: false
              displayName: permissions
              description: |
                List of permissions to check against the authenticated user.

                Permission names are documented in the {api:RoleOverridesController#add_role Create a role} endpoint.
              type: array
              items:
                type: string
          responses:
            200:
              description: Success
      /sub_accounts:
        get:
          displayName: get_sub_accounts_of_account
          description: Get the sub-accounts of an account
          queryParameters:
            recursive:
              required: false
              displayName: recursive
              description: |
                If true, the entire account tree underneath

                this account will be returned (though still paginated). If false, only

                direct sub-accounts of this account will be returned. Defaults to false.
              type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_new_sub_account
          description: Create a new sub-account
          body:
            multipart/form-data:
              type: object
              properties:
                account[name]:
                  required: true
                  displayName: account[name]
                  description: The name of the new sub-account.
                  type: string
                account[sis_account_id]:
                  required: false
                  displayName: account[sis_account_id]
                  description: The account's identifier in the Student Information System.
                  type: string
                account[default_storage_quota_mb]:
                  required: false
                  displayName: account[default_storage_quota_mb]
                  description: The default course storage quota to be used, if not otherwise specified.
                  type: integer
                  format: int64
                account[default_user_storage_quota_mb]:
                  required: false
                  displayName: account[default_user_storage_quota_mb]
                  description: The default user storage quota to be used, if not otherwise specified.
                  type: integer
                  format: int64
                account[default_group_storage_quota_mb]:
                  required: false
                  displayName: account[default_group_storage_quota_mb]
                  description: The default group storage quota to be used, if not otherwise specified.
                  type: integer
                  format: int64
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          delete:
            displayName: delete_sub_account
            description: Delete a sub-account
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /terms_of_service:
        get:
          displayName: get_terms_of_service
          description: Get the Terms of Service
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /help_links:
        get:
          displayName: get_help_links
          description: Get help links
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /courses:
        get:
          displayName: list_active_courses_in_account
          description: List active courses in an account
          queryParameters:
            with_enrollments:
              required: false
              displayName: with_enrollments
              description: |
                If true, include only courses with at least one enrollment.  If false,

                include only courses with no enrollments.  If not present, do not filter

                on course enrollment status.
              type: boolean
            enrollment_type:
              required: false
              displayName: enrollment_type
              description: |
                If set, only return courses that have at least one user enrolled in

                in the course with one of the specified enrollment types.
              type: string
              enum:
              - teacher
              - student
              - ta
              - observer
              - designer
            published:
              required: false
              displayName: published
              description: |
                If true, include only published courses.  If false, exclude published

                courses.  If not present, do not filter on published status.
              type: boolean
            completed:
              required: false
              displayName: completed
              description: |
                If true, include only completed courses (these may be in state

                'completed', or their enrollment term may have ended).  If false, exclude

                completed courses.  If not present, do not filter on completed status.
              type: boolean
            blueprint:
              required: false
              displayName: blueprint
              description: |
                If true, include only blueprint courses. If false, exclude them.

                If not present, do not filter on this basis.
              type: boolean
            blueprint_associated:
              required: false
              displayName: blueprint_associated
              description: |
                If true, include only courses that inherit content from a blueprint course.

                If false, exclude them. If not present, do not filter on this basis.
              type: boolean
            by_teachers:
              required: false
              displayName: by_teachers
              description: |
                List of User IDs of teachers; if supplied, include only courses taught by

                one of the referenced users.
              type: array
              items:
                type: integer
                format: int32
            by_subaccounts:
              required: false
              displayName: by_subaccounts
              description: |
                List of Account IDs; if supplied, include only courses associated with one

                of the referenced subaccounts.
              type: array
              items:
                type: integer
                format: int32
            hide_enrollmentless_courses:
              required: false
              displayName: hide_enrollmentless_courses
              description: |
                If present, only return courses that have at least one enrollment.

                Equivalent to 'with_enrollments=true'; retained for compatibility.
              type: boolean
            state:
              required: false
              displayName: state
              description: |
                If set, only return courses that are in the given state(s). By default,

                all states but "deleted" are returned.
              type: string
              enum:
              - created
              - claimed
              - available
              - completed
              - deleted
              - all
            enrollment_term_id:
              required: false
              displayName: enrollment_term_id
              description: If set, only includes courses from the specified term.
              type: integer
              format: int64
            search_term:
              required: false
              displayName: search_term
              description: The partial course name, code, or full ID to match and return in the results list. Must be at least 3 characters.
              type: string
            include:
              required: false
              displayName: include
              description: |
                - All explanations can be seen in the {api:CoursesController#index Course API index documentation}

                - "sections", "needs_grading_count" and "total_scores" are not valid options at the account level
              type: string
              enum:
              - syllabus_body
              - term
              - course_progress
              - storage_quota_used_mb
              - total_students
              - teachers
              - account_name
              - concluded
            sort:
              required: false
              displayName: sort
              description: The column to sort results by.
              type: string
              enum:
              - course_name
              - sis_course_id
              - teacher
              - account_name
            order:
              required: false
              displayName: order
              description: The order to sort the given column by.
              type: string
              enum:
              - asc
              - desc
            search_by:
              required: false
              displayName: search_by
              description: |
                The filter to search by. "course" searches for course names, course codes,

                and SIS IDs. "teacher" searches for teacher names
              type: string
              enum:
              - course
              - teacher
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_new_course
          description: Create a new course
          body:
            multipart/form-data:
              type: object
              properties:
                course[name]:
                  required: false
                  displayName: course[name]
                  description: |
                    The name of the course. If omitted, the course will be named "Unnamed

                    Course."
                  type: string
                course[course_code]:
                  required: false
                  displayName: course[course_code]
                  description: The course code for the course.
                  type: string
                course[start_at]:
                  required: false
                  displayName: course[start_at]
                  description: Course start date in ISO8601 format, e.g. 2011-01-01T01:00Z
                  type: object
                course[end_at]:
                  required: false
                  displayName: course[end_at]
                  description: Course end date in ISO8601 format. e.g. 2011-01-01T01:00Z
                  type: object
                course[license]:
                  required: false
                  displayName: course[license]
                  description: |
                    The name of the licensing. Should be one of the following abbreviations

                    (a descriptive name is included in parenthesis for reference):

                    - 'private' (Private Copyrighted)

                    - 'cc_by_nc_nd' (CC Attribution Non-Commercial No Derivatives)

                    - 'cc_by_nc_sa' (CC Attribution Non-Commercial Share Alike)

                    - 'cc_by_nc' (CC Attribution Non-Commercial)

                    - 'cc_by_nd' (CC Attribution No Derivatives)

                    - 'cc_by_sa' (CC Attribution Share Alike)

                    - 'cc_by' (CC Attribution)

                    - 'public_domain' (Public Domain).
                  type: string
                course[is_public]:
                  required: false
                  displayName: course[is_public]
                  description: Set to true if course is public to both authenticated and unauthenticated users.
                  type: boolean
                course[is_public_to_auth_users]:
                  required: false
                  displayName: course[is_public_to_auth_users]
                  description: Set to true if course is public only to authenticated users.
                  type: boolean
                course[public_syllabus]:
                  required: false
                  displayName: course[public_syllabus]
                  description: Set to true to make the course syllabus public.
                  type: boolean
                course[public_syllabus_to_auth]:
                  required: false
                  displayName: course[public_syllabus_to_auth]
                  description: Set to true to make the course syllabus public for authenticated users.
                  type: boolean
                course[public_description]:
                  required: false
                  displayName: course[public_description]
                  description: A publicly visible description of the course.
                  type: string
                course[allow_student_wiki_edits]:
                  required: false
                  displayName: course[allow_student_wiki_edits]
                  description: If true, students will be able to modify the course wiki.
                  type: boolean
                course[allow_wiki_comments]:
                  required: false
                  displayName: course[allow_wiki_comments]
                  description: If true, course members will be able to comment on wiki pages.
                  type: boolean
                course[allow_student_forum_attachments]:
                  required: false
                  displayName: course[allow_student_forum_attachments]
                  description: If true, students can attach files to forum posts.
                  type: boolean
                course[open_enrollment]:
                  required: false
                  displayName: course[open_enrollment]
                  description: Set to true if the course is open enrollment.
                  type: boolean
                course[self_enrollment]:
                  required: false
                  displayName: course[self_enrollment]
                  description: Set to true if the course is self enrollment.
                  type: boolean
                course[restrict_enrollments_to_course_dates]:
                  required: false
                  displayName: course[restrict_enrollments_to_course_dates]
                  description: |
                    Set to true to restrict user enrollments to the start and end dates of the

                    course.
                  type: boolean
                course[term_id]:
                  required: false
                  displayName: course[term_id]
                  description: The unique ID of the term to create to course in.
                  type: integer
                  format: int64
                course[sis_course_id]:
                  required: false
                  displayName: course[sis_course_id]
                  description: The unique SIS identifier.
                  type: string
                course[integration_id]:
                  required: false
                  displayName: course[integration_id]
                  description: The unique Integration identifier.
                  type: string
                course[hide_final_grades]:
                  required: false
                  displayName: course[hide_final_grades]
                  description: |
                    If this option is set to true, the totals in student grades summary will

                    be hidden.
                  type: boolean
                course[apply_assignment_group_weights]:
                  required: false
                  displayName: course[apply_assignment_group_weights]
                  description: Set to true to weight final grade based on assignment groups percentages.
                  type: boolean
                course[time_zone]:
                  required: false
                  displayName: course[time_zone]
                  description: |
                    The time zone for the course. Allowed time zones are

                    {http://www.iana.org/time-zones IANA time zones} or friendlier

                    {http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html Ruby on Rails time zones}.
                  type: string
                offer:
                  required: false
                  displayName: offer
                  description: |
                    If this option is set to true, the course will be available to students

                    immediately.
                  type: boolean
                enroll_me:
                  required: false
                  displayName: enroll_me
                  description: Set to true to enroll the current user as the teacher.
                  type: boolean
                course[default_view]:
                  required: false
                  displayName: course[default_view]
                  description: |
                    The type of page that users will see when they first visit the course

                    * 'feed' Recent Activity Dashboard

                    * 'modules' Course Modules/Sections Page

                    * 'assignments' Course Assignments List

                    * 'syllabus' Course Syllabus Page

                    other types may be added in the future
                  type: string
                  enum:
                  - feed
                  - wiki
                  - modules
                  - syllabus
                  - assignments
                course[syllabus_body]:
                  required: false
                  displayName: course[syllabus_body]
                  description: The syllabus body for the course
                  type: string
                course[grading_standard_id]:
                  required: false
                  displayName: course[grading_standard_id]
                  description: The grading standard id to set for the course.  If no value is provided for this argument the current grading_standard will be un-set from this course.
                  type: integer
                  format: int64
                course[course_format]:
                  required: false
                  displayName: course[course_format]
                  description: Optional. Specifies the format of the course. (Should be 'on_campus', 'online', or 'blended')
                  type: string
                enable_sis_reactivation:
                  required: false
                  displayName: enable_sis_reactivation
                  description: When true, will first try to re-activate a deleted course with matching sis_course_id if possible.
                  type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        put:
          displayName: update_courses
          description: Update courses
          body:
            multipart/form-data:
              type: object
              properties:
                course_ids:
                  required: true
                  displayName: course_ids
                  description: List of ids of courses to update. At most 500 courses may be updated in one call.
                  type: array
                  items:
                    type: string
                event:
                  required: true
                  displayName: event
                  description: no description
                  type: string
                  enum:
                  - offer
                  - conclude
                  - delete
                  - undelete
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_single_course_accounts
            description: Get a single course
            queryParameters:
              include:
                required: false
                displayName: include
                description: |
                  - "all_courses": Also search recently deleted courses.

                  - "permissions": Include permissions the current user has
                    for the course.
                  - "observed_users": include observed users in the enrollments

                  - "course_image": Optional course image data for when there is a course image
                    and the course image feature flag has been enabled
                  - "concluded": Optional information to include with each Course. Indicates whether
                    the course has been concluded, taking course and term dates into account.
                type: string
                enum:
                - needs_grading_count
                - syllabus_body
                - public_description
                - total_scores
                - current_grading_period_scores
                - term
                - account
                - course_progress
                - sections
                - storage_quota_used_mb
                - total_students
                - passback_status
                - favorites
                - teachers
                - observed_users
                - all_courses
                - permissions
                - course_image
                - concluded
              teacher_limit:
                required: false
                displayName: teacher_limit
                description: |
                  The maximum number of teacher enrollments to show.

                  If the course contains more teachers than this, instead of giving the teacher

                  enrollments, the count of teachers will be given under a _teacher_count_ key.
                type: integer
                format: int64
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /admins:
        post:
          displayName: make_account_admin
          description: Make an account admin
          body:
            multipart/form-data:
              type: object
              properties:
                user_id:
                  required: true
                  displayName: user_id
                  description: The id of the user to promote.
                  type: integer
                  format: int64
                role:
                  required: false
                  displayName: role
                  description: |
                    [DEPRECATED] The user's admin relationship with the account will be

                    created with the given role. Defaults to 'AccountAdmin'.
                  type: string
                role_id:
                  required: false
                  displayName: role_id
                  description: |
                    The user's admin relationship with the account will be created with the

                    given role. Defaults to the built-in role for 'AccountAdmin'.
                  type: integer
                  format: int64
                send_confirmation:
                  required: false
                  displayName: send_confirmation
                  description: |
                    Send a notification email to

                    the new admin if true. Default is true.
                  type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        get:
          displayName: list_account_admins
          description: List account admins
          queryParameters:
            user_id:
              required: false
              displayName: user_id
              description: Scope the results to those with user IDs equal to any of the IDs specified here.
              type: array
              items:
                type: object
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{user_id}:
          uriParameters:
            user_id:
              required: true
              displayName: user_id
              description: ID
              type: string
          delete:
            displayName: remove_account_admin
            description: Remove account admin
            queryParameters:
              role:
                required: false
                displayName: role
                description: |
                  [DEPRECATED] Account role to remove from the user. Defaults to

                  'AccountAdmin'. Any other account role must be specified explicitly.
                type: string
              role_id:
                required: false
                displayName: role_id
                description: |
                  The user's admin relationship with the account will be created with the

                  given role. Defaults to the built-in role for 'AccountAdmin'.
                type: integer
                format: int64
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /authentication_providers:
        get:
          displayName: list_authentication_providers
          description: List authentication providers
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: add_authentication_provider
          description: Add authentication provider
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          put:
            displayName: update_authentication_provider
            description: Update authentication provider
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          get:
            displayName: get_authentication_provider
            description: Get authentication provider
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: delete_authentication_provider
            description: Delete authentication provider
            responses:
              200:
                description: Success
      /sso_settings:
        get:
          displayName: show_account_auth_settings
          description: show account auth settings
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        put:
          displayName: update_account_auth_settings
          description: update account auth settings
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /content_migrations:
        get:
          displayName: list_content_migrations_accounts
          description: List content migrations
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_content_migration_accounts
          description: Create a content migration
          body:
            multipart/form-data:
              type: object
              properties:
                migration_type:
                  required: true
                  displayName: migration_type
                  description: |
                    The type of the migration. Use the

                    {api:ContentMigrationsController#available_migrators Migrator} endpoint to

                    see all available migrators. Default allowed values:

                    canvas_cartridge_importer, common_cartridge_importer,

                    course_copy_importer, zip_file_importer, qti_converter, moodle_converter
                  type: string
                pre_attachment[name]:
                  required: false
                  displayName: pre_attachment[name]
                  description: |
                    Required if uploading a file. This is the first step in uploading a file

                    to the content migration. See the {file:file_uploads.html File Upload

                    Documentation} for details on the file upload workflow.
                  type: string
                pre_attachment[*]:
                  required: false
                  displayName: pre_attachment[*]
                  description: |
                    Other file upload properties, See {file:file_uploads.html File Upload

                    Documentation}
                  type: string
                settings[file_url]:
                  required: false
                  displayName: settings[file_url]
                  description: A URL to download the file from. Must not require authentication.
                  type: string
                settings[source_course_id]:
                  required: false
                  displayName: settings[source_course_id]
                  description: |
                    The course to copy from for a course copy migration. (required if doing

                    course copy)
                  type: string
                settings[folder_id]:
                  required: false
                  displayName: settings[folder_id]
                  description: The folder to unzip the .zip file into for a zip_file_import.
                  type: string
                settings[overwrite_quizzes]:
                  required: false
                  displayName: settings[overwrite_quizzes]
                  description: |
                    Whether to overwrite quizzes with the same identifiers between content

                    packages.
                  type: boolean
                settings[question_bank_id]:
                  required: false
                  displayName: settings[question_bank_id]
                  description: |
                    The existing question bank ID to import questions into if not specified in

                    the content package.
                  type: integer
                  format: int64
                settings[question_bank_name]:
                  required: false
                  displayName: settings[question_bank_name]
                  description: |
                    The question bank to import questions into if not specified in the content

                    package, if both bank id and name are set, id will take precedence.
                  type: string
                date_shift_options[shift_dates]:
                  required: false
                  displayName: date_shift_options[shift_dates]
                  description: Whether to shift dates in the copied course
                  type: boolean
                date_shift_options[old_start_date]:
                  required: false
                  displayName: date_shift_options[old_start_date]
                  description: The original start date of the source content/course
                  type: object
                date_shift_options[old_end_date]:
                  required: false
                  displayName: date_shift_options[old_end_date]
                  description: The original end date of the source content/course
                  type: object
                date_shift_options[new_start_date]:
                  required: false
                  displayName: date_shift_options[new_start_date]
                  description: The new start date for the content/course
                  type: object
                date_shift_options[new_end_date]:
                  required: false
                  displayName: date_shift_options[new_end_date]
                  description: The new end date for the source content/course
                  type: object
                date_shift_options[day_substitutions][X]:
                  required: false
                  displayName: date_shift_options[day_substitutions][X]
                  description: |
                    Move anything scheduled for day 'X' to the specified day. (0-Sunday,

                    1-Monday, 2-Tuesday, 3-Wednesday, 4-Thursday, 5-Friday, 6-Saturday)
                  type: integer
                  format: int64
                date_shift_options[remove_dates]:
                  required: false
                  displayName: date_shift_options[remove_dates]
                  description: |
                    Whether to remove dates in the copied course. Cannot be used

                    in conjunction with *shift_dates*.
                  type: boolean
                selective_import:
                  required: false
                  displayName: selective_import
                  description: |
                    If set, perform a selective import instead of importing all content.

                    The migration will identify the contents of the package and then stop

                    in the +waiting_for_select+ workflow state. At this point, use the

                    {api:ContentMigrationsController#content_list List items endpoint}

                    to enumerate the contents of the package, identifying the copy

                    parameters for the desired content. Then call the

                    {api:ContentMigrationsController#update Update endpoint} and provide these

                    copy parameters to start the import.
                  type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{content_migration_id}/migration_issues:
          uriParameters:
            content_migration_id:
              required: true
              displayName: content_migration_id
              description: ID
              type: string
          get:
            displayName: list_migration_issues_accounts
            description: List migration issues
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /{id}:
            uriParameters:
              id:
                required: true
                displayName: id
                description: ID
                type: string
            get:
              displayName: get_migration_issue_accounts
              description: Get a migration issue
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            put:
              displayName: update_migration_issue_accounts
              description: Update a migration issue
              body:
                multipart/form-data:
                  type: object
                  properties:
                    workflow_state:
                      required: true
                      displayName: workflow_state
                      description: Set the workflow_state of the issue.
                      type: string
                      enum:
                      - active
                      - resolved
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_content_migration_accounts
            description: Get a content migration
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: update_content_migration_accounts
            description: Update a content migration
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /selective_data:
            get:
              displayName: list_items_for_selective_import_accounts
              description: List items for selective import
              queryParameters:
                type:
                  required: false
                  displayName: type
                  description: The type of content to enumerate.
                  type: string
                  enum:
                  - context_modules
                  - assignments
                  - quizzes
                  - assessment_question_banks
                  - discussion_topics
                  - wiki_pages
                  - context_external_tools
                  - tool_profiles
                  - announcements
                  - calendar_events
                  - rubrics
                  - groups
                  - learning_outcomes
                  - attachments
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
        /migrators:
          get:
            displayName: list_migration_systems_accounts
            description: List Migration Systems
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /csp_settings:
        get:
          displayName: get_current_settings_for_account_or_course_accounts
          description: Get current settings for account or course
          responses:
            200:
              description: Success
        put:
          displayName: enable_disable_or_clear_explicit_csp_setting_accounts
          description: Enable, disable, or clear explicit CSP setting
          body:
            multipart/form-data:
              type: object
              properties:
                status:
                  required: true
                  displayName: status
                  description: |
                    If set to "enabled" for an account, CSP will be enabled for all its courses and sub-accounts (that

                    have not explicitly enabled or disabled it), using the domain whitelist set on this account.

                    If set to "disabled", CSP will be disabled for this account or course and for all sub-accounts

                    that have not explicitly re-enabled it.

                    If set to "inherited", this account or course will reset to the default state where CSP settings

                    are inherited from the first parent account to have them explicitly set.
                  type: string
                  enum:
                  - enabled
                  - disabled
                  - inherited
          responses:
            200:
              description: Success
        /lock:
          put:
            displayName: lock_or_unlock_current_csp_settings_for_sub_accounts_and_courses
            description: Lock or unlock current CSP settings for sub-accounts and courses
            body:
              multipart/form-data:
                type: object
                properties:
                  settings_locked:
                    required: true
                    displayName: settings_locked
                    description: Whether sub-accounts and courses will be prevented from overriding settings inherited from this account.
                    type: boolean
            responses:
              200:
                description: Success
        /domains:
          post:
            displayName: add_domain_to_account_whitelist
            description: Add a domain to account whitelist
            body:
              multipart/form-data:
                type: object
                properties:
                  domain:
                    required: true
                    displayName: domain
                    description: no description
                    type: string
            responses:
              200:
                description: Success
          delete:
            displayName: remove_domain_from_account_whitelist
            description: Remove a domain from account whitelist
            queryParameters:
              domain:
                required: true
                displayName: domain
                description: no description
                type: string
            responses:
              200:
                description: Success
          /batch_create:
            post:
              displayName: add_multiple_domains_to_account_whitelist
              description: Add multiple domains to account whitelist
              body:
                multipart/form-data:
                  type: object
                  properties:
                    domains:
                      required: true
                      displayName: domains
                      description: no description
                      type: object
              responses:
                200:
                  description: Success
      /terms:
        post:
          displayName: create_enrollment_term
          description: Create enrollment term
          body:
            multipart/form-data:
              type: object
              properties:
                enrollment_term[name]:
                  required: false
                  displayName: enrollment_term[name]
                  description: The name of the term.
                  type: string
                enrollment_term[start_at]:
                  required: false
                  displayName: enrollment_term[start_at]
                  description: |
                    The day/time the term starts.

                    Accepts times in ISO 8601 format, e.g. 2015-01-10T18:48:00Z.
                  type: object
                enrollment_term[end_at]:
                  required: false
                  displayName: enrollment_term[end_at]
                  description: |
                    The day/time the term ends.

                    Accepts times in ISO 8601 format, e.g. 2015-01-10T18:48:00Z.
                  type: object
                enrollment_term[sis_term_id]:
                  required: false
                  displayName: enrollment_term[sis_term_id]
                  description: The unique SIS identifier for the term.
                  type: string
                enrollment_term[overrides][enrollment_type][start_at]:
                  required: false
                  displayName: enrollment_term[overrides][enrollment_type][start_at]
                  description: |
                    The day/time the term starts, overridden for the given enrollment type.

                    *enrollment_type* can be one of StudentEnrollment, TeacherEnrollment, TaEnrollment, or DesignerEnrollment
                  type: object
                enrollment_term[overrides][enrollment_type][end_at]:
                  required: false
                  displayName: enrollment_term[overrides][enrollment_type][end_at]
                  description: |
                    The day/time the term ends, overridden for the given enrollment type.

                    *enrollment_type* can be one of StudentEnrollment, TeacherEnrollment, TaEnrollment, or DesignerEnrollment
                  type: object
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        get:
          displayName: list_enrollment_terms
          description: List enrollment terms
          queryParameters:
            workflow_state:
              required: false
              displayName: workflow_state
              description: |
                If set, only returns terms that are in the given state.

                Defaults to 'active'.
              type: string
              enum:
              - active
              - deleted
              - all
            include:
              required: false
              displayName: include
              description: |
                Array of additional information to include.


                "overrides":: term start/end dates overridden for different enrollment types
              type: string
              enum:
              - overrides
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          put:
            displayName: update_enrollment_term
            description: Update enrollment term
            body:
              multipart/form-data:
                type: object
                properties:
                  enrollment_term[name]:
                    required: false
                    displayName: enrollment_term[name]
                    description: The name of the term.
                    type: string
                  enrollment_term[start_at]:
                    required: false
                    displayName: enrollment_term[start_at]
                    description: |
                      The day/time the term starts.

                      Accepts times in ISO 8601 format, e.g. 2015-01-10T18:48:00Z.
                    type: object
                  enrollment_term[end_at]:
                    required: false
                    displayName: enrollment_term[end_at]
                    description: |
                      The day/time the term ends.

                      Accepts times in ISO 8601 format, e.g. 2015-01-10T18:48:00Z.
                    type: object
                  enrollment_term[sis_term_id]:
                    required: false
                    displayName: enrollment_term[sis_term_id]
                    description: The unique SIS identifier for the term.
                    type: string
                  enrollment_term[overrides][enrollment_type][start_at]:
                    required: false
                    displayName: enrollment_term[overrides][enrollment_type][start_at]
                    description: |
                      The day/time the term starts, overridden for the given enrollment type.

                      *enrollment_type* can be one of StudentEnrollment, TeacherEnrollment, TaEnrollment, or DesignerEnrollment
                    type: object
                  enrollment_term[overrides][enrollment_type][end_at]:
                    required: false
                    displayName: enrollment_term[overrides][enrollment_type][end_at]
                    description: |
                      The day/time the term ends, overridden for the given enrollment type.

                      *enrollment_type* can be one of StudentEnrollment, TeacherEnrollment, TaEnrollment, or DesignerEnrollment
                    type: object
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: delete_enrollment_term
            description: Delete enrollment term
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /enrollments/{id}:
        uriParameters:
          id:
            required: true
            displayName: id
            description: The ID of the enrollment object
            type: integer
            format: int64
        get:
          displayName: enrollment_by_id
          description: Enrollment by ID
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /external_tools:
        get:
          displayName: list_external_tools_accounts
          description: List external tools
          queryParameters:
            search_term:
              required: false
              displayName: search_term
              description: The partial name of the tools to match and return.
              type: string
            selectable:
              required: false
              displayName: selectable
              description: If true, then only tools that are meant to be selectable are returned
              type: boolean
            include_parents:
              required: false
              displayName: include_parents
              description: If true, then include tools installed in all accounts above the current context
              type: boolean
          responses:
            200:
              description: Success
        post:
          displayName: create_external_tool_accounts
          description: Create an external tool
          body:
            multipart/form-data:
              type: object
              properties:
                name:
                  required: true
                  displayName: name
                  description: The name of the tool
                  type: string
                privacy_level:
                  required: true
                  displayName: privacy_level
                  description: What information to send to the external tool.
                  type: string
                consumer_key:
                  required: true
                  displayName: consumer_key
                  description: The consumer key for the external tool
                  type: string
                shared_secret:
                  required: true
                  displayName: shared_secret
                  description: The shared secret with the external tool
                  type: string
                description:
                  required: false
                  displayName: description
                  description: A description of the tool
                  type: string
                url:
                  required: false
                  displayName: url
                  description: |
                    The url to match links against. Either "url" or "domain" should be set,

                    not both.
                  type: string
                domain:
                  required: false
                  displayName: domain
                  description: |
                    The domain to match links against. Either "url" or "domain" should be

                    set, not both.
                  type: string
                icon_url:
                  required: false
                  displayName: icon_url
                  description: The url of the icon to show for this tool
                  type: string
                text:
                  required: false
                  displayName: text
                  description: The default text to show for this tool
                  type: string
                custom_fields[field_name]:
                  required: false
                  displayName: custom_fields[field_name]
                  description: |
                    Custom fields that will be sent to the tool consumer; can be used

                    multiple times
                  type: string
                account_navigation[url]:
                  required: false
                  displayName: account_navigation[url]
                  description: The url of the external tool for account navigation
                  type: string
                account_navigation[enabled]:
                  required: false
                  displayName: account_navigation[enabled]
                  description: Set this to enable this feature
                  type: boolean
                account_navigation[text]:
                  required: false
                  displayName: account_navigation[text]
                  description: The text that will show on the left-tab in the account navigation
                  type: string
                account_navigation[selection_width]:
                  required: false
                  displayName: account_navigation[selection_width]
                  description: The width of the dialog the tool is launched in
                  type: string
                account_navigation[selection_height]:
                  required: false
                  displayName: account_navigation[selection_height]
                  description: The height of the dialog the tool is launched in
                  type: string
                account_navigation[display_type]:
                  required: false
                  displayName: account_navigation[display_type]
                  description: |
                    The layout type to use when launching the tool. Must be

                    "full_width", "full_width_in_context", "borderless", or "default"
                  type: string
                user_navigation[url]:
                  required: false
                  displayName: user_navigation[url]
                  description: The url of the external tool for user navigation
                  type: string
                user_navigation[enabled]:
                  required: false
                  displayName: user_navigation[enabled]
                  description: Set this to enable this feature
                  type: boolean
                user_navigation[text]:
                  required: false
                  displayName: user_navigation[text]
                  description: The text that will show on the left-tab in the user navigation
                  type: string
                user_navigation[visibility]:
                  required: false
                  displayName: user_navigation[visibility]
                  description: |
                    Who will see the navigation tab. "admins" for admins, "public" or

                    "members" for everyone
                  type: string
                course_home_sub_navigation[url]:
                  required: false
                  displayName: course_home_sub_navigation[url]
                  description: The url of the external tool for right-side course home navigation menu
                  type: string
                course_home_sub_navigation[enabled]:
                  required: false
                  displayName: course_home_sub_navigation[enabled]
                  description: Set this to enable this feature
                  type: boolean
                course_home_sub_navigation[text]:
                  required: false
                  displayName: course_home_sub_navigation[text]
                  description: The text that will show on the right-side course home navigation menu
                  type: string
                course_home_sub_navigation[icon_url]:
                  required: false
                  displayName: course_home_sub_navigation[icon_url]
                  description: The url of the icon to show in the right-side course home navigation menu
                  type: string
                course_navigation[enabled]:
                  required: false
                  displayName: course_navigation[enabled]
                  description: Set this to enable this feature
                  type: boolean
                course_navigation[text]:
                  required: false
                  displayName: course_navigation[text]
                  description: The text that will show on the left-tab in the course navigation
                  type: string
                course_navigation[visibility]:
                  required: false
                  displayName: course_navigation[visibility]
                  description: |
                    Who will see the navigation tab. "admins" for course admins, "members" for

                    students, null for everyone
                  type: string
                  enum:
                  - admins
                  - members
                course_navigation[windowTarget]:
                  required: false
                  displayName: course_navigation[windowTarget]
                  description: |
                    Determines how the navigation tab will be opened.

                    "_blank"	Launches the external tool in a new window or tab.

                    "_self"	(Default) Launches the external tool in an iframe inside of Canvas.
                  type: string
                  enum:
                  - _blank
                  - _self
                course_navigation[default]:
                  required: false
                  displayName: course_navigation[default]
                  description: |
                    Whether the navigation option will show in the course by default or

                    whether the teacher will have to explicitly enable it
                  type: boolean
                course_navigation[display_type]:
                  required: false
                  displayName: course_navigation[display_type]
                  description: |
                    The layout type to use when launching the tool. Must be

                    "full_width", "full_width_in_context", "borderless", or "default"
                  type: string
                editor_button[url]:
                  required: false
                  displayName: editor_button[url]
                  description: The url of the external tool
                  type: string
                editor_button[enabled]:
                  required: false
                  displayName: editor_button[enabled]
                  description: Set this to enable this feature
                  type: boolean
                editor_button[icon_url]:
                  required: false
                  displayName: editor_button[icon_url]
                  description: The url of the icon to show in the WYSIWYG editor
                  type: string
                editor_button[selection_width]:
                  required: false
                  displayName: editor_button[selection_width]
                  description: The width of the dialog the tool is launched in
                  type: string
                editor_button[selection_height]:
                  required: false
                  displayName: editor_button[selection_height]
                  description: The height of the dialog the tool is launched in
                  type: string
                editor_button[message_type]:
                  required: false
                  displayName: editor_button[message_type]
                  description: |
                    Set this to ContentItemSelectionRequest to tell the tool to use

                    content-item; otherwise, omit
                  type: string
                homework_submission[url]:
                  required: false
                  displayName: homework_submission[url]
                  description: The url of the external tool
                  type: string
                homework_submission[enabled]:
                  required: false
                  displayName: homework_submission[enabled]
                  description: Set this to enable this feature
                  type: boolean
                homework_submission[text]:
                  required: false
                  displayName: homework_submission[text]
                  description: The text that will show on the homework submission tab
                  type: string
                homework_submission[message_type]:
                  required: false
                  displayName: homework_submission[message_type]
                  description: |
                    Set this to ContentItemSelectionRequest to tell the tool to use

                    content-item; otherwise, omit
                  type: string
                link_selection[url]:
                  required: false
                  displayName: link_selection[url]
                  description: The url of the external tool
                  type: string
                link_selection[enabled]:
                  required: false
                  displayName: link_selection[enabled]
                  description: Set this to enable this feature
                  type: boolean
                link_selection[text]:
                  required: false
                  displayName: link_selection[text]
                  description: The text that will show for the link selection text
                  type: string
                link_selection[message_type]:
                  required: false
                  displayName: link_selection[message_type]
                  description: |
                    Set this to ContentItemSelectionRequest to tell the tool to use

                    content-item; otherwise, omit
                  type: string
                migration_selection[url]:
                  required: false
                  displayName: migration_selection[url]
                  description: The url of the external tool
                  type: string
                migration_selection[enabled]:
                  required: false
                  displayName: migration_selection[enabled]
                  description: Set this to enable this feature
                  type: boolean
                migration_selection[message_type]:
                  required: false
                  displayName: migration_selection[message_type]
                  description: |
                    Set this to ContentItemSelectionRequest to tell the tool to use

                    content-item; otherwise, omit
                  type: string
                tool_configuration[url]:
                  required: false
                  displayName: tool_configuration[url]
                  description: The url of the external tool
                  type: string
                tool_configuration[enabled]:
                  required: false
                  displayName: tool_configuration[enabled]
                  description: Set this to enable this feature
                  type: boolean
                tool_configuration[message_type]:
                  required: false
                  displayName: tool_configuration[message_type]
                  description: |
                    Set this to ContentItemSelectionRequest to tell the tool to use

                    content-item; otherwise, omit
                  type: string
                tool_configuration[prefer_sis_email]:
                  required: false
                  displayName: tool_configuration[prefer_sis_email]
                  description: |
                    Set this to default the lis_person_contact_email_primary to prefer

                    provisioned sis_email; otherwise, omit
                  type: boolean
                resource_selection[url]:
                  required: false
                  displayName: resource_selection[url]
                  description: The url of the external tool
                  type: string
                resource_selection[enabled]:
                  required: false
                  displayName: resource_selection[enabled]
                  description: Set this to enable this feature
                  type: boolean
                resource_selection[icon_url]:
                  required: false
                  displayName: resource_selection[icon_url]
                  description: The url of the icon to show in the module external tool list
                  type: string
                resource_selection[selection_width]:
                  required: false
                  displayName: resource_selection[selection_width]
                  description: The width of the dialog the tool is launched in
                  type: string
                resource_selection[selection_height]:
                  required: false
                  displayName: resource_selection[selection_height]
                  description: The height of the dialog the tool is launched in
                  type: string
                config_type:
                  required: false
                  displayName: config_type
                  description: |
                    Configuration can be passed in as CC xml instead of using query

                    parameters. If this value is "by_url" or "by_xml" then an xml

                    configuration will be expected in either the "config_xml" or "config_url"

                    parameter. Note that the name parameter overrides the tool name provided

                    in the xml
                  type: string
                config_xml:
                  required: false
                  displayName: config_xml
                  description: |
                    XML tool configuration, as specified in the CC xml specification. This is

                    required if "config_type" is set to "by_xml"
                  type: string
                config_url:
                  required: false
                  displayName: config_url
                  description: |
                    URL where the server can retrieve an XML tool configuration, as specified

                    in the CC xml specification. This is required if "config_type" is set to

                    "by_url"
                  type: string
                not_selectable:
                  required: false
                  displayName: not_selectable
                  description: |
                    Default: false, if set to true the tool won't show up in the external tool

                    selection UI in modules and assignments
                  type: boolean
                oauth_compliant:
                  required: false
                  displayName: oauth_compliant
                  description: |
                    Default: false, if set to true LTI query params will not be copied to the

                    post body.
                  type: boolean
          responses:
            200:
              description: Success
        /sessionless_launch:
          get:
            displayName: get_sessionless_launch_url_for_external_tool_accounts
            description: Get a sessionless launch url for an external tool.
            queryParameters:
              id:
                required: false
                displayName: id
                description: The external id of the tool to launch.
                type: string
              url:
                required: false
                displayName: url
                description: The LTI launch url for the external tool.
                type: string
              assignment_id:
                required: false
                displayName: assignment_id
                description: The assignment id for an assignment launch. Required if launch_type is set to "assessment".
                type: string
              module_item_id:
                required: false
                displayName: module_item_id
                description: The assignment id for a module item launch. Required if launch_type is set to "module_item".
                type: string
              launch_type:
                required: false
                displayName: launch_type
                description: |
                  The type of launch to perform on the external tool. Placement names (eg. "course_navigation")

                  can also be specified to use the custom launch url for that placement; if done, the tool id

                  must be provided.
                type: string
                enum:
                - assessment
                - module_item
            responses:
              200:
                description: Success
        /{external_tool_id}:
          uriParameters:
            external_tool_id:
              required: true
              displayName: external_tool_id
              description: ID
              type: string
          get:
            displayName: get_single_external_tool_accounts
            description: Get a single external tool
            responses:
              200:
                description: Success
          put:
            displayName: edit_external_tool_accounts
            description: Edit an external tool
            responses:
              200:
                description: Success
          delete:
            displayName: delete_external_tool_accounts
            description: Delete an external tool
            responses:
              200:
                description: Success
      /features:
        get:
          displayName: list_features_accounts
          description: List features
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /enabled:
          get:
            displayName: list_enabled_features_accounts
            description: List enabled features
            responses:
              200:
                description: Success
        /flags/{feature}:
          uriParameters:
            feature:
              required: true
              displayName: feature
              description: ID
              type: string
          get:
            displayName: get_feature_flag_accounts
            description: Get feature flag
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: set_feature_flag_accounts
            description: Set feature flag
            body:
              multipart/form-data:
                type: object
                properties:
                  state:
                    required: false
                    displayName: state
                    description: |
                      "off":: The feature is not available for the course, user, or account and sub-accounts.

                      "allowed":: (valid only on accounts) The feature is off in the account, but may be enabled in
                                  sub-accounts and courses by setting a feature flag on the sub-account or course.
                      "on":: The feature is turned on unconditionally for the user, course, or account and sub-accounts.
                    type: string
                    enum:
                    - off
                    - allowed
                    - on
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: remove_feature_flag_accounts
            description: Remove feature flag
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /grading_periods:
        get:
          displayName: list_grading_periods_accounts
          description: List grading periods
          responses:
            200:
              description: Success
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          delete:
            displayName: delete_grading_period_accounts
            description: Delete a grading period
            responses:
              200:
                description: Success
      /grading_standards:
        post:
          displayName: create_new_grading_standard_accounts
          description: Create a new grading standard
          body:
            multipart/form-data:
              type: object
              properties:
                title:
                  required: true
                  displayName: title
                  description: The title for the Grading Standard.
                  type: string
                grading_scheme_entry[name]:
                  required: true
                  displayName: grading_scheme_entry[name]
                  description: |
                    The name for an entry value within a GradingStandard that describes the range of the value

                    e.g. A-
                  type: array
                  items:
                    type: string
                grading_scheme_entry[value]:
                  required: true
                  displayName: grading_scheme_entry[value]
                  description: |
                    The value for the name of the entry within a GradingStandard.

                    The entry represents the lower bound of the range for the entry.

                    This range includes the value up to the next entry in the GradingStandard,

                    or 100 if there is no upper bound. The lowest value will have a lower bound range of 0.

                    e.g. 93
                  type: array
                  items:
                    type: integer
                    format: int32
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        get:
          displayName: list_grading_standards_available_in_context_accounts
          description: List the grading standards available in a context.
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{grading_standard_id}:
          uriParameters:
            grading_standard_id:
              required: true
              displayName: grading_standard_id
              description: ID
              type: string
          get:
            displayName: get_single_grading_standard_in_context_accounts
            description: Get a single grading standard in a context.
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /group_categories:
        get:
          displayName: list_group_categories_for_context_accounts
          description: List group categories for a context
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_group_category_accounts
          description: Create a Group Category
          body:
            multipart/form-data:
              type: object
              properties:
                name:
                  required: true
                  displayName: name
                  description: Name of the group category
                  type: string
                self_signup:
                  required: false
                  displayName: self_signup
                  description: |
                    Allow students to sign up for a group themselves (Course Only).

                    valid values are:

                    "enabled":: allows students to self sign up for any group in course

                    "restricted":: allows students to self sign up only for groups in the
                                   same section null disallows self sign up
                  type: string
                  enum:
                  - enabled
                  - restricted
                auto_leader:
                  required: false
                  displayName: auto_leader
                  description: |
                    Assigns group leaders automatically when generating and allocating students to groups

                    Valid values are:

                    "first":: the first student to be allocated to a group is the leader

                    "random":: a random student from all members is chosen as the leader
                  type: string
                  enum:
                  - first
                  - random
                group_limit:
                  required: false
                  displayName: group_limit
                  description: |
                    Limit the maximum number of users in each group (Course Only). Requires

                    self signup.
                  type: integer
                  format: int64
                sis_group_category_id:
                  required: false
                  displayName: sis_group_category_id
                  description: The unique SIS identifier.
                  type: string
                create_group_count:
                  required: false
                  displayName: create_group_count
                  description: Create this number of groups (Course Only).
                  type: integer
                  format: int64
                split_group_count:
                  required: false
                  displayName: split_group_count
                  description: |
                    (Deprecated)

                    Create this number of groups, and evenly distribute students

                    among them. not allowed with "enable_self_signup". because

                    the group assignment happens synchronously, it's recommended

                    that you instead use the assign_unassigned_members endpoint.

                    (Course Only)
                  type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /groups:
        get:
          displayName: list_groups_available_in_context_accounts
          description: List the groups available in a context.
          queryParameters:
            only_own_groups:
              required: false
              displayName: only_own_groups
              description: Will only include groups that the user belongs to if this is set
              type: boolean
            include:
              required: false
              displayName: include
              description: |
                - "tabs": Include the list of tabs configured for each group.  See the
                  {api:TabsController#index List available tabs API} for more information.
              type: string
              enum:
              - tabs
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /logins:
        get:
          displayName: list_user_logins_accounts
          description: List user logins
          responses:
            200:
              description: Success
        post:
          displayName: create_user_login
          description: Create a user login
          body:
            multipart/form-data:
              type: object
              properties:
                user[id]:
                  required: true
                  displayName: user[id]
                  description: The ID of the user to create the login for.
                  type: string
                login[unique_id]:
                  required: true
                  displayName: login[unique_id]
                  description: The unique ID for the new login.
                  type: string
                login[password]:
                  required: false
                  displayName: login[password]
                  description: The new login's password.
                  type: string
                login[sis_user_id]:
                  required: false
                  displayName: login[sis_user_id]
                  description: |
                    SIS ID for the login. To set this parameter, the caller must be able to

                    manage SIS permissions on the account.
                  type: string
                login[integration_id]:
                  required: false
                  displayName: login[integration_id]
                  description: |
                    Integration ID for the login. To set this parameter, the caller must be able to

                    manage SIS permissions on the account. The Integration ID is a secondary

                    identifier useful for more complex SIS integrations.
                  type: string
                login[authentication_provider_id]:
                  required: false
                  displayName: login[authentication_provider_id]
                  description: |
                    The authentication provider this login is associated with. Logins

                    associated with a specific provider can only be used with that provider.

                    Legacy providers (LDAP, CAS, SAML) will search for logins associated with

                    them, or unassociated logins. New providers will only search for logins

                    explicitly associated with them. This can be the integer ID of the

                    provider, or the type of the provider (in which case, it will find the

                    first matching provider).
                  type: string
          responses:
            200:
              description: Success
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          put:
            displayName: edit_user_login
            description: Edit a user login
            body:
              multipart/form-data:
                type: object
                properties:
                  login[unique_id]:
                    required: false
                    displayName: login[unique_id]
                    description: The new unique ID for the login.
                    type: string
                  login[password]:
                    required: false
                    displayName: login[password]
                    description: |
                      The new password for the login. Can only be set by an admin user if admins

                      are allowed to change passwords for the account.
                    type: string
                  login[sis_user_id]:
                    required: false
                    displayName: login[sis_user_id]
                    description: |
                      SIS ID for the login. To set this parameter, the caller must be able to

                      manage SIS permissions on the account.
                    type: string
                  login[integration_id]:
                    required: false
                    displayName: login[integration_id]
                    description: |
                      Integration ID for the login. To set this parameter, the caller must be able to

                      manage SIS permissions on the account. The Integration ID is a secondary

                      identifier useful for more complex SIS integrations.
                    type: string
            responses:
              200:
                description: Success
      /root_outcome_group:
        get:
          displayName: redirect_to_root_outcome_group_for_context_accounts
          description: Redirect to root outcome group for context
          responses:
            200:
              description: Success
      /outcome_groups:
        get:
          displayName: get_all_outcome_groups_for_context_accounts
          description: Get all outcome groups for context
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: show_outcome_group_accounts
            description: Show an outcome group
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: update_outcome_group_accounts
            description: Update an outcome group
            body:
              multipart/form-data:
                type: object
                properties:
                  title:
                    required: false
                    displayName: title
                    description: The new outcome group title.
                    type: string
                  description:
                    required: false
                    displayName: description
                    description: The new outcome group description.
                    type: string
                  vendor_guid:
                    required: false
                    displayName: vendor_guid
                    description: A custom GUID for the learning standard.
                    type: string
                  parent_outcome_group_id:
                    required: false
                    displayName: parent_outcome_group_id
                    description: The id of the new parent outcome group.
                    type: integer
                    format: int64
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: delete_outcome_group_accounts
            description: Delete an outcome group
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /outcomes:
            get:
              displayName: list_linked_outcomes_accounts
              description: List linked outcomes
              queryParameters:
                outcome_style:
                  required: false
                  displayName: outcome_style
                  description: |
                    The detail level of the outcomes. Defaults to "abbrev".

                    Specify "full" for more information.
                  type: string
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            post:
              displayName: create_link_outcome_accounts
              description: Create/link an outcome
              body:
                multipart/form-data:
                  type: object
                  properties:
                    outcome_id:
                      required: false
                      displayName: outcome_id
                      description: The ID of the existing outcome to link.
                      type: integer
                      format: int64
                    move_from:
                      required: false
                      displayName: move_from
                      description: The ID of the old outcome group. Only used if outcome_id is present.
                      type: integer
                      format: int64
                    title:
                      required: false
                      displayName: title
                      description: The title of the new outcome. Required if outcome_id is absent.
                      type: string
                    display_name:
                      required: false
                      displayName: display_name
                      description: |
                        A friendly name shown in reports for outcomes with cryptic titles,

                        such as common core standards names.
                      type: string
                    description:
                      required: false
                      displayName: description
                      description: The description of the new outcome.
                      type: string
                    vendor_guid:
                      required: false
                      displayName: vendor_guid
                      description: A custom GUID for the learning standard.
                      type: string
                    mastery_points:
                      required: false
                      displayName: mastery_points
                      description: The mastery threshold for the embedded rubric criterion.
                      type: integer
                      format: int64
                    ratings[description]:
                      required: false
                      displayName: ratings[description]
                      description: The description of a rating level for the embedded rubric criterion.
                      type: array
                      items:
                        type: string
                    ratings[points]:
                      required: false
                      displayName: ratings[points]
                      description: The points corresponding to a rating level for the embedded rubric criterion.
                      type: array
                      items:
                        type: integer
                        format: int32
                    calculation_method:
                      required: false
                      displayName: calculation_method
                      description: The new calculation method.  Defaults to "decaying_average"
                      type: string
                      enum:
                      - decaying_average
                      - n_mastery
                      - latest
                      - highest
                    calculation_int:
                      required: false
                      displayName: calculation_int
                      description: The new calculation int.  Only applies if the calculation_method is "decaying_average" or "n_mastery". Defaults to 65
                      type: integer
                      format: int64
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            /{outcome_id}:
              uriParameters:
                outcome_id:
                  required: true
                  displayName: outcome_id
                  description: The ID of the existing outcome to link.
                  type: integer
                  format: int64
              put:
                displayName: create_link_outcome_accounts_outcome_id
                description: Create/link an outcome
                body:
                  multipart/form-data:
                    type: object
                    properties:
                      move_from:
                        required: false
                        displayName: move_from
                        description: The ID of the old outcome group. Only used if outcome_id is present.
                        type: integer
                        format: int64
                      title:
                        required: false
                        displayName: title
                        description: The title of the new outcome. Required if outcome_id is absent.
                        type: string
                      display_name:
                        required: false
                        displayName: display_name
                        description: |
                          A friendly name shown in reports for outcomes with cryptic titles,

                          such as common core standards names.
                        type: string
                      description:
                        required: false
                        displayName: description
                        description: The description of the new outcome.
                        type: string
                      vendor_guid:
                        required: false
                        displayName: vendor_guid
                        description: A custom GUID for the learning standard.
                        type: string
                      mastery_points:
                        required: false
                        displayName: mastery_points
                        description: The mastery threshold for the embedded rubric criterion.
                        type: integer
                        format: int64
                      ratings[description]:
                        required: false
                        displayName: ratings[description]
                        description: The description of a rating level for the embedded rubric criterion.
                        type: array
                        items:
                          type: string
                      ratings[points]:
                        required: false
                        displayName: ratings[points]
                        description: The points corresponding to a rating level for the embedded rubric criterion.
                        type: array
                        items:
                          type: integer
                          format: int32
                      calculation_method:
                        required: false
                        displayName: calculation_method
                        description: The new calculation method.  Defaults to "decaying_average"
                        type: string
                        enum:
                        - decaying_average
                        - n_mastery
                        - latest
                        - highest
                      calculation_int:
                        required: false
                        displayName: calculation_int
                        description: The new calculation int.  Only applies if the calculation_method is "decaying_average" or "n_mastery". Defaults to 65
                        type: integer
                        format: int64
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
              delete:
                displayName: unlink_outcome_accounts
                description: Unlink an outcome
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
          /subgroups:
            get:
              displayName: list_subgroups_accounts
              description: List subgroups
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            post:
              displayName: create_subgroup_accounts
              description: Create a subgroup
              body:
                multipart/form-data:
                  type: object
                  properties:
                    title:
                      required: true
                      displayName: title
                      description: The title of the new outcome group.
                      type: string
                    description:
                      required: false
                      displayName: description
                      description: The description of the new outcome group.
                      type: string
                    vendor_guid:
                      required: false
                      displayName: vendor_guid
                      description: A custom GUID for the learning standard
                      type: string
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
          /import:
            post:
              displayName: import_outcome_group_accounts
              description: Import an outcome group
              body:
                multipart/form-data:
                  type: object
                  properties:
                    source_outcome_group_id:
                      required: true
                      displayName: source_outcome_group_id
                      description: The ID of the source outcome group.
                      type: integer
                      format: int64
                    async:
                      required: false
                      displayName: async
                      description: |
                        If true, perform action asynchronously.  In that case, this endpoint

                        will return a Progress object instead of an OutcomeGroup.

                        Use the {api:ProgressController#show progress endpoint}

                        to query the status of the operation.  The imported outcome group id

                        and url will be returned in the results of the Progress object

                        as "outcome_group_id" and "outcome_group_url"
                      type: boolean
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
      /outcome_group_links:
        get:
          displayName: get_all_outcome_links_for_context_accounts
          description: Get all outcome links for context
          queryParameters:
            outcome_style:
              required: false
              displayName: outcome_style
              description: |
                The detail level of the outcomes. Defaults to "abbrev".

                Specify "full" for more information.
              type: string
            outcome_group_style:
              required: false
              displayName: outcome_group_style
              description: |
                The detail level of the outcome groups. Defaults to "abbrev".

                Specify "full" for more information.
              type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /outcome_imports:
        post:
          displayName: import_outcomes_accounts
          description: Import Outcomes
          body:
            multipart/form-data:
              type: object
              properties:
                import_type:
                  required: false
                  displayName: import_type
                  description: |
                    Choose the data format for reading outcome data. With a standard Canvas

                    install, this option can only be 'instructure_csv', and if unprovided,

                    will be assumed to be so. Can be part of the query string.
                  type: string
                attachment:
                  required: false
                  displayName: attachment
                  description: |
                    There are two ways to post outcome import data - either via a

                    multipart/form-data form-field-style attachment, or via a non-multipart

                    raw post request.


                    'attachment' is required for multipart/form-data style posts. Assumed to

                    be outcome data from a file upload form field named 'attachment'.


                    Examples:
                      curl -F attachment=@<filename> -H "Authorization: Bearer <token>" \
                          'https://<canvas>/api/v1/accounts/<account_id>/outcome_imports?import_type=instructure_csv'
                      curl -F attachment=@<filename> -H "Authorization: Bearer <token>" \
                          'https://<canvas>/api/v1/courses/<course_id>/outcome_imports?import_type=instructure_csv'

                    If you decide to do a raw post, you can skip the 'attachment' argument,

                    but you will then be required to provide a suitable Content-Type header.

                    You are encouraged to also provide the 'extension' argument.


                    Examples:
                      curl -H 'Content-Type: text/csv' --data-binary @<filename>.csv \
                          -H "Authorization: Bearer <token>" \
                          'https://<canvas>/api/v1/accounts/<account_id>/outcome_imports?import_type=instructure_csv'

                      curl -H 'Content-Type: text/csv' --data-binary @<filename>.csv \
                          -H "Authorization: Bearer <token>" \
                          'https://<canvas>/api/v1/courses/<course_id>/outcome_imports?import_type=instructure_csv'
                  type: string
                extension:
                  required: false
                  displayName: extension
                  description: |
                    Recommended for raw post request style imports. This field will be used to

                    distinguish between csv and other file format extensions that

                    would usually be provided with the filename in the multipart post request

                    scenario. If not provided, this value will be inferred from the

                    Content-Type, falling back to csv-file format if all else fails.
                  type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_outcome_import_status_accounts
            description: Get Outcome import status
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /outcome_proficiency:
        post:
          displayName: create_update_proficiency_ratings
          description: Create/update proficiency ratings
          body:
            multipart/form-data:
              type: object
              properties:
                ratings[description]:
                  required: false
                  displayName: ratings[description]
                  description: The description of the rating level.
                  type: array
                  items:
                    type: string
                ratings[points]:
                  required: false
                  displayName: ratings[points]
                  description: The non-negative number of points of the rating level. Points across ratings should be strictly decreasing in value.
                  type: array
                  items:
                    type: integer
                    format: int32
                ratings[mastery]:
                  required: false
                  displayName: ratings[mastery]
                  description: Indicates the rating level where mastery is first achieved. Only one rating in a proficiency should be marked for mastery.
                  type: array
                  items:
                    type: integer
                    format: int32
                ratings[color]:
                  required: false
                  displayName: ratings[color]
                  description: The color associated with the rating level. Should be a hex color code like '00FFFF'.
                  type: array
                  items:
                    type: integer
                    format: int32
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        get:
          displayName: get_proficiency_ratings
          description: Get proficiency ratings
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /roles:
        get:
          displayName: list_roles
          description: List roles
          queryParameters:
            state:
              required: false
              displayName: state
              description: |
                Filter by role state. If this argument is omitted, only 'active' roles are

                returned.
              type: string
              enum:
              - active
              - inactive
            show_inherited:
              required: false
              displayName: show_inherited
              description: |
                If this argument is true, all roles inherited from parent accounts will

                be included.
              type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_new_role
          description: Create a new role
          body:
            multipart/form-data:
              type: object
              properties:
                label:
                  required: true
                  displayName: label
                  description: Label for the role.
                  type: string
                role:
                  required: false
                  displayName: role
                  description: Deprecated alias for label.
                  type: string
                base_role_type:
                  required: false
                  displayName: base_role_type
                  description: |
                    Specifies the role type that will be used as a base

                    for the permissions granted to this role.


                    Defaults to 'AccountMembership' if absent
                  type: string
                  enum:
                  - AccountMembership
                  - StudentEnrollment
                  - TeacherEnrollment
                  - TaEnrollment
                  - ObserverEnrollment
                  - DesignerEnrollment
                permissions[<X>][explicit]:
                  required: false
                  displayName: permissions[<X>][explicit]
                  description: no description
                  type: boolean
                permissions[<X>][enabled]:
                  required: false
                  displayName: permissions[<X>][enabled]
                  description: |
                    If explicit is 1 and enabled is 1, permission <X> will be explicitly

                    granted to this role. If explicit is 1 and enabled has any other value

                    (typically 0), permission <X> will be explicitly denied to this role. If

                    explicit is any other value (typically 0) or absent, or if enabled is

                    absent, the value for permission <X> will be inherited from upstream.

                    Ignored if permission <X> is locked upstream (in an ancestor account).


                    May occur multiple times with unique values for <X>. Recognized

                    permission names for <X> are:

                      [For Account-Level Roles Only]
                      become_user                      -- Users - act as
                      import_sis                       -- SIS Data - import
                      manage_account_memberships       -- Admins - add / remove
                      manage_account_settings          -- Account-level settings - manage
                      manage_alerts                    -- Global announcements - add / edit / delete
                      manage_catalog                   -- Catalog - manage
                      manage_courses                   -- Courses - add / edit / delete
                      manage_developer_keys            -- Developer keys - manage
                      manage_feature_flags             -- Feature Options - enable / disable
                      manage_global_outcomes           -- Manage learning outcomes
                      manage_jobs                      -- Manage background jobs
                      manage_master_courses            -- Blueprint Courses - add / edit / associate / delete
                      manage_role_overrides            -- Permissions - manage
                      manage_storage_quotas            -- Storage Quotas - manage
                      manage_sis                       -- SIS data - manage
                      manage_site_settings             -- Manage site-wide and plugin settings
                      manage_user_logins               -- Users - manage login details
                      manage_user_observers            -- Users - add / remove observers
                      read_course_content              -- Course Content - view
                      read_course_list                 -- Courses - view list
                      read_messages                    -- View notifications sent to users
                      reset_any_mfa                    -- Reset multi-factor authentication
                      site_admin                       -- Use the Site Admin section and admin all other accounts
                      view_course_changes              -- Courses - view change logs
                      view_error_reports               -- View error reports
                      view_grade_changes               -- Grades - view change logs
                      view_jobs                        -- View background jobs
                      view_notifications               -- Notifications - view
                      view_quiz_answer_audits          -- Quizzes - view submission log
                      view_statistics                  -- Statistics - view
                      undelete_courses                 -- Courses - undelete

                      [For both Account-Level and Course-Level roles]
                       Note: Applicable enrollment types for course-level roles are given in brackets:
                             S = student, T = teacher, A = TA, D = designer, O = observer.
                             Lower-case letters indicate permissions that are off by default.
                             A missing letter indicates the permission cannot be enabled for the role
                             or any derived custom roles.
                      change_course_state              -- [ TaD ] Course State - manage
                      create_collaborations            -- [STADo] Student Collaborations - create
                      create_conferences               -- [STADo] Web conferences - create
                      create_forum                     -- [STADo] Discussions - create
                      generate_observer_pairing_code   -- [ tado] Users - Generate observer pairing codes for students
                      import_outcomes                  -- [ TaDo] Learning Outcomes - import
                      lti_add_edit                     -- [ TAD ] LTI - add / edit / delete
                      manage_admin_users               -- [ Tad ] Users - add / remove teachers, course designers, or TAs in courses
                      manage_assignments               -- [ TADo] Assignments and Quizzes - add / edit / delete
                      manage_calendar                  -- [sTADo] Course Calendar - add / edit / delete events
                      manage_content                   -- [ TADo] Course Content - add / edit / delete
                      manage_files                     -- [ TADo] Course Files - add / edit / delete
                      manage_grades                    -- [ TA  ] Grades - edit
                      manage_groups                    -- [ TAD ] Groups - add / edit / delete
                      manage_interaction_alerts        -- [ Ta  ] Alerts - add / edit / delete
                      manage_outcomes                  -- [sTaDo] Learning Outcomes - add / edit / delete
                      manage_sections                  -- [ TaD ] Course Sections - add / edit / delete
                      manage_students                  -- [ TAD ] Users - add / remove students in courses
                      manage_user_notes                -- [ TA  ] Faculty Journal - manage entries
                      manage_rubrics                   -- [ TAD ] Rubrics - add / edit / delete
                      manage_wiki                      -- [ TADo] Pages - add / edit / delete
                      moderate_forum                   -- [sTADo] Discussions - moderate
                      post_to_forum                    -- [STADo] Discussions - post
                      read_announcements               -- [STADO] Announcements - view
                      read_email_addresses             -- [sTAdo] Users - view primary email address
                      read_forum                       -- [STADO] Discussions - view
                      read_question_banks              -- [ TADo] Question banks - view and link
                      read_reports                     -- [ TAD ] Courses - view usage reports
                      read_roster                      -- [STADo] Users - view list
                      read_sis                         -- [sTa  ] SIS Data - read
                      select_final_grade               -- [ TA  ] Grades - select final grade for moderation
                      send_messages                    -- [STADo] Conversations - send messages to individual course members
                      send_messages_all                -- [sTADo] Conversations - send messages to entire class
                      view_all_grades                  -- [ TAd ] Grades - view all grades
                      view_audit_trail                 -- [ t   ] Grades - view audit trail
                      view_group_pages                 -- [sTADo] Groups - view all student groups
                      view_user_logins                 -- [ TA  ] Users - view login IDs

                    Some of these permissions are applicable only for roles on the site admin

                    account, on a root account, or for course-level roles with a particular base role type;

                    if a specified permission is inapplicable, it will be ignored.


                    Additional permissions may exist based on installed plugins.
                  type: boolean
                permissions[<X>][locked]:
                  required: false
                  displayName: permissions[<X>][locked]
                  description: |
                    If the value is 1, permission <X> will be locked downstream (new roles in

                    subaccounts cannot override the setting). For any other value, permission

                    <X> is left unlocked. Ignored if permission <X> is already locked

                    upstream. May occur multiple times with unique values for <X>.
                  type: boolean
                permissions[<X>][applies_to_self]:
                  required: false
                  displayName: permissions[<X>][applies_to_self]
                  description: |
                    If the value is 1, permission <X> applies to the account this role is in.

                    The default value is 1. Must be true if applies_to_descendants is false.

                    This value is only returned if enabled is true.
                  type: boolean
                permissions[<X>][applies_to_descendants]:
                  required: false
                  displayName: permissions[<X>][applies_to_descendants]
                  description: |
                    If the value is 1, permission <X> cascades down to sub accounts of the

                    account this role is in. The default value is 1.  Must be true if

                    applies_to_self is false.This value is only returned if enabled is true.
                  type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_single_role
            description: Get a single role
            queryParameters:
              role_id:
                required: true
                displayName: role_id
                description: The unique identifier for the role
                type: integer
                format: int64
              role:
                required: false
                displayName: role
                description: The name for the role
                type: string
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: deactivate_role
            description: Deactivate a role
            queryParameters:
              role_id:
                required: true
                displayName: role_id
                description: The unique identifier for the role
                type: integer
                format: int64
              role:
                required: false
                displayName: role
                description: The name for the role
                type: string
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: update_role
            description: Update a role
            body:
              multipart/form-data:
                type: object
                properties:
                  label:
                    required: false
                    displayName: label
                    description: The label for the role. Can only change the label of a custom role that belongs directly to the account.
                    type: string
                  permissions[<X>][explicit]:
                    required: false
                    displayName: permissions[<X>][explicit]
                    description: no description
                    type: boolean
                  permissions[<X>][enabled]:
                    required: false
                    displayName: permissions[<X>][enabled]
                    description: |
                      These arguments are described in the documentation for the

                      {api:RoleOverridesController#add_role add_role method}.
                    type: boolean
                  permissions[<X>][applies_to_self]:
                    required: false
                    displayName: permissions[<X>][applies_to_self]
                    description: |
                      If the value is 1, permission <X> applies to the account this role is in.

                      The default value is 1. Must be true if applies_to_descendants is false.

                      This value is only returned if enabled is true.
                    type: boolean
                  permissions[<X>][applies_to_descendants]:
                    required: false
                    displayName: permissions[<X>][applies_to_descendants]
                    description: |
                      If the value is 1, permission <X> cascades down to sub accounts of the

                      account this role is in. The default value is 1.  Must be true if

                      applies_to_self is false.This value is only returned if enabled is true.
                    type: boolean
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /activate:
            post:
              displayName: activate_role
              description: Activate a role
              body:
                multipart/form-data:
                  type: object
                  properties:
                    role_id:
                      required: true
                      displayName: role_id
                      description: The unique identifier for the role
                      type: integer
                      format: int64
                    role:
                      required: false
                      displayName: role
                      description: The name for the role
                      type: object
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
      /rubrics:
        get:
          displayName: list_rubrics_accounts
          description: List rubrics
          responses:
            200:
              description: Success
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_single_rubric_accounts
            description: Get a single rubric
            queryParameters:
              include:
                required: false
                displayName: include
                description: Related records to include in the response.
                type: string
                enum:
                - assessments
                - graded_assessments
                - peer_assessments
                - associations
                - assignment_associations
                - course_associations
                - account_associations
              style:
                required: false
                displayName: style
                description: Applicable only if assessments are being returned. If included, returns either all criteria data associated with the assessment, or just the comments. If not included, both data and comments are omitted.
                type: string
                enum:
                - full
                - comments_only
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /sis_import_errors:
        get:
          displayName: get_sis_import_error_list_sis_import_errors
          description: Get SIS import error list
          queryParameters:
            failure:
              required: false
              displayName: failure
              description: If set, only shows errors on a sis import that would cause a failure.
              type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /sis_imports:
        get:
          displayName: get_sis_import_list
          description: Get SIS import list
          queryParameters:
            created_since:
              required: false
              displayName: created_since
              description: If set, only shows imports created after the specified date (use ISO8601 format)
              type: object
            workflow_state:
              required: false
              displayName: workflow_state
              description: If set, only returns imports that are in the given state.
              type: string
              enum:
              - initializing
              - created
              - importing
              - cleanup_batch
              - imported
              - imported_with_messages
              - aborted
              - failed
              - failed_with_messages
              - restoring
              - partially_restored
              - restored
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: import_sis_data
          description: Import SIS data
          body:
            multipart/form-data:
              type: object
              properties:
                import_type:
                  required: false
                  displayName: import_type
                  description: |
                    Choose the data format for reading SIS data. With a standard Canvas

                    install, this option can only be 'instructure_csv', and if unprovided,

                    will be assumed to be so. Can be part of the query string.
                  type: string
                attachment:
                  required: false
                  displayName: attachment
                  description: |
                    There are two ways to post SIS import data - either via a

                    multipart/form-data form-field-style attachment, or via a non-multipart

                    raw post request.


                    'attachment' is required for multipart/form-data style posts. Assumed to

                    be SIS data from a file upload form field named 'attachment'.


                    Examples:
                      curl -F attachment=@<filename> -H "Authorization: Bearer <token>" \
                          https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv

                    If you decide to do a raw post, you can skip the 'attachment' argument,

                    but you will then be required to provide a suitable Content-Type header.

                    You are encouraged to also provide the 'extension' argument.


                    Examples:
                      curl -H 'Content-Type: application/octet-stream' --data-binary @<filename>.zip \
                          -H "Authorization: Bearer <token>" \
                          https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv&extension=zip

                      curl -H 'Content-Type: application/zip' --data-binary @<filename>.zip \
                          -H "Authorization: Bearer <token>" \
                          https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv

                      curl -H 'Content-Type: text/csv' --data-binary @<filename>.csv \
                          -H "Authorization: Bearer <token>" \
                          https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv

                      curl -H 'Content-Type: text/csv' --data-binary @<filename>.csv \
                          -H "Authorization: Bearer <token>" \
                          https://<canvas>/api/v1/accounts/<account_id>/sis_imports.json?import_type=instructure_csv&batch_mode=1&batch_mode_term_id=15
                  type: string
                extension:
                  required: false
                  displayName: extension
                  description: |
                    Recommended for raw post request style imports. This field will be used to

                    distinguish between zip, xml, csv, and other file format extensions that

                    would usually be provided with the filename in the multipart post request

                    scenario. If not provided, this value will be inferred from the

                    Content-Type, falling back to zip-file format if all else fails.
                  type: string
                batch_mode:
                  required: false
                  displayName: batch_mode
                  description: |
                    If set, this SIS import will be run in batch mode, deleting any data

                    previously imported via SIS that is not present in this latest import.

                    See the SIS CSV Format page for details.

                    Batch mode cannot be used with diffing.
                  type: boolean
                batch_mode_term_id:
                  required: false
                  displayName: batch_mode_term_id
                  description: Limit deletions to only this term. Required if batch mode is enabled.
                  type: string
                multi_term_batch_mode:
                  required: false
                  displayName: multi_term_batch_mode
                  description: Runs batch mode against all terms in terms file. Requires change_threshold.
                  type: boolean
                skip_deletes:
                  required: false
                  displayName: skip_deletes
                  description: |
                    When set the import will skip any deletes. This does not account for

                    objects that are deleted during the batch mode cleanup process.
                  type: boolean
                override_sis_stickiness:
                  required: false
                  displayName: override_sis_stickiness
                  description: |
                    Many fields on records in Canvas can be marked "sticky," which means that

                    when something changes in the UI apart from the SIS, that field gets

                    "stuck." In this way, by default, SIS imports do not override UI changes.

                    If this field is present, however, it will tell the SIS import to ignore

                    "stickiness" and override all fields.
                  type: boolean
                add_sis_stickiness:
                  required: false
                  displayName: add_sis_stickiness
                  description: |
                    This option, if present, will process all changes as if they were UI

                    changes. This means that "stickiness" will be added to changed fields.

                    This option is only processed if 'override_sis_stickiness' is also provided.
                  type: boolean
                clear_sis_stickiness:
                  required: false
                  displayName: clear_sis_stickiness
                  description: |
                    This option, if present, will clear "stickiness" from all fields touched

                    by this import. Requires that 'override_sis_stickiness' is also provided.

                    If 'add_sis_stickiness' is also provided, 'clear_sis_stickiness' will

                    overrule the behavior of 'add_sis_stickiness'
                  type: boolean
                diffing_data_set_identifier:
                  required: false
                  displayName: diffing_data_set_identifier
                  description: |
                    If set on a CSV import, Canvas will attempt to optimize the SIS import by

                    comparing this set of CSVs to the previous set that has the same data set

                    identifier, and only applying the difference between the two. See the

                    SIS CSV Format documentation for more details.

                    Diffing cannot be used with batch_mode
                  type: string
                diffing_remaster_data_set:
                  required: false
                  displayName: diffing_remaster_data_set
                  description: |
                    If true, and diffing_data_set_identifier is sent, this SIS import will be

                    part of the data set, but diffing will not be performed. See the SIS CSV

                    Format documentation for details.
                  type: boolean
                diffing_drop_status:
                  required: false
                  displayName: diffing_drop_status
                  description: |
                    If diffing_drop_status is passed, this SIS import will use this status for

                    enrollments that are not included in the sis_batch. Defaults to 'deleted'
                  type: string
                  enum:
                  - deleted
                  - completed
                  - inactive
                change_threshold:
                  required: false
                  displayName: change_threshold
                  description: |
                    If set with batch_mode, the batch cleanup process will not run if the

                    number of items deleted is higher than the percentage set. If set to 10

                    and a term has 200 enrollments, and batch would delete more than 20 of

                    the enrollments the batch will abort before the enrollments are deleted.

                    The change_threshold will be evaluated for course, sections, and

                    enrollments independently.

                    If set with diffing, diffing  will not be performed if the files are

                    greater than the threshold as a percent. If set to 5 and the file is more

                    than 5% smaller or more than 5% larger than the file that is being

                    compared to, diffing will not be performed. If the files are less than 5%,

                    diffing will be performed. The way the percent is calculated is by taking

                    the size of the current import and dividing it by the size of the previous

                    import. The formula used is:

                    |(1 - current_file_size / previous_file_size)| * 100

                    See the SIS CSV Format documentation for more details.

                    Required for multi_term_batch_mode.
                  type: integer
                  format: int64
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /importing:
          get:
            displayName: get_current_importing_sis_import
            description: Get the current importing SIS import
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_sis_import_status
            description: Get SIS import status
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /errors:
            get:
              displayName: get_sis_import_error_list_sis_imports
              description: Get SIS import error list
              queryParameters:
                failure:
                  required: false
                  displayName: failure
                  description: If set, only shows errors on a sis import that would cause a failure.
                  type: boolean
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
          /restore_states:
            put:
              displayName: restore_workflow_states_of_sis_imported_items
              description: Restore workflow_states of SIS imported items
              body:
                multipart/form-data:
                  type: object
                  properties:
                    batch_mode:
                      required: false
                      displayName: batch_mode
                      description: If set, will only restore items that were deleted from batch_mode.
                      type: boolean
                    undelete_only:
                      required: false
                      displayName: undelete_only
                      description: |
                        If set, will only restore items that were deleted. This will ignore any

                        items that were created or modified.
                      type: boolean
                    unconclude_only:
                      required: false
                      displayName: unconclude_only
                      description: |
                        If set, will only restore enrollments that were concluded. This will

                        ignore any items that were created or deleted.
                      type: boolean
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
          /abort:
            put:
              displayName: abort_sis_import
              description: Abort SIS import
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
        /abort_all_pending:
          put:
            displayName: abort_all_pending_sis_imports
            description: Abort all pending SIS imports
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: boolean
      /shared_brand_configs:
        post:
          displayName: share_brandconfig_theme
          description: Share a BrandConfig (Theme)
          body:
            multipart/form-data:
              type: object
              properties:
                shared_brand_config[name]:
                  required: true
                  displayName: shared_brand_config[name]
                  description: Name to share this BrandConfig (theme) as.
                  type: string
                shared_brand_config[brand_config_md5]:
                  required: true
                  displayName: shared_brand_config[brand_config_md5]
                  description: MD5 of brand_config to share
                  type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          put:
            displayName: update_shared_theme
            description: Update a shared theme
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /users:
        get:
          displayName: list_users_in_account
          description: List users in account
          queryParameters:
            search_term:
              required: false
              displayName: search_term
              description: |
                The partial name or full ID of the users to match and return in the

                results list. Must be at least 3 characters.


                Note that the API will prefer matching on canonical user ID if the ID has

                a numeric form. It will only search against other fields if non-numeric

                in form, or if the numeric value doesn't yield any matches. Queries by

                administrative users will search on SIS ID, login ID, name, or email

                address; non-administrative queries will only be compared against name.
              type: string
            sort:
              required: false
              displayName: sort
              description: The column to sort results by.
              type: string
              enum:
              - username
              - email
              - sis_id
              - last_login
            order:
              required: false
              displayName: order
              description: The order to sort the given column by.
              type: string
              enum:
              - asc
              - desc
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_user
          description: Create a user
          body:
            multipart/form-data:
              type: object
              properties:
                pseudonym[unique_id]:
                  required: true
                  displayName: pseudonym[unique_id]
                  description: |
                    User's login ID. If this is a self-registration, it must be a valid

                    email address.
                  type: string
                user[name]:
                  required: false
                  displayName: user[name]
                  description: |
                    The full name of the user. This name will be used by teacher for grading.

                    Required if this is a self-registration.
                  type: string
                user[short_name]:
                  required: false
                  displayName: user[short_name]
                  description: User's name as it will be displayed in discussions, messages, and comments.
                  type: string
                user[sortable_name]:
                  required: false
                  displayName: user[sortable_name]
                  description: User's name as used to sort alphabetically in lists.
                  type: string
                user[time_zone]:
                  required: false
                  displayName: user[time_zone]
                  description: |
                    The time zone for the user. Allowed time zones are

                    {http://www.iana.org/time-zones IANA time zones} or friendlier

                    {http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html Ruby on Rails time zones}.
                  type: string
                user[locale]:
                  required: false
                  displayName: user[locale]
                  description: |
                    The user's preferred language, from the list of languages Canvas supports.

                    This is in RFC-5646 format.
                  type: string
                user[birthdate]:
                  required: false
                  displayName: user[birthdate]
                  description: The user's birth date.
                  type: object
                user[terms_of_use]:
                  required: false
                  displayName: user[terms_of_use]
                  description: |
                    Whether the user accepts the terms of use. Required if this is a

                    self-registration and this canvas instance requires users to accept

                    the terms (on by default).


                    If this is true, it will mark the user as having accepted the terms of use.
                  type: boolean
                user[skip_registration]:
                  required: false
                  displayName: user[skip_registration]
                  description: |
                    Automatically mark the user as registered.


                    If this is true, it is recommended to set <tt>"pseudonym[send_confirmation]"</tt> to true as well.

                    Otherwise, the user will not receive any messages about their account creation.


                    The users communication channel confirmation can be skipped by setting

                    <tt>"communication_channel[skip_confirmation]"</tt> to true as well.
                  type: boolean
                pseudonym[password]:
                  required: false
                  displayName: pseudonym[password]
                  description: User's password. Cannot be set during self-registration.
                  type: string
                pseudonym[sis_user_id]:
                  required: false
                  displayName: pseudonym[sis_user_id]
                  description: |
                    SIS ID for the user's account. To set this parameter, the caller must be

                    able to manage SIS permissions.
                  type: string
                pseudonym[integration_id]:
                  required: false
                  displayName: pseudonym[integration_id]
                  description: |
                    Integration ID for the login. To set this parameter, the caller must be able to

                    manage SIS permissions. The Integration ID is a secondary

                    identifier useful for more complex SIS integrations.
                  type: string
                pseudonym[send_confirmation]:
                  required: false
                  displayName: pseudonym[send_confirmation]
                  description: |
                    Send user notification of account creation if true.

                    Automatically set to true during self-registration.
                  type: boolean
                pseudonym[force_self_registration]:
                  required: false
                  displayName: pseudonym[force_self_registration]
                  description: |
                    Send user a self-registration style email if true.

                    Setting it means the users will get a notification asking them

                    to "complete the registration process" by clicking it, setting

                    a password, and letting them in.  Will only be executed on

                    if the user does not need admin approval.

                    Defaults to false unless explicitly provided.
                  type: boolean
                pseudonym[authentication_provider_id]:
                  required: false
                  displayName: pseudonym[authentication_provider_id]
                  description: |
                    The authentication provider this login is associated with. Logins

                    associated with a specific provider can only be used with that provider.

                    Legacy providers (LDAP, CAS, SAML) will search for logins associated with

                    them, or unassociated logins. New providers will only search for logins

                    explicitly associated with them. This can be the integer ID of the

                    provider, or the type of the provider (in which case, it will find the

                    first matching provider).
                  type: string
                communication_channel[type]:
                  required: false
                  displayName: communication_channel[type]
                  description: The communication channel type, e.g. 'email' or 'sms'.
                  type: string
                communication_channel[address]:
                  required: false
                  displayName: communication_channel[address]
                  description: The communication channel address, e.g. the user's email address.
                  type: string
                communication_channel[confirmation_url]:
                  required: false
                  displayName: communication_channel[confirmation_url]
                  description: |
                    Only valid for account admins. If true, returns the new user account

                    confirmation URL in the response.
                  type: boolean
                communication_channel[skip_confirmation]:
                  required: false
                  displayName: communication_channel[skip_confirmation]
                  description: |
                    Only valid for site admins and account admins making requests; If true, the channel is

                    automatically validated and no confirmation email or SMS is sent.

                    Otherwise, the user must respond to a confirmation message to confirm the

                    channel.


                    If this is true, it is recommended to set <tt>"pseudonym[send_confirmation]"</tt> to true as well.

                    Otherwise, the user will not receive any messages about their account creation.
                  type: boolean
                force_validations:
                  required: false
                  displayName: force_validations
                  description: |
                    If true, validations are performed on the newly created user (and their associated pseudonym)

                    even if the request is made by a privileged user like an admin. When set to false,

                    or not included in the request parameters, any newly created users are subject to

                    validations unless the request is made by a user with a 'manage_user_logins' right.

                    In which case, certain validations such as 'require_acceptance_of_terms' and

                    'require_presence_of_name' are not enforced. Use this parameter to return helpful json

                    errors while building users with an admin request.
                  type: boolean
                enable_sis_reactivation:
                  required: false
                  displayName: enable_sis_reactivation
                  description: |
                    When true, will first try to re-activate a deleted user with matching sis_user_id if possible.

                    This is commonly done with user[skip_registration] and communication_channel[skip_confirmation]

                    so that the default communication_channel is also restored.
                  type: boolean
                destination:
                  required: false
                  displayName: destination
                  description: |
                    If you're setting the password for the newly created user, you can provide this param

                    with a valid URL pointing into this Canvas installation, and the response will include

                    a destination field that's a URL that you can redirect a browser to and have the newly

                    created user automatically logged in. The URL is only valid for a short time, and must

                    match the domain this request is directed to, and be for a well-formed path that Canvas

                    can recognize.
                  type: object
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{user_id}:
          uriParameters:
            user_id:
              required: true
              displayName: user_id
              description: ID
              type: string
          delete:
            displayName: delete_user_from_root_account
            description: Delete a user from the root account
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /self_registration:
        post:
          displayName: self_register_user
          description: Self register a user
          body:
            multipart/form-data:
              type: object
              properties:
                user[name]:
                  required: true
                  displayName: user[name]
                  description: The full name of the user. This name will be used by teacher for grading.
                  type: string
                user[terms_of_use]:
                  required: true
                  displayName: user[terms_of_use]
                  description: Whether the user accepts the terms of use.
                  type: boolean
                pseudonym[unique_id]:
                  required: true
                  displayName: pseudonym[unique_id]
                  description: User's login ID. Must be a valid email address.
                  type: string
                user[short_name]:
                  required: false
                  displayName: user[short_name]
                  description: User's name as it will be displayed in discussions, messages, and comments.
                  type: string
                user[sortable_name]:
                  required: false
                  displayName: user[sortable_name]
                  description: User's name as used to sort alphabetically in lists.
                  type: string
                user[time_zone]:
                  required: false
                  displayName: user[time_zone]
                  description: |
                    The time zone for the user. Allowed time zones are

                    {http://www.iana.org/time-zones IANA time zones} or friendlier

                    {http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html Ruby on Rails time zones}.
                  type: string
                user[locale]:
                  required: false
                  displayName: user[locale]
                  description: |
                    The user's preferred language, from the list of languages Canvas supports.

                    This is in RFC-5646 format.
                  type: string
                user[birthdate]:
                  required: false
                  displayName: user[birthdate]
                  description: The user's birth date.
                  type: object
                communication_channel[type]:
                  required: false
                  displayName: communication_channel[type]
                  description: The communication channel type, e.g. 'email' or 'sms'.
                  type: string
                communication_channel[address]:
                  required: false
                  displayName: communication_channel[address]
                  description: The communication channel address, e.g. the user's email address.
                  type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /analytics:
        /terms:
          /{term_id}:
            uriParameters:
              term_id:
                required: true
                displayName: term_id
                description: ID
                type: string
            /activity:
              get:
                displayName: get_department_level_participation_data_terms
                description: Get department-level participation data
                responses:
                  200:
                    description: Success
            /grades:
              get:
                displayName: get_department_level_grade_data_terms
                description: Get department-level grade data
                responses:
                  200:
                    description: Success
            /statistics:
              get:
                displayName: get_department_level_statistics_terms
                description: Get department-level statistics
                responses:
                  200:
                    description: Success
        /current:
          /activity:
            get:
              displayName: get_department_level_participation_data_current
              description: Get department-level participation data
              responses:
                200:
                  description: Success
          /grades:
            get:
              displayName: get_department_level_grade_data_current
              description: Get department-level grade data
              responses:
                200:
                  description: Success
          /statistics:
            get:
              displayName: get_department_level_statistics_current
              description: Get department-level statistics
              responses:
                200:
                  description: Success
        /completed:
          /activity:
            get:
              displayName: get_department_level_participation_data_completed
              description: Get department-level participation data
              responses:
                200:
                  description: Success
          /grades:
            get:
              displayName: get_department_level_grade_data_completed
              description: Get department-level grade data
              responses:
                200:
                  description: Success
          /statistics:
            get:
              displayName: get_department_level_statistics_completed
              description: Get department-level statistics
              responses:
                200:
                  description: Success
  /course_accounts:
    get:
      displayName: list_accounts_for_course_admins
      description: List accounts for course admins
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
  /announcements:
    get:
      displayName: list_announcements
      description: List announcements
      queryParameters:
        context_codes:
          required: true
          displayName: context_codes
          description: |
            List of context_codes to retrieve announcements for (for example, +course_123+). Only courses

            are presently supported. The call will fail unless the caller has View Announcements permission

            in all listed courses.
          type: array
          items:
            type: string
        start_date:
          required: false
          displayName: start_date
          description: |
            Only return announcements posted since the start_date (inclusive).

            Defaults to 14 days ago. The value should be formatted as: yyyy-mm-dd or ISO 8601 YYYY-MM-DDTHH:MM:SSZ.
          type: object
        end_date:
          required: false
          displayName: end_date
          description: |
            Only return announcements posted before the end_date (inclusive).

            Defaults to 28 days from start_date. The value should be formatted as: yyyy-mm-dd or ISO 8601 YYYY-MM-DDTHH:MM:SSZ.

            Announcements scheduled for future posting will only be returned to course administrators.
          type: object
        active_only:
          required: false
          displayName: active_only
          description: |
            Only return active announcements that have been published.

            Applies only to requesting users that have permission to view

            unpublished items.

            Defaults to false for users with access to view unpublished items,

            otherwise true and unmodifiable.
          type: boolean
        include:
          required: false
          displayName: include
          description: |
            Optional list of resources to include with the response. May include

            a string of the name of the resource. Possible values are:

            "sections", "sections_user_count"

            if "sections" is passed, includes the course sections that are associated

            with the topic, if the topic is specific to sertain sections of the course.

            If "sections_user_count" is passed, then:
              (a) If sections were asked for *and* the topic is specific to certain
                  course sections sections, includes the number of users in each
                  section. (as part of the section json asked for above)
              (b) Else, includes at the root level the total number of users in the
                  topic's context (group or course) that the topic applies to.
          type: object
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
  /appointment_groups:
    get:
      displayName: list_appointment_groups
      description: List appointment groups
      queryParameters:
        scope:
          required: false
          displayName: scope
          description: Defaults to "reservable"
          type: string
          enum:
          - reservable
          - manageable
        context_codes:
          required: false
          displayName: context_codes
          description: Array of context codes used to limit returned results.
          type: array
          items:
            type: string
        include_past_appointments:
          required: false
          displayName: include_past_appointments
          description: Defaults to false. If true, includes past appointment groups
          type: boolean
        include:
          required: false
          displayName: include
          description: |
            Array of additional information to include.


            "appointments":: calendar event time slots for this appointment group

            "child_events":: reservations of those time slots

            "participant_count":: number of reservations

            "reserved_times":: the event id, start time and end time of reservations
                               the current user has made)
            "all_context_codes":: all context codes associated with this appointment group
          type: string
          enum:
          - appointments
          - child_events
          - participant_count
          - reserved_times
          - all_context_codes
      responses:
        200:
          description: Success
    post:
      displayName: create_appointment_group
      description: Create an appointment group
      body:
        multipart/form-data:
          type: object
          properties:
            appointment_group[context_codes]:
              required: true
              displayName: appointment_group[context_codes]
              description: |
                Array of context codes (courses, e.g. course_1) this group should be

                linked to (1 or more). Users in the course(s) with appropriate permissions

                will be able to sign up for this appointment group.
              type: array
              items:
                type: string
            appointment_group[title]:
              required: true
              displayName: appointment_group[title]
              description: Short title for the appointment group.
              type: string
            appointment_group[sub_context_codes]:
              required: false
              displayName: appointment_group[sub_context_codes]
              description: |
                Array of sub context codes (course sections or a single group category)

                this group should be linked to. Used to limit the appointment group to

                particular sections. If a group category is specified, students will sign

                up in groups and the participant_type will be "Group" instead of "User".
              type: array
              items:
                type: string
            appointment_group[description]:
              required: false
              displayName: appointment_group[description]
              description: Longer text description of the appointment group.
              type: string
            appointment_group[location_name]:
              required: false
              displayName: appointment_group[location_name]
              description: Location name of the appointment group.
              type: string
            appointment_group[location_address]:
              required: false
              displayName: appointment_group[location_address]
              description: Location address.
              type: string
            appointment_group[publish]:
              required: false
              displayName: appointment_group[publish]
              description: |
                Indicates whether this appointment group should be published (i.e. made

                available for signup). Once published, an appointment group cannot be

                unpublished. Defaults to false.
              type: boolean
            appointment_group[participants_per_appointment]:
              required: false
              displayName: appointment_group[participants_per_appointment]
              description: |
                Maximum number of participants that may register for each time slot.

                Defaults to null (no limit).
              type: integer
              format: int64
            appointment_group[min_appointments_per_participant]:
              required: false
              displayName: appointment_group[min_appointments_per_participant]
              description: |
                Minimum number of time slots a user must register for. If not set, users

                do not need to sign up for any time slots.
              type: integer
              format: int64
            appointment_group[max_appointments_per_participant]:
              required: false
              displayName: appointment_group[max_appointments_per_participant]
              description: Maximum number of time slots a user may register for.
              type: integer
              format: int64
            appointment_group[new_appointments][X]:
              required: false
              displayName: appointment_group[new_appointments][X]
              description: |
                Nested array of start time/end time pairs indicating time slots for this

                appointment group. Refer to the example request.
              type: array
              items:
                type: string
            appointment_group[participant_visibility]:
              required: false
              displayName: appointment_group[participant_visibility]
              description: |
                "private":: participants cannot see who has signed up for a particular
                            time slot
                "protected":: participants can see who has signed up.  Defaults to
                              "private".
              type: string
      responses:
        200:
          description: Success
    /{id}:
      uriParameters:
        id:
          required: true
          displayName: id
          description: ID
          type: string
      get:
        displayName: get_single_appointment_group
        description: Get a single appointment group
        queryParameters:
          include:
            required: false
            displayName: include
            description: |
              Array of additional information to include. See include[] argument of

              "List appointment groups" action.


              "child_events":: reservations of time slots time slots

              "appointments":: will always be returned

              "all_context_codes":: all context codes associated with this appointment group
            type: string
            enum:
            - child_events
            - appointments
            - all_context_codes
        responses:
          200:
            description: Success
      put:
        displayName: update_appointment_group
        description: Update an appointment group
        body:
          multipart/form-data:
            type: object
            properties:
              appointment_group[context_codes]:
                required: true
                displayName: appointment_group[context_codes]
                description: |
                  Array of context codes (courses, e.g. course_1) this group should be

                  linked to (1 or more). Users in the course(s) with appropriate permissions

                  will be able to sign up for this appointment group.
                type: array
                items:
                  type: string
              appointment_group[sub_context_codes]:
                required: false
                displayName: appointment_group[sub_context_codes]
                description: |
                  Array of sub context codes (course sections or a single group category)

                  this group should be linked to. Used to limit the appointment group to

                  particular sections. If a group category is specified, students will sign

                  up in groups and the participant_type will be "Group" instead of "User".
                type: array
                items:
                  type: string
              appointment_group[title]:
                required: false
                displayName: appointment_group[title]
                description: Short title for the appointment group.
                type: string
              appointment_group[description]:
                required: false
                displayName: appointment_group[description]
                description: Longer text description of the appointment group.
                type: string
              appointment_group[location_name]:
                required: false
                displayName: appointment_group[location_name]
                description: Location name of the appointment group.
                type: string
              appointment_group[location_address]:
                required: false
                displayName: appointment_group[location_address]
                description: Location address.
                type: string
              appointment_group[publish]:
                required: false
                displayName: appointment_group[publish]
                description: |
                  Indicates whether this appointment group should be published (i.e. made

                  available for signup). Once published, an appointment group cannot be

                  unpublished. Defaults to false.
                type: boolean
              appointment_group[participants_per_appointment]:
                required: false
                displayName: appointment_group[participants_per_appointment]
                description: |
                  Maximum number of participants that may register for each time slot.

                  Defaults to null (no limit).
                type: integer
                format: int64
              appointment_group[min_appointments_per_participant]:
                required: false
                displayName: appointment_group[min_appointments_per_participant]
                description: |
                  Minimum number of time slots a user must register for. If not set, users

                  do not need to sign up for any time slots.
                type: integer
                format: int64
              appointment_group[max_appointments_per_participant]:
                required: false
                displayName: appointment_group[max_appointments_per_participant]
                description: Maximum number of time slots a user may register for.
                type: integer
                format: int64
              appointment_group[new_appointments][X]:
                required: false
                displayName: appointment_group[new_appointments][X]
                description: |
                  Nested array of start time/end time pairs indicating time slots for this

                  appointment group. Refer to the example request.
                type: array
                items:
                  type: string
              appointment_group[participant_visibility]:
                required: false
                displayName: appointment_group[participant_visibility]
                description: |
                  "private":: participants cannot see who has signed up for a particular
                              time slot
                  "protected":: participants can see who has signed up. Defaults to "private".
                type: string
        responses:
          200:
            description: Success
      delete:
        displayName: delete_appointment_group
        description: Delete an appointment group
        queryParameters:
          cancel_reason:
            required: false
            displayName: cancel_reason
            description: Reason for deleting/canceling the appointment group.
            type: string
        responses:
          200:
            description: Success
      /users:
        get:
          displayName: list_user_participants
          description: List user participants
          queryParameters:
            registration_status:
              required: false
              displayName: registration_status
              description: Limits results to the a given participation status, defaults to "all"
              type: string
              enum:
              - all
              - registered
          responses:
            200:
              description: Success
      /groups:
        get:
          displayName: list_student_group_participants
          description: List student group participants
          queryParameters:
            registration_status:
              required: false
              displayName: registration_status
              description: Limits results to the a given participation status, defaults to "all"
              type: string
              enum:
              - all
              - registered
          responses:
            200:
              description: Success
    /next_appointment:
      get:
        displayName: get_next_appointment
        description: Get next appointment
        queryParameters:
          appointment_group_ids:
            required: false
            displayName: appointment_group_ids
            description: List of ids of appointment groups to search.
            type: array
            items:
              type: string
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
  /brand_variables:
    get:
      displayName: get_brand_config_variables_that_should_be_used_for_this_domain
      description: Get the brand config variables that should be used for this domain
      responses:
        200:
          description: Success
  /calendar_events:
    get:
      displayName: list_calendar_events
      description: List calendar events
      queryParameters:
        type:
          required: false
          displayName: type
          description: Defaults to "event"
          type: string
        start_date:
          required: false
          displayName: start_date
          description: |
            Only return events since the start_date (inclusive).

            Defaults to today. The value should be formatted as: yyyy-mm-dd or ISO 8601 YYYY-MM-DDTHH:MM:SSZ.
          type: object
        end_date:
          required: false
          displayName: end_date
          description: |
            Only return events before the end_date (inclusive).

            Defaults to start_date. The value should be formatted as: yyyy-mm-dd or ISO 8601 YYYY-MM-DDTHH:MM:SSZ.

            If end_date is the same as start_date, then only events on that day are

            returned.
          type: object
        undated:
          required: false
          displayName: undated
          description: |
            Defaults to false (dated events only).

            If true, only return undated events and ignore start_date and end_date.
          type: boolean
        all_events:
          required: false
          displayName: all_events
          description: |
            Defaults to false (uses start_date, end_date, and undated criteria).

            If true, all events are returned, ignoring start_date, end_date, and undated criteria.
          type: boolean
        context_codes:
          required: false
          displayName: context_codes
          description: |
            List of context codes of courses/groups/users whose events you want to see.

            If not specified, defaults to the current user (i.e personal calendar,

            no course/group events). Limited to 10 context codes, additional ones are

            ignored. The format of this field is the context type, followed by an

            underscore, followed by the context id. For example: course_42
          type: array
          items:
            type: string
        excludes:
          required: false
          displayName: excludes
          description: Array of attributes to exclude. Possible values are "description", "child_events" and "assignment"
          type: array
          items:
            type: object
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
    post:
      displayName: create_calendar_event
      description: Create a calendar event
      body:
        multipart/form-data:
          type: object
          properties:
            calendar_event[context_code]:
              required: true
              displayName: calendar_event[context_code]
              description: |
                Context code of the course/group/user whose calendar this event should be

                added to.
              type: string
            calendar_event[title]:
              required: false
              displayName: calendar_event[title]
              description: Short title for the calendar event.
              type: string
            calendar_event[description]:
              required: false
              displayName: calendar_event[description]
              description: Longer HTML description of the event.
              type: string
            calendar_event[start_at]:
              required: false
              displayName: calendar_event[start_at]
              description: Start date/time of the event.
              type: object
            calendar_event[end_at]:
              required: false
              displayName: calendar_event[end_at]
              description: End date/time of the event.
              type: object
            calendar_event[location_name]:
              required: false
              displayName: calendar_event[location_name]
              description: Location name of the event.
              type: string
            calendar_event[location_address]:
              required: false
              displayName: calendar_event[location_address]
              description: Location address
              type: string
            calendar_event[time_zone_edited]:
              required: false
              displayName: calendar_event[time_zone_edited]
              description: |
                Time zone of the user editing the event. Allowed time zones are

                {http://www.iana.org/time-zones IANA time zones} or friendlier

                {http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html Ruby on Rails time zones}.
              type: string
            calendar_event[all_day]:
              required: false
              displayName: calendar_event[all_day]
              description: When true event is considered to span the whole day and times are ignored.
              type: boolean
            calendar_event[child_event_data][X][start_at]:
              required: false
              displayName: calendar_event[child_event_data][X][start_at]
              description: |
                Section-level start time(s) if this is a course event. X can be any

                identifier, provided that it is consistent across the start_at, end_at

                and context_code
              type: object
            calendar_event[child_event_data][X][end_at]:
              required: false
              displayName: calendar_event[child_event_data][X][end_at]
              description: Section-level end time(s) if this is a course event.
              type: object
            calendar_event[child_event_data][X][context_code]:
              required: false
              displayName: calendar_event[child_event_data][X][context_code]
              description: Context code(s) corresponding to the section-level start and end time(s).
              type: string
            calendar_event[duplicate][count]:
              required: false
              displayName: calendar_event[duplicate][count]
              description: Number of times to copy/duplicate the event.  Count cannot exceed 200.
              type: number
              format: double
            calendar_event[duplicate][interval]:
              required: false
              displayName: calendar_event[duplicate][interval]
              description: Defaults to 1 if duplicate `count` is set.  The interval between the duplicated events.
              type: number
              format: double
            calendar_event[duplicate][frequency]:
              required: false
              displayName: calendar_event[duplicate][frequency]
              description: Defaults to "weekly".  The frequency at which to duplicate the event
              type: string
              enum:
              - daily
              - weekly
              - monthly
            calendar_event[duplicate][append_iterator]:
              required: false
              displayName: calendar_event[duplicate][append_iterator]
              description: |
                Defaults to false.  If set to `true`, an increasing counter number will be appended to the event title

                when the event is duplicated.  (e.g. Event 1, Event 2, Event 3, etc)
              type: boolean
      responses:
        200:
          description: Success
    /{id}:
      uriParameters:
        id:
          required: true
          displayName: id
          description: ID
          type: string
      get:
        displayName: get_single_calendar_event_or_assignment
        description: Get a single calendar event or assignment
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      put:
        displayName: update_calendar_event
        description: Update a calendar event
        body:
          multipart/form-data:
            type: object
            properties:
              calendar_event[context_code]:
                required: false
                displayName: calendar_event[context_code]
                description: |
                  Context code of the course/group/user to move this event to.

                  Scheduler appointments and events with section-specific times cannot be moved between calendars.
                type: string
              calendar_event[title]:
                required: false
                displayName: calendar_event[title]
                description: Short title for the calendar event.
                type: string
              calendar_event[description]:
                required: false
                displayName: calendar_event[description]
                description: Longer HTML description of the event.
                type: string
              calendar_event[start_at]:
                required: false
                displayName: calendar_event[start_at]
                description: Start date/time of the event.
                type: object
              calendar_event[end_at]:
                required: false
                displayName: calendar_event[end_at]
                description: End date/time of the event.
                type: object
              calendar_event[location_name]:
                required: false
                displayName: calendar_event[location_name]
                description: Location name of the event.
                type: string
              calendar_event[location_address]:
                required: false
                displayName: calendar_event[location_address]
                description: Location address
                type: string
              calendar_event[time_zone_edited]:
                required: false
                displayName: calendar_event[time_zone_edited]
                description: |
                  Time zone of the user editing the event. Allowed time zones are

                  {http://www.iana.org/time-zones IANA time zones} or friendlier

                  {http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html Ruby on Rails time zones}.
                type: string
              calendar_event[all_day]:
                required: false
                displayName: calendar_event[all_day]
                description: When true event is considered to span the whole day and times are ignored.
                type: boolean
              calendar_event[child_event_data][X][start_at]:
                required: false
                displayName: calendar_event[child_event_data][X][start_at]
                description: |
                  Section-level start time(s) if this is a course event. X can be any

                  identifier, provided that it is consistent across the start_at, end_at

                  and context_code
                type: object
              calendar_event[child_event_data][X][end_at]:
                required: false
                displayName: calendar_event[child_event_data][X][end_at]
                description: Section-level end time(s) if this is a course event.
                type: object
              calendar_event[child_event_data][X][context_code]:
                required: false
                displayName: calendar_event[child_event_data][X][context_code]
                description: Context code(s) corresponding to the section-level start and end time(s).
                type: string
        responses:
          200:
            description: Success
      delete:
        displayName: delete_calendar_event
        description: Delete a calendar event
        queryParameters:
          cancel_reason:
            required: false
            displayName: cancel_reason
            description: Reason for deleting/canceling the event.
            type: string
        responses:
          200:
            description: Success
      /reservations:
        post:
          displayName: reserve_time_slot
          description: Reserve a time slot
          body:
            multipart/form-data:
              type: object
              properties:
                participant_id:
                  required: false
                  displayName: participant_id
                  description: |
                    User or group id for whom you are making the reservation (depends on the

                    participant type). Defaults to the current user (or user's candidate group).
                  type: string
                comments:
                  required: false
                  displayName: comments
                  description: Comments to associate with this reservation
                  type: string
                cancel_existing:
                  required: false
                  displayName: cancel_existing
                  description: |
                    Defaults to false. If true, cancel any previous reservation(s) for this

                    participant and appointment group.
                  type: boolean
          responses:
            200:
              description: Success
        /{participant_id}:
          uriParameters:
            participant_id:
              required: true
              displayName: participant_id
              description: |
                User or group id for whom you are making the reservation (depends on the

                participant type). Defaults to the current user (or user's candidate group).
              type: string
          post:
            displayName: reserve_time_slot_participant_id
            description: Reserve a time slot
            body:
              multipart/form-data:
                type: object
                properties:
                  comments:
                    required: false
                    displayName: comments
                    description: Comments to associate with this reservation
                    type: string
                  cancel_existing:
                    required: false
                    displayName: cancel_existing
                    description: |
                      Defaults to false. If true, cancel any previous reservation(s) for this

                      participant and appointment group.
                    type: boolean
            responses:
              200:
                description: Success
  /collaborations/{id}/members:
    uriParameters:
      id:
        required: true
        displayName: id
        description: ID
        type: string
    get:
      displayName: list_members_of_collaboration
      description: List members of a collaboration.
      queryParameters:
        include:
          required: false
          displayName: include
          description: |
            - "collaborator_lti_id": Optional information to include with each member.
              Represents an identifier to be used for the member in an LTI context.
            - "avatar_image_url": Optional information to include with each member.
              The url for the avatar of a collaborator with type 'user'.
          type: string
          enum:
          - collaborator_lti_id
          - avatar_image_url
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
  /comm_messages:
    get:
      displayName: list_of_commmessages_for_user
      description: List of CommMessages for a user
      queryParameters:
        user_id:
          required: true
          displayName: user_id
          description: The user id for whom you want to retrieve CommMessages
          type: string
        start_time:
          required: false
          displayName: start_time
          description: The beginning of the time range you want to retrieve message from.
          type: object
        end_time:
          required: false
          displayName: end_time
          description: The end of the time range you want to retrieve messages for.
          type: object
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
  /conversations:
    get:
      displayName: list_conversations
      description: List conversations
      queryParameters:
        scope:
          required: false
          displayName: scope
          description: |
            When set, only return conversations of the specified type. For example,

            set to "unread" to return only conversations that haven't been read.

            The default behavior is to return all non-archived conversations (i.e.

            read and unread).
          type: string
          enum:
          - unread
          - starred
          - archived
        filter:
          required: false
          displayName: filter
          description: |
            When set, only return conversations for the specified courses, groups

            or users. The id should be prefixed with its type, e.g. "user_123" or

            "course_456". Can be an array (by setting "filter[]") or single value

            (by setting "filter")
          type: array
          items:
            type: string
        filter_mode:
          required: false
          displayName: filter_mode
          description: |
            When filter[] contains multiple filters, combine them with this mode,

            filtering conversations that at have at least all of the contexts ("and")

            or at least one of the contexts ("or")
          type: string
        interleave_submissions:
          required: false
          displayName: interleave_submissions
          description: |
            (Obsolete) Submissions are no

            longer linked to conversations. This parameter is ignored.
          type: boolean
        include_all_conversation_ids:
          required: false
          displayName: include_all_conversation_ids
          description: |
            Default is false. If true,

            the top-level element of the response will be an object rather than

            an array, and will have the keys "conversations" which will contain the

            paged conversation data, and "conversation_ids" which will contain the

            ids of all conversations under this scope/filter in the same order.
          type: boolean
        include:
          required: false
          displayName: include
          description: '"participant_avatars":: Optionally include an "avatar_url" key for each user participanting in the conversation'
          type: string
          enum:
          - participant_avatars
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
    post:
      displayName: create_conversation
      description: Create a conversation
      body:
        multipart/form-data:
          type: object
          properties:
            recipients:
              required: true
              displayName: recipients
              description: |
                An array of recipient ids. These may be user ids or course/group ids

                prefixed with "course_" or "group_" respectively, e.g.

                recipients[]=1&recipients[]=2&recipients[]=course_3. If the course/group

                has over 100 enrollments, 'bulk_message' and 'group_conversation' must be

                set to true.
              type: array
              items:
                type: string
            body:
              required: true
              displayName: body
              description: The message to be sent
              type: string
            subject:
              required: false
              displayName: subject
              description: |
                The subject of the conversation. This is ignored when reusing a

                conversation. Maximum length is 255 characters.
              type: string
            force_new:
              required: false
              displayName: force_new
              description: Forces a new message to be created, even if there is an existing private conversation.
              type: boolean
            group_conversation:
              required: false
              displayName: group_conversation
              description: |
                Defaults to false. If true, this will be a group conversation (i.e. all

                recipients may see all messages and replies). If false, individual private

                conversations will be started with each recipient. Must be set false if the

                number of recipients is over the set maximum (default is 100).
              type: boolean
            attachment_ids:
              required: false
              displayName: attachment_ids
              description: |
                An array of attachments ids. These must be files that have been previously

                uploaded to the sender's "conversation attachments" folder.
              type: array
              items:
                type: string
            media_comment_id:
              required: false
              displayName: media_comment_id
              description: |
                Media comment id of an audio of video file to be associated with this

                message.
              type: string
            media_comment_type:
              required: false
              displayName: media_comment_type
              description: Type of the associated media file
              type: string
              enum:
              - audio
              - video
            user_note:
              required: false
              displayName: user_note
              description: |
                Will add a faculty journal entry for each recipient as long as the user

                making the api call has permission, the recipient is a student and

                faculty journals are enabled in the account.
              type: boolean
            mode:
              required: false
              displayName: mode
              description: |
                Determines whether the messages will be created/sent synchronously or

                asynchronously. Defaults to sync, and this option is ignored if this is a

                group conversation or there is just one recipient (i.e. it must be a bulk

                private message). When sent async, the response will be an empty array

                (batch status can be queried via the {api:ConversationsController#batches batches API})
              type: string
            scope:
              required: false
              displayName: scope
              description: |
                Used when generating "visible" in the API response. See the explanation

                under the {api:ConversationsController#index index API action}
              type: string
              enum:
              - unread
              - starred
              - archived
            filter:
              required: false
              displayName: filter
              description: |
                Used when generating "visible" in the API response. See the explanation

                under the {api:ConversationsController#index index API action}
              type: array
              items:
                type: string
            filter_mode:
              required: false
              displayName: filter_mode
              description: |
                Used when generating "visible" in the API response. See the explanation

                under the {api:ConversationsController#index index API action}
              type: string
            context_code:
              required: false
              displayName: context_code
              description: |
                The course or group that is the context for this conversation. Same format

                as courses or groups in the recipients argument.
              type: string
      responses:
        200:
          description: Success
    put:
      displayName: batch_update_conversations
      description: Batch update conversations
      body:
        multipart/form-data:
          type: object
          properties:
            conversation_ids:
              required: true
              displayName: conversation_ids
              description: List of conversations to update. Limited to 500 conversations.
              type: array
              items:
                type: string
            event:
              required: true
              displayName: event
              description: The action to take on each conversation.
              type: string
              enum:
              - mark_as_read
              - mark_as_unread
              - star
              - unstar
              - archive
              - destroy
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
    /batches:
      get:
        displayName: get_running_batches
        description: Get running batches
        responses:
          200:
            description: Success
    /{id}:
      uriParameters:
        id:
          required: true
          displayName: id
          description: ID
          type: string
      get:
        displayName: get_single_conversation
        description: Get a single conversation
        queryParameters:
          interleave_submissions:
            required: false
            displayName: interleave_submissions
            description: |
              (Obsolete) Submissions are no

              longer linked to conversations. This parameter is ignored.
            type: boolean
          scope:
            required: false
            displayName: scope
            description: |
              Used when generating "visible" in the API response. See the explanation

              under the {api:ConversationsController#index index API action}
            type: string
            enum:
            - unread
            - starred
            - archived
          filter:
            required: false
            displayName: filter
            description: |
              Used when generating "visible" in the API response. See the explanation

              under the {api:ConversationsController#index index API action}
            type: array
            items:
              type: string
          filter_mode:
            required: false
            displayName: filter_mode
            description: |
              Used when generating "visible" in the API response. See the explanation

              under the {api:ConversationsController#index index API action}
            type: string
          auto_mark_as_read:
            required: false
            displayName: auto_mark_as_read
            description: |
              Default true. If true, unread

              conversations will be automatically marked as read. This will default

              to false in a future API release, so clients should explicitly send

              true if that is the desired behavior.
            type: boolean
        responses:
          200:
            description: Success
      put:
        displayName: edit_conversation
        description: Edit a conversation
        body:
          multipart/form-data:
            type: object
            properties:
              conversation[workflow_state]:
                required: false
                displayName: conversation[workflow_state]
                description: Change the state of this conversation
                type: string
                enum:
                - read
                - unread
                - archived
              conversation[subscribed]:
                required: false
                displayName: conversation[subscribed]
                description: |
                  Toggle the current user's subscription to the conversation (only valid for

                  group conversations). If unsubscribed, the user will still have access to

                  the latest messages, but the conversation won't be automatically flagged

                  as unread, nor will it jump to the top of the inbox.
                type: boolean
              conversation[starred]:
                required: false
                displayName: conversation[starred]
                description: Toggle the starred state of the current user's view of the conversation.
                type: boolean
              scope:
                required: false
                displayName: scope
                description: |
                  Used when generating "visible" in the API response. See the explanation

                  under the {api:ConversationsController#index index API action}
                type: string
                enum:
                - unread
                - starred
                - archived
              filter:
                required: false
                displayName: filter
                description: |
                  Used when generating "visible" in the API response. See the explanation

                  under the {api:ConversationsController#index index API action}
                type: array
                items:
                  type: string
              filter_mode:
                required: false
                displayName: filter_mode
                description: |
                  Used when generating "visible" in the API response. See the explanation

                  under the {api:ConversationsController#index index API action}
                type: string
        responses:
          200:
            description: Success
      delete:
        displayName: delete_conversation
        description: Delete a conversation
        responses:
          200:
            description: Success
      /add_recipients:
        post:
          displayName: add_recipients
          description: Add recipients
          body:
            multipart/form-data:
              type: object
              properties:
                recipients:
                  required: true
                  displayName: recipients
                  description: |
                    An array of recipient ids. These may be user ids or course/group ids

                    prefixed with "course_" or "group_" respectively, e.g.

                    recipients[]=1&recipients[]=2&recipients[]=course_3
                  type: array
                  items:
                    type: string
          responses:
            200:
              description: Success
      /add_message:
        post:
          displayName: add_message
          description: Add a message
          body:
            multipart/form-data:
              type: object
              properties:
                body:
                  required: true
                  displayName: body
                  description: The message to be sent.
                  type: string
                attachment_ids:
                  required: false
                  displayName: attachment_ids
                  description: |
                    An array of attachments ids. These must be files that have been previously

                    uploaded to the sender's "conversation attachments" folder.
                  type: array
                  items:
                    type: string
                media_comment_id:
                  required: false
                  displayName: media_comment_id
                  description: |
                    Media comment id of an audio of video file to be associated with this

                    message.
                  type: string
                media_comment_type:
                  required: false
                  displayName: media_comment_type
                  description: Type of the associated media file.
                  type: string
                  enum:
                  - audio
                  - video
                recipients:
                  required: false
                  displayName: recipients
                  description: no description
                  type: array
                  items:
                    type: string
                included_messages:
                  required: false
                  displayName: included_messages
                  description: no description
                  type: array
                  items:
                    type: string
                user_note:
                  required: false
                  displayName: user_note
                  description: |
                    Will add a faculty journal entry for each recipient as long as the user

                    making the api call has permission, the recipient is a student and

                    faculty journals are enabled in the account.
                  type: boolean
          responses:
            200:
              description: Success
      /remove_messages:
        post:
          displayName: delete_message
          description: Delete a message
          body:
            multipart/form-data:
              type: object
              properties:
                remove:
                  required: true
                  displayName: remove
                  description: Array of message ids to be deleted
                  type: array
                  items:
                    type: string
          responses:
            200:
              description: Success
    /mark_all_as_read:
      post:
        displayName: mark_all_as_read
        description: Mark all as read
        responses:
          200:
            description: Success
    /find_recipients:
      get:
        displayName: find_recipients_conversations
        description: Find recipients
        queryParameters:
          search:
            required: false
            displayName: search
            description: |
              Search terms used for matching users/courses/groups (e.g. "bob smith"). If

              multiple terms are given (separated via whitespace), only results matching

              all terms will be returned.
            type: string
          context:
            required: false
            displayName: context
            description: Limit the search to a particular course/group (e.g. "course_3" or "group_4").
            type: string
          exclude:
            required: false
            displayName: exclude
            description: |
              Array of ids to exclude from the search. These may be user ids or

              course/group ids prefixed with "course_" or "group_" respectively,

              e.g. exclude[]=1&exclude[]=2&exclude[]=course_3
            type: array
            items:
              type: string
          type:
            required: false
            displayName: type
            description: Limit the search just to users or contexts (groups/courses).
            type: string
            enum:
            - user
            - context
          user_id:
            required: false
            displayName: user_id
            description: |
              Search for a specific user id. This ignores the other above parameters,

              and will never return more than one result.
            type: integer
            format: int64
          from_conversation_id:
            required: false
            displayName: from_conversation_id
            description: |
              When searching by user_id, only users that could be normally messaged by

              this user will be returned. This parameter allows you to specify a

              conversation that will be referenced for a shared context -- if both the

              current user and the searched user are in the conversation, the user will

              be returned. This is used to start new side conversations.
            type: integer
            format: int64
          permissions:
            required: false
            displayName: permissions
            description: |
              Array of permission strings to be checked for each matched context (e.g.

              "send_messages"). This argument determines which permissions may be

              returned in the response; it won't prevent contexts from being returned if

              they don't grant the permission(s).
            type: array
            items:
              type: string
        responses:
          200:
            description: Success
    /unread_count:
      get:
        displayName: unread_count
        description: Unread count
        responses:
          200:
            description: Success
  /courses:
    get:
      displayName: list_your_courses
      description: List your courses
      queryParameters:
        enrollment_type:
          required: false
          displayName: enrollment_type
          description: |
            When set, only return courses where the user is enrolled as this type. For

            example, set to "teacher" to return only courses where the user is

            enrolled as a Teacher.  This argument is ignored if enrollment_role is given.
          type: string
          enum:
          - teacher
          - student
          - ta
          - observer
          - designer
        enrollment_role:
          required: false
          displayName: enrollment_role
          description: |
            Deprecated

            When set, only return courses where the user is enrolled with the specified

            course-level role.  This can be a role created with the

            {api:RoleOverridesController#add_role Add Role API} or a base role type of

            'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment', 'ObserverEnrollment',

            or 'DesignerEnrollment'.
          type: string
        enrollment_role_id:
          required: false
          displayName: enrollment_role_id
          description: |
            When set, only return courses where the user is enrolled with the specified

            course-level role.  This can be a role created with the

            {api:RoleOverridesController#add_role Add Role API} or a built_in role type of

            'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment', 'ObserverEnrollment',

            or 'DesignerEnrollment'.
          type: integer
          format: int64
        enrollment_state:
          required: false
          displayName: enrollment_state
          description: |
            When set, only return courses where the user has an enrollment with the given state.

            This will respect section/course/term date overrides.
          type: string
          enum:
          - active
          - invited_or_pending
          - completed
        exclude_blueprint_courses:
          required: false
          displayName: exclude_blueprint_courses
          description: When set, only return courses that are not configured as blueprint courses.
          type: boolean
        include:
          required: false
          displayName: include
          description: |
            - "needs_grading_count": Optional information to include with each Course.
              When needs_grading_count is given, and the current user has grading
              rights, the total number of submissions needing grading for all
              assignments is returned.
            - "syllabus_body": Optional information to include with each Course.
              When syllabus_body is given the user-generated html for the course
              syllabus is returned.
            - "public_description": Optional information to include with each Course.
              When public_description is given the user-generated text for the course
              public description is returned.
            - "total_scores": Optional information to include with each Course.
              When total_scores is given, any student enrollments will also
              include the fields 'computed_current_score', 'computed_final_score',
              'computed_current_grade', and 'computed_final_grade', as well as (if
              the user has permission) 'unposted_current_score',
              'unposted_final_score', 'unposted_current_grade', and
              'unposted_final_grade' (see Enrollment documentation for more
              information on these fields). This argument is ignored if the course is
              configured to hide final grades.
            - "current_grading_period_scores": Optional information to include with
              each Course. When current_grading_period_scores is given and total_scores
              is given, any student enrollments will also include the fields
              'has_grading_periods',
              'totals_for_all_grading_periods_option', 'current_grading_period_title',
              'current_grading_period_id', current_period_computed_current_score',
              'current_period_computed_final_score',
              'current_period_computed_current_grade', and
              'current_period_computed_final_grade', as well as (if the user has permission)
              'current_period_unposted_current_score',
              'current_period_unposted_final_score',
              'current_period_unposted_current_grade', and
              'current_period_unposted_final_grade' (see Enrollment documentation for
              more information on these fields). In addition, when this argument is
              passed, the course will have a 'has_grading_periods' attribute
              on it. This argument is ignored if the total_scores argument is not
              included. If the course is configured to hide final grades, the
              following fields are not returned:
              'totals_for_all_grading_periods_option',
              'current_period_computed_current_score',
              'current_period_computed_final_score',
              'current_period_computed_current_grade',
              'current_period_computed_final_grade',
              'current_period_unposted_current_score',
              'current_period_unposted_final_score',
              'current_period_unposted_current_grade', and
              'current_period_unposted_final_grade'
            - "term": Optional information to include with each Course. When
              term is given, the information for the enrollment term for each course
              is returned.
            - "account": Optional information to include with each Course. When
              account is given, the account json for each course is returned.
            - "course_progress": Optional information to include with each Course.
              When course_progress is given, each course will include a
              'course_progress' object with the fields: 'requirement_count', an integer
              specifying the total number of requirements in the course,
              'requirement_completed_count', an integer specifying the total number of
              requirements in this course that have been completed, and
              'next_requirement_url', a string url to the next requirement item, and
              'completed_at', the date the course was completed (null if incomplete).
              'next_requirement_url' will be null if all requirements have been
              completed or the current module does not require sequential progress.
              "course_progress" will return an error message if the course is not
              module based or the user is not enrolled as a student in the course.
            - "sections": Section enrollment information to include with each Course.
              Returns an array of hashes containing the section ID (id), section name
              (name), start and end dates (start_at, end_at), as well as the enrollment
              type (enrollment_role, e.g. 'StudentEnrollment').
            - "storage_quota_used_mb": The amount of storage space used by the files in this course

            - "total_students": Optional information to include with each Course.
              Returns an integer for the total amount of active and invited students.
            - "passback_status": Include the grade passback_status

            - "favorites": Optional information to include with each Course.
              Indicates if the user has marked the course as a favorite course.
            - "teachers": Teacher information to include with each Course.
              Returns an array of hashes containing the {api:Users:UserDisplay UserDisplay} information
              for each teacher in the course.
            - "observed_users": Optional information to include with each Course.
              Will include data for observed users if the current user has an
              observer enrollment.
            - "tabs": Optional information to include with each Course.
              Will include the list of tabs configured for each course.  See the
              {api:TabsController#index List available tabs API} for more information.
            - "course_image": Optional course image data for when there is a course image
              and the course image feature flag has been enabled
            - "concluded": Optional information to include with each Course. Indicates whether
              the course has been concluded, taking course and term dates into account.
          type: string
          enum:
          - needs_grading_count
          - syllabus_body
          - public_description
          - total_scores
          - current_grading_period_scores
          - term
          - account
          - course_progress
          - sections
          - storage_quota_used_mb
          - total_students
          - passback_status
          - favorites
          - teachers
          - observed_users
          - course_image
          - concluded
        state:
          required: false
          displayName: state
          description: |
            If set, only return courses that are in the given state(s).

            By default, "available" is returned for students and observers, and

            anything except "deleted", for all other enrollment types
          type: string
          enum:
          - unpublished
          - available
          - completed
          - deleted
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
    /{id}:
      uriParameters:
        id:
          required: true
          displayName: id
          description: ID
          type: string
      delete:
        displayName: delete_conclude_course
        description: Delete/Conclude a course
        queryParameters:
          event:
            required: true
            displayName: event
            description: The action to take on the course.
            type: string
            enum:
            - delete
            - conclude
        responses:
          200:
            description: Success
      get:
        displayName: get_single_course_courses
        description: Get a single course
        queryParameters:
          include:
            required: false
            displayName: include
            description: |
              - "all_courses": Also search recently deleted courses.

              - "permissions": Include permissions the current user has
                for the course.
              - "observed_users": include observed users in the enrollments

              - "course_image": Optional course image data for when there is a course image
                and the course image feature flag has been enabled
              - "concluded": Optional information to include with each Course. Indicates whether
                the course has been concluded, taking course and term dates into account.
            type: string
            enum:
            - needs_grading_count
            - syllabus_body
            - public_description
            - total_scores
            - current_grading_period_scores
            - term
            - account
            - course_progress
            - sections
            - storage_quota_used_mb
            - total_students
            - passback_status
            - favorites
            - teachers
            - observed_users
            - all_courses
            - permissions
            - course_image
            - concluded
          teacher_limit:
            required: false
            displayName: teacher_limit
            description: |
              The maximum number of teacher enrollments to show.

              If the course contains more teachers than this, instead of giving the teacher

              enrollments, the count of teachers will be given under a _teacher_count_ key.
            type: integer
            format: int64
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      put:
        displayName: update_course
        description: Update a course
        body:
          multipart/form-data:
            type: object
            properties:
              course[account_id]:
                required: false
                displayName: course[account_id]
                description: The unique ID of the account to move the course to.
                type: integer
                format: int64
              course[name]:
                required: false
                displayName: course[name]
                description: |
                  The name of the course. If omitted, the course will be named "Unnamed

                  Course."
                type: string
              course[course_code]:
                required: false
                displayName: course[course_code]
                description: The course code for the course.
                type: string
              course[start_at]:
                required: false
                displayName: course[start_at]
                description: Course start date in ISO8601 format, e.g. 2011-01-01T01:00Z
                type: object
              course[end_at]:
                required: false
                displayName: course[end_at]
                description: Course end date in ISO8601 format. e.g. 2011-01-01T01:00Z
                type: object
              course[license]:
                required: false
                displayName: course[license]
                description: |
                  The name of the licensing. Should be one of the following abbreviations

                  (a descriptive name is included in parenthesis for reference):

                  - 'private' (Private Copyrighted)

                  - 'cc_by_nc_nd' (CC Attribution Non-Commercial No Derivatives)

                  - 'cc_by_nc_sa' (CC Attribution Non-Commercial Share Alike)

                  - 'cc_by_nc' (CC Attribution Non-Commercial)

                  - 'cc_by_nd' (CC Attribution No Derivatives)

                  - 'cc_by_sa' (CC Attribution Share Alike)

                  - 'cc_by' (CC Attribution)

                  - 'public_domain' (Public Domain).
                type: string
              course[is_public]:
                required: false
                displayName: course[is_public]
                description: Set to true if course is public to both authenticated and unauthenticated users.
                type: boolean
              course[is_public_to_auth_users]:
                required: false
                displayName: course[is_public_to_auth_users]
                description: Set to true if course is public only to authenticated users.
                type: boolean
              course[public_syllabus]:
                required: false
                displayName: course[public_syllabus]
                description: Set to true to make the course syllabus public.
                type: boolean
              course[public_syllabus_to_auth]:
                required: false
                displayName: course[public_syllabus_to_auth]
                description: Set to true to make the course syllabus to public for authenticated users.
                type: boolean
              course[public_description]:
                required: false
                displayName: course[public_description]
                description: A publicly visible description of the course.
                type: string
              course[allow_student_wiki_edits]:
                required: false
                displayName: course[allow_student_wiki_edits]
                description: If true, students will be able to modify the course wiki.
                type: boolean
              course[allow_wiki_comments]:
                required: false
                displayName: course[allow_wiki_comments]
                description: If true, course members will be able to comment on wiki pages.
                type: boolean
              course[allow_student_forum_attachments]:
                required: false
                displayName: course[allow_student_forum_attachments]
                description: If true, students can attach files to forum posts.
                type: boolean
              course[open_enrollment]:
                required: false
                displayName: course[open_enrollment]
                description: Set to true if the course is open enrollment.
                type: boolean
              course[self_enrollment]:
                required: false
                displayName: course[self_enrollment]
                description: Set to true if the course is self enrollment.
                type: boolean
              course[restrict_enrollments_to_course_dates]:
                required: false
                displayName: course[restrict_enrollments_to_course_dates]
                description: |
                  Set to true to restrict user enrollments to the start and end dates of the

                  course.
                type: boolean
              course[term_id]:
                required: false
                displayName: course[term_id]
                description: The unique ID of the term to create to course in.
                type: integer
                format: int64
              course[sis_course_id]:
                required: false
                displayName: course[sis_course_id]
                description: The unique SIS identifier.
                type: string
              course[integration_id]:
                required: false
                displayName: course[integration_id]
                description: The unique Integration identifier.
                type: string
              course[hide_final_grades]:
                required: false
                displayName: course[hide_final_grades]
                description: |
                  If this option is set to true, the totals in student grades summary will

                  be hidden.
                type: boolean
              course[time_zone]:
                required: false
                displayName: course[time_zone]
                description: |
                  The time zone for the course. Allowed time zones are

                  {http://www.iana.org/time-zones IANA time zones} or friendlier

                  {http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html Ruby on Rails time zones}.
                type: string
              course[apply_assignment_group_weights]:
                required: false
                displayName: course[apply_assignment_group_weights]
                description: Set to true to weight final grade based on assignment groups percentages.
                type: boolean
              course[storage_quota_mb]:
                required: false
                displayName: course[storage_quota_mb]
                description: |
                  Set the storage quota for the course, in megabytes. The caller must have

                  the "Manage storage quotas" account permission.
                type: integer
                format: int64
              offer:
                required: false
                displayName: offer
                description: |
                  If this option is set to true, the course will be available to students

                  immediately.
                type: boolean
              course[event]:
                required: false
                displayName: course[event]
                description: |
                  The action to take on each course.

                  * 'claim' makes a course no longer visible to students. This action is also called "unpublish" on the web site.
                    A course cannot be unpublished if students have received graded submissions.
                  * 'offer' makes a course visible to students. This action is also called "publish" on the web site.

                  * 'conclude' prevents future enrollments and makes a course read-only for all participants. The course still appears
                    in prior-enrollment lists.
                  * 'delete' completely removes the course from the web site (including course menus and prior-enrollment lists).
                    All enrollments are deleted. Course content may be physically deleted at a future date.
                  * 'undelete' attempts to recover a course that has been deleted. (Recovery is not guaranteed; please conclude
                    rather than delete a course if there is any possibility the course will be used again.) The recovered course
                    will be unpublished. Deleted enrollments will not be recovered.
                type: string
                enum:
                - claim
                - offer
                - conclude
                - delete
                - undelete
              course[default_view]:
                required: false
                displayName: course[default_view]
                description: |
                  The type of page that users will see when they first visit the course

                  * 'feed' Recent Activity Dashboard

                  * 'wiki' Wiki Front Page

                  * 'modules' Course Modules/Sections Page

                  * 'assignments' Course Assignments List

                  * 'syllabus' Course Syllabus Page

                  other types may be added in the future
                type: string
                enum:
                - feed
                - wiki
                - modules
                - syllabus
                - assignments
              course[syllabus_body]:
                required: false
                displayName: course[syllabus_body]
                description: The syllabus body for the course
                type: string
              course[grading_standard_id]:
                required: false
                displayName: course[grading_standard_id]
                description: The grading standard id to set for the course.  If no value is provided for this argument the current grading_standard will be un-set from this course.
                type: integer
                format: int64
              course[course_format]:
                required: false
                displayName: course[course_format]
                description: Optional. Specifies the format of the course. (Should be either 'on_campus' or 'online')
                type: string
              course[image_id]:
                required: false
                displayName: course[image_id]
                description: |
                  This is a file ID corresponding to an image file in the course that will

                  be used as the course image.

                  This will clear the course's image_url setting if set.  If you attempt

                  to provide image_url and image_id in a request it will fail.
                type: integer
                format: int64
              course[image_url]:
                required: false
                displayName: course[image_url]
                description: |
                  This is a URL to an image to be used as the course image.

                  This will clear the course's image_id setting if set.  If you attempt

                  to provide image_url and image_id in a request it will fail.
                type: string
              course[remove_image]:
                required: false
                displayName: course[remove_image]
                description: |
                  If this option is set to true, the course image url and course image

                  ID are both set to nil
                type: boolean
              course[blueprint]:
                required: false
                displayName: course[blueprint]
                description: Sets the course as a blueprint course.
                type: boolean
              course[blueprint_restrictions]:
                required: false
                displayName: course[blueprint_restrictions]
                description: |
                  Sets a default set to apply to blueprint course objects when restricted,

                  unless _use_blueprint_restrictions_by_object_type_ is enabled.

                  See the {api:Blueprint_Courses:BlueprintRestriction Blueprint Restriction} documentation
                type: object
              course[use_blueprint_restrictions_by_object_type]:
                required: false
                displayName: course[use_blueprint_restrictions_by_object_type]
                description: |
                  When enabled, the _blueprint_restrictions_ parameter will be ignored in favor of

                  the _blueprint_restrictions_by_object_type_ parameter
                type: boolean
              course[blueprint_restrictions_by_object_type]:
                required: false
                displayName: course[blueprint_restrictions_by_object_type]
                description: |
                  Allows setting multiple {api:Blueprint_Courses:BlueprintRestriction Blueprint Restriction}

                  to apply to blueprint course objects of the matching type when restricted.

                  The possible object types are "assignment", "attachment", "discussion_topic", "quiz" and "wiki_page".

                  Example usage:
                    course[blueprint_restrictions_by_object_type][assignment][content]=1
                type: object
        responses:
          200:
            description: Success
      /late_policy:
        get:
          displayName: get_late_policy
          description: Get a late policy
          responses:
            200:
              description: Success
        post:
          displayName: create_late_policy
          description: Create a late policy
          body:
            multipart/form-data:
              type: object
              properties:
                late_policy[missing_submission_deduction_enabled]:
                  required: false
                  displayName: late_policy[missing_submission_deduction_enabled]
                  description: Whether to enable the missing submission deduction late policy.
                  type: boolean
                late_policy[missing_submission_deduction]:
                  required: false
                  displayName: late_policy[missing_submission_deduction]
                  description: How many percentage points to deduct from a missing submission.
                  type: number
                  format: double
                late_policy[late_submission_deduction_enabled]:
                  required: false
                  displayName: late_policy[late_submission_deduction_enabled]
                  description: Whether to enable the late submission deduction late policy.
                  type: boolean
                late_policy[late_submission_deduction]:
                  required: false
                  displayName: late_policy[late_submission_deduction]
                  description: How many percentage points to deduct per the late submission interval.
                  type: number
                  format: double
                late_policy[late_submission_interval]:
                  required: false
                  displayName: late_policy[late_submission_interval]
                  description: The interval for late policies.
                  type: string
                late_policy[late_submission_minimum_percent_enabled]:
                  required: false
                  displayName: late_policy[late_submission_minimum_percent_enabled]
                  description: Whether to enable the late submission minimum percent for a late policy.
                  type: boolean
                late_policy[late_submission_minimum_percent]:
                  required: false
                  displayName: late_policy[late_submission_minimum_percent]
                  description: The minimum grade a submissions can have in percentage points.
                  type: number
                  format: double
          responses:
            200:
              description: Success
        patch:
          displayName: patch_late_policy
          description: Patch a late policy
          body:
            multipart/form-data:
              type: object
              properties:
                late_policy[missing_submission_deduction_enabled]:
                  required: false
                  displayName: late_policy[missing_submission_deduction_enabled]
                  description: Whether to enable the missing submission deduction late policy.
                  type: boolean
                late_policy[missing_submission_deduction]:
                  required: false
                  displayName: late_policy[missing_submission_deduction]
                  description: How many percentage points to deduct from a missing submission.
                  type: number
                  format: double
                late_policy[late_submission_deduction_enabled]:
                  required: false
                  displayName: late_policy[late_submission_deduction_enabled]
                  description: Whether to enable the late submission deduction late policy.
                  type: boolean
                late_policy[late_submission_deduction]:
                  required: false
                  displayName: late_policy[late_submission_deduction]
                  description: How many percentage points to deduct per the late submission interval.
                  type: number
                  format: double
                late_policy[late_submission_interval]:
                  required: false
                  displayName: late_policy[late_submission_interval]
                  description: The interval for late policies.
                  type: string
                late_policy[late_submission_minimum_percent_enabled]:
                  required: false
                  displayName: late_policy[late_submission_minimum_percent_enabled]
                  description: Whether to enable the late submission minimum percent for a late policy.
                  type: boolean
                late_policy[late_submission_minimum_percent]:
                  required: false
                  displayName: late_policy[late_submission_minimum_percent]
                  description: The minimum grade a submissions can have in percentage points.
                  type: number
                  format: double
          responses:
            200:
              description: Success
    /{course_id}:
      uriParameters:
        course_id:
          required: true
          displayName: course_id
          description: ID
          type: string
      /external_feeds:
        get:
          displayName: list_external_feeds_courses
          description: List external feeds
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_external_feed_courses
          description: Create an external feed
          body:
            multipart/form-data:
              type: object
              properties:
                url:
                  required: true
                  displayName: url
                  description: The url to the external rss or atom feed
                  type: string
                header_match:
                  required: false
                  displayName: header_match
                  description: If given, only feed entries that contain this string in their title will be imported
                  type: boolean
                verbosity:
                  required: false
                  displayName: verbosity
                  description: Defaults to "full"
                  type: string
                  enum:
                  - full
                  - truncate
                  - link_only
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{external_feed_id}:
          uriParameters:
            external_feed_id:
              required: true
              displayName: external_feed_id
              description: ID
              type: string
          delete:
            displayName: delete_external_feed_courses
            description: Delete an external feed
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /assignment_groups:
        get:
          displayName: list_assignment_groups
          description: List assignment groups
          queryParameters:
            include:
              required: false
              displayName: include
              description: |
                Associations to include with the group. "discussion_topic", "all_dates"

                "assignment_visibility" & "submission" are only valid if "assignments" is also included.

                The "assignment_visibility" option additionally requires that the Differentiated Assignments course feature be turned on.
              type: string
              enum:
              - assignments
              - discussion_topic
              - all_dates
              - assignment_visibility
              - overrides
              - submission
            exclude_assignment_submission_types:
              required: false
              displayName: exclude_assignment_submission_types
              description: |
                If "assignments" are included, those with the specified submission types

                will be excluded from the assignment groups.
              type: string
              enum:
              - online_quiz
              - discussion_topic
              - wiki_page
              - external_tool
            override_assignment_dates:
              required: false
              displayName: override_assignment_dates
              description: Apply assignment overrides for each assignment, defaults to true.
              type: boolean
            grading_period_id:
              required: false
              displayName: grading_period_id
              description: |
                The id of the grading period in which assignment groups are being requested

                (Requires grading periods to exist.)
              type: integer
              format: int64
            scope_assignments_to_student:
              required: false
              displayName: scope_assignments_to_student
              description: |
                If true, all assignments returned will apply to the current user in the

                specified grading period. If assignments apply to other students in the

                specified grading period, but not the current user, they will not be

                returned. (Requires the grading_period_id argument and grading periods to

                exist. In addition, the current user must be a student.)
              type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_assignment_group
          description: Create an Assignment Group
          body:
            multipart/form-data:
              type: object
              properties:
                name:
                  required: false
                  displayName: name
                  description: The assignment group's name
                  type: string
                position:
                  required: false
                  displayName: position
                  description: The position of this assignment group in relation to the other assignment groups
                  type: integer
                  format: int64
                group_weight:
                  required: false
                  displayName: group_weight
                  description: The percent of the total grade that this assignment group represents
                  type: number
                  format: double
                sis_source_id:
                  required: false
                  displayName: sis_source_id
                  description: The sis source id of the Assignment Group
                  type: string
                integration_data:
                  required: false
                  displayName: integration_data
                  description: The integration data of the Assignment Group
                  type: object
                rules:
                  required: false
                  displayName: rules
                  description: |
                    The grading rules that are applied within this assignment group

                    See the Assignment Group object definition for format
                  type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{assignment_group_id}:
          uriParameters:
            assignment_group_id:
              required: true
              displayName: assignment_group_id
              description: ID
              type: string
          get:
            displayName: get_assignment_group
            description: Get an Assignment Group
            queryParameters:
              include:
                required: false
                displayName: include
                description: |
                  Associations to include with the group. "discussion_topic" and "assignment_visibility" and "submission"

                  are only valid if "assignments" is also included. The "assignment_visibility" option additionally

                  requires that the Differentiated Assignments course feature be turned on.
                type: string
                enum:
                - assignments
                - discussion_topic
                - assignment_visibility
                - submission
              override_assignment_dates:
                required: false
                displayName: override_assignment_dates
                description: Apply assignment overrides for each assignment, defaults to true.
                type: boolean
              grading_period_id:
                required: false
                displayName: grading_period_id
                description: |
                  The id of the grading period in which assignment groups are being requested

                  (Requires grading periods to exist on the account)
                type: integer
                format: int64
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: edit_assignment_group
            description: Edit an Assignment Group
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: destroy_assignment_group
            description: Destroy an Assignment Group
            queryParameters:
              move_assignments_to:
                required: false
                displayName: move_assignments_to
                description: |
                  The ID of an active Assignment Group to which the assignments that are

                  currently assigned to the destroyed Assignment Group will be assigned.

                  NOTE: If this argument is not provided, any assignments in this Assignment

                  Group will be deleted.
                type: integer
                format: int64
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /assignments:
            get:
              displayName: list_assignments_assignment_groups
              description: List assignments
              queryParameters:
                include:
                  required: false
                  displayName: include
                  description: |
                    Associations to include with the assignment. The "assignment_visibility" option

                    requires that the Differentiated Assignments course feature be turned on. If

                    "observed_users" is passed, submissions for observed users will also be included as an array.
                  type: string
                  enum:
                  - submission
                  - assignment_visibility
                  - all_dates
                  - overrides
                  - observed_users
                search_term:
                  required: false
                  displayName: search_term
                  description: The partial title of the assignments to match and return.
                  type: string
                override_assignment_dates:
                  required: false
                  displayName: override_assignment_dates
                  description: Apply assignment overrides for each assignment, defaults to true.
                  type: boolean
                needs_grading_count_by_section:
                  required: false
                  displayName: needs_grading_count_by_section
                  description: Split up "needs_grading_count" by sections into the "needs_grading_count_by_section" key, defaults to false
                  type: boolean
                bucket:
                  required: false
                  displayName: bucket
                  description: If included, only return certain assignments depending on due date and submission status.
                  type: string
                  enum:
                  - past
                  - overdue
                  - undated
                  - ungraded
                  - unsubmitted
                  - upcoming
                  - future
                assignment_ids:
                  required: false
                  displayName: assignment_ids
                  description: if set, return only assignments specified
                  type: array
                  items:
                    type: string
                order_by:
                  required: false
                  displayName: order_by
                  description: Determines the order of the assignments. Defaults to "position".
                  type: string
                  enum:
                  - position
                  - name
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
      /assignments:
        get:
          displayName: list_assignments_assignments
          description: List assignments
          queryParameters:
            include:
              required: false
              displayName: include
              description: |
                Associations to include with the assignment. The "assignment_visibility" option

                requires that the Differentiated Assignments course feature be turned on. If

                "observed_users" is passed, submissions for observed users will also be included as an array.
              type: string
              enum:
              - submission
              - assignment_visibility
              - all_dates
              - overrides
              - observed_users
            search_term:
              required: false
              displayName: search_term
              description: The partial title of the assignments to match and return.
              type: string
            override_assignment_dates:
              required: false
              displayName: override_assignment_dates
              description: Apply assignment overrides for each assignment, defaults to true.
              type: boolean
            needs_grading_count_by_section:
              required: false
              displayName: needs_grading_count_by_section
              description: Split up "needs_grading_count" by sections into the "needs_grading_count_by_section" key, defaults to false
              type: boolean
            bucket:
              required: false
              displayName: bucket
              description: If included, only return certain assignments depending on due date and submission status.
              type: string
              enum:
              - past
              - overdue
              - undated
              - ungraded
              - unsubmitted
              - upcoming
              - future
            assignment_ids:
              required: false
              displayName: assignment_ids
              description: if set, return only assignments specified
              type: array
              items:
                type: string
            order_by:
              required: false
              displayName: order_by
              description: Determines the order of the assignments. Defaults to "position".
              type: string
              enum:
              - position
              - name
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_assignment
          description: Create an assignment
          body:
            multipart/form-data:
              type: object
              properties:
                assignment[name]:
                  required: true
                  displayName: assignment[name]
                  description: The assignment name.
                  type: string
                assignment[position]:
                  required: false
                  displayName: assignment[position]
                  description: |
                    The position of this assignment in the group when displaying

                    assignment lists.
                  type: integer
                  format: int64
                assignment[submission_types]:
                  required: false
                  displayName: assignment[submission_types]
                  description: |
                    List of supported submission types for the assignment.

                    Unless the assignment is allowing online submissions, the array should

                    only have one element.


                    If not allowing online submissions, your options are:
                      "online_quiz"
                      "none"
                      "on_paper"
                      "discussion_topic"
                      "external_tool"

                    If you are allowing online submissions, you can have one or many

                    allowed submission types:

                      "online_upload"
                      "online_text_entry"
                      "online_url"
                      "media_recording" (Only valid when the Kaltura plugin is enabled)
                  type: string
                  enum:
                  - online_quiz
                  - none
                  - on_paper
                  - discussion_topic
                  - external_tool
                  - online_upload
                  - online_text_entry
                  - online_url
                  - media_recording
                assignment[allowed_extensions]:
                  required: false
                  displayName: assignment[allowed_extensions]
                  description: |
                    Allowed extensions if submission_types includes "online_upload"


                    Example:
                      allowed_extensions: ["docx","ppt"]
                  type: array
                  items:
                    type: string
                assignment[turnitin_enabled]:
                  required: false
                  displayName: assignment[turnitin_enabled]
                  description: |
                    Only applies when the Turnitin plugin is enabled for a course and

                    the submission_types array includes "online_upload".

                    Toggles Turnitin submissions for the assignment.

                    Will be ignored if Turnitin is not available for the course.
                  type: boolean
                assignment[vericite_enabled]:
                  required: false
                  displayName: assignment[vericite_enabled]
                  description: |
                    Only applies when the VeriCite plugin is enabled for a course and

                    the submission_types array includes "online_upload".

                    Toggles VeriCite submissions for the assignment.

                    Will be ignored if VeriCite is not available for the course.
                  type: boolean
                assignment[turnitin_settings]:
                  required: false
                  displayName: assignment[turnitin_settings]
                  description: |
                    Settings to send along to turnitin. See Assignment object definition for

                    format.
                  type: string
                assignment[integration_data]:
                  required: false
                  displayName: assignment[integration_data]
                  description: Data used for SIS integrations. Requires admin-level token with the "Manage SIS" permission. JSON string required.
                  type: string
                assignment[integration_id]:
                  required: false
                  displayName: assignment[integration_id]
                  description: Unique ID from third party integrations
                  type: string
                assignment[peer_reviews]:
                  required: false
                  displayName: assignment[peer_reviews]
                  description: |
                    If submission_types does not include external_tool,discussion_topic,

                    online_quiz, or on_paper, determines whether or not peer reviews

                    will be turned on for the assignment.
                  type: boolean
                assignment[automatic_peer_reviews]:
                  required: false
                  displayName: assignment[automatic_peer_reviews]
                  description: |
                    Whether peer reviews will be assigned automatically by Canvas or if

                    teachers must manually assign peer reviews. Does not apply if peer reviews

                    are not enabled.
                  type: boolean
                assignment[notify_of_update]:
                  required: false
                  displayName: assignment[notify_of_update]
                  description: |
                    If true, Canvas will send a notification to students in the class

                    notifying them that the content has changed.
                  type: boolean
                assignment[group_category_id]:
                  required: false
                  displayName: assignment[group_category_id]
                  description: |
                    If present, the assignment will become a group assignment assigned

                    to the group.
                  type: integer
                  format: int64
                assignment[grade_group_students_individually]:
                  required: false
                  displayName: assignment[grade_group_students_individually]
                  description: |
                    If this is a group assignment, teachers have the options to grade

                    students individually. If false, Canvas will apply the assignment's

                    score to each member of the group. If true, the teacher can manually

                    assign scores to each member of the group.
                  type: integer
                  format: int64
                assignment[external_tool_tag_attributes]:
                  required: false
                  displayName: assignment[external_tool_tag_attributes]
                  description: |
                    Hash of external tool parameters if submission_types is ["external_tool"].

                    See Assignment object definition for format.
                  type: string
                assignment[points_possible]:
                  required: false
                  displayName: assignment[points_possible]
                  description: The maximum points possible on the assignment.
                  type: number
                  format: double
                assignment[grading_type]:
                  required: false
                  displayName: assignment[grading_type]
                  description: |
                    The strategy used for grading the assignment.

                    The assignment defaults to "points" if this field is omitted.
                  type: string
                  enum:
                  - pass_fail
                  - percent
                  - letter_grade
                  - gpa_scale
                  - points
                assignment[due_at]:
                  required: false
                  displayName: assignment[due_at]
                  description: |
                    The day/time the assignment is due. Must be between the lock dates if there are lock dates.

                    Accepts times in ISO 8601 format, e.g. 2014-10-21T18:48:00Z.
                  type: object
                assignment[lock_at]:
                  required: false
                  displayName: assignment[lock_at]
                  description: |
                    The day/time the assignment is locked after. Must be after the due date if there is a due date.

                    Accepts times in ISO 8601 format, e.g. 2014-10-21T18:48:00Z.
                  type: object
                assignment[unlock_at]:
                  required: false
                  displayName: assignment[unlock_at]
                  description: |
                    The day/time the assignment is unlocked. Must be before the due date if there is a due date.

                    Accepts times in ISO 8601 format, e.g. 2014-10-21T18:48:00Z.
                  type: object
                assignment[description]:
                  required: false
                  displayName: assignment[description]
                  description: The assignment's description, supports HTML.
                  type: string
                assignment[assignment_group_id]:
                  required: false
                  displayName: assignment[assignment_group_id]
                  description: |
                    The assignment group id to put the assignment in.

                    Defaults to the top assignment group in the course.
                  type: integer
                  format: int64
                assignment[muted]:
                  required: false
                  displayName: assignment[muted]
                  description: |
                    Whether this assignment is muted.

                    A muted assignment does not send change notifications

                    and hides grades from students.

                    Defaults to false.
                  type: boolean
                assignment[assignment_overrides]:
                  required: false
                  displayName: assignment[assignment_overrides]
                  description: List of overrides for the assignment.
                  type: array
                  items:
                    type: object
                assignment[only_visible_to_overrides]:
                  required: false
                  displayName: assignment[only_visible_to_overrides]
                  description: |
                    Whether this assignment is only visible to overrides

                    (Only useful if 'differentiated assignments' account setting is on)
                  type: boolean
                assignment[published]:
                  required: false
                  displayName: assignment[published]
                  description: |
                    Whether this assignment is published.

                    (Only useful if 'draft state' account setting is on)

                    Unpublished assignments are not visible to students.
                  type: boolean
                assignment[grading_standard_id]:
                  required: false
                  displayName: assignment[grading_standard_id]
                  description: |
                    The grading standard id to set for the course.  If no value is provided for this argument the current grading_standard will be un-set from this course.

                    This will update the grading_type for the course to 'letter_grade' unless it is already 'gpa_scale'.
                  type: integer
                  format: int64
                assignment[omit_from_final_grade]:
                  required: false
                  displayName: assignment[omit_from_final_grade]
                  description: Whether this assignment is counted towards a student's final grade.
                  type: boolean
                assignment[quiz_lti]:
                  required: false
                  displayName: assignment[quiz_lti]
                  description: |
                    Whether this assignment should use the Quizzes 2 LTI tool. Sets the

                    submission type to 'external_tool' and configures the external tool

                    attributes to use the Quizzes 2 LTI tool configured for this course.

                    Has no effect if no Quizzes 2 LTI tool is configured.
                  type: boolean
                assignment[moderated_grading]:
                  required: false
                  displayName: assignment[moderated_grading]
                  description: Whether this assignment is moderated.
                  type: boolean
                assignment[allowed_attempts]:
                  required: false
                  displayName: assignment[allowed_attempts]
                  description: The number of submission attempts allowed for this assignment. Set to -1 for unlimited attempts.
                  type: integer
                  format: int64
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          delete:
            displayName: delete_assignment
            description: Delete an assignment
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          get:
            displayName: get_single_assignment
            description: Get a single assignment
            queryParameters:
              include:
                required: false
                displayName: include
                description: |
                  Associations to include with the assignment. The "assignment_visibility" option

                  requires that the Differentiated Assignments course feature be turned on. If

                  "observed_users" is passed, submissions for observed users will also be included.
                type: string
                enum:
                - submission
                - assignment_visibility
                - overrides
                - observed_users
              override_assignment_dates:
                required: false
                displayName: override_assignment_dates
                description: Apply assignment overrides to the assignment, defaults to true.
                type: boolean
              needs_grading_count_by_section:
                required: false
                displayName: needs_grading_count_by_section
                description: Split up "needs_grading_count" by sections into the "needs_grading_count_by_section" key, defaults to false
                type: boolean
              all_dates:
                required: false
                displayName: all_dates
                description: All dates associated with the assignment, if applicable
                type: boolean
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: edit_assignment
            description: Edit an assignment
            body:
              multipart/form-data:
                type: object
                properties:
                  assignment[name]:
                    required: false
                    displayName: assignment[name]
                    description: The assignment name.
                    type: string
                  assignment[position]:
                    required: false
                    displayName: assignment[position]
                    description: |
                      The position of this assignment in the group when displaying

                      assignment lists.
                    type: integer
                    format: int64
                  assignment[submission_types]:
                    required: false
                    displayName: assignment[submission_types]
                    description: |
                      List of supported submission types for the assignment.

                      Unless the assignment is allowing online submissions, the array should

                      only have one element.


                      If not allowing online submissions, your options are:
                        "online_quiz"
                        "none"
                        "on_paper"
                        "discussion_topic"
                        "external_tool"

                      If you are allowing online submissions, you can have one or many

                      allowed submission types:

                        "online_upload"
                        "online_text_entry"
                        "online_url"
                        "media_recording" (Only valid when the Kaltura plugin is enabled)
                    type: string
                    enum:
                    - online_quiz
                    - none
                    - on_paper
                    - discussion_topic
                    - external_tool
                    - online_upload
                    - online_text_entry
                    - online_url
                    - media_recording
                  assignment[allowed_extensions]:
                    required: false
                    displayName: assignment[allowed_extensions]
                    description: |
                      Allowed extensions if submission_types includes "online_upload"


                      Example:
                        allowed_extensions: ["docx","ppt"]
                    type: array
                    items:
                      type: string
                  assignment[turnitin_enabled]:
                    required: false
                    displayName: assignment[turnitin_enabled]
                    description: |
                      Only applies when the Turnitin plugin is enabled for a course and

                      the submission_types array includes "online_upload".

                      Toggles Turnitin submissions for the assignment.

                      Will be ignored if Turnitin is not available for the course.
                    type: boolean
                  assignment[vericite_enabled]:
                    required: false
                    displayName: assignment[vericite_enabled]
                    description: |
                      Only applies when the VeriCite plugin is enabled for a course and

                      the submission_types array includes "online_upload".

                      Toggles VeriCite submissions for the assignment.

                      Will be ignored if VeriCite is not available for the course.
                    type: boolean
                  assignment[turnitin_settings]:
                    required: false
                    displayName: assignment[turnitin_settings]
                    description: |
                      Settings to send along to turnitin. See Assignment object definition for

                      format.
                    type: string
                  assignment[integration_data]:
                    required: false
                    displayName: assignment[integration_data]
                    description: Data used for SIS integrations. Requires admin-level token with the "Manage SIS" permission. JSON string required.
                    type: string
                  assignment[integration_id]:
                    required: false
                    displayName: assignment[integration_id]
                    description: Unique ID from third party integrations
                    type: string
                  assignment[peer_reviews]:
                    required: false
                    displayName: assignment[peer_reviews]
                    description: |
                      If submission_types does not include external_tool,discussion_topic,

                      online_quiz, or on_paper, determines whether or not peer reviews

                      will be turned on for the assignment.
                    type: boolean
                  assignment[automatic_peer_reviews]:
                    required: false
                    displayName: assignment[automatic_peer_reviews]
                    description: |
                      Whether peer reviews will be assigned automatically by Canvas or if

                      teachers must manually assign peer reviews. Does not apply if peer reviews

                      are not enabled.
                    type: boolean
                  assignment[notify_of_update]:
                    required: false
                    displayName: assignment[notify_of_update]
                    description: |
                      If true, Canvas will send a notification to students in the class

                      notifying them that the content has changed.
                    type: boolean
                  assignment[group_category_id]:
                    required: false
                    displayName: assignment[group_category_id]
                    description: |
                      If present, the assignment will become a group assignment assigned

                      to the group.
                    type: integer
                    format: int64
                  assignment[grade_group_students_individually]:
                    required: false
                    displayName: assignment[grade_group_students_individually]
                    description: |
                      If this is a group assignment, teachers have the options to grade

                      students individually. If false, Canvas will apply the assignment's

                      score to each member of the group. If true, the teacher can manually

                      assign scores to each member of the group.
                    type: integer
                    format: int64
                  assignment[external_tool_tag_attributes]:
                    required: false
                    displayName: assignment[external_tool_tag_attributes]
                    description: |
                      Hash of external tool parameters if submission_types is ["external_tool"].

                      See Assignment object definition for format.
                    type: string
                  assignment[points_possible]:
                    required: false
                    displayName: assignment[points_possible]
                    description: The maximum points possible on the assignment.
                    type: number
                    format: double
                  assignment[grading_type]:
                    required: false
                    displayName: assignment[grading_type]
                    description: |
                      The strategy used for grading the assignment.

                      The assignment defaults to "points" if this field is omitted.
                    type: string
                    enum:
                    - pass_fail
                    - percent
                    - letter_grade
                    - gpa_scale
                    - points
                  assignment[due_at]:
                    required: false
                    displayName: assignment[due_at]
                    description: |
                      The day/time the assignment is due.

                      Accepts times in ISO 8601 format, e.g. 2014-10-21T18:48:00Z.
                    type: object
                  assignment[lock_at]:
                    required: false
                    displayName: assignment[lock_at]
                    description: |
                      The day/time the assignment is locked after. Must be after the due date if there is a due date.

                      Accepts times in ISO 8601 format, e.g. 2014-10-21T18:48:00Z.
                    type: object
                  assignment[unlock_at]:
                    required: false
                    displayName: assignment[unlock_at]
                    description: |
                      The day/time the assignment is unlocked. Must be before the due date if there is a due date.

                      Accepts times in ISO 8601 format, e.g. 2014-10-21T18:48:00Z.
                    type: object
                  assignment[description]:
                    required: false
                    displayName: assignment[description]
                    description: The assignment's description, supports HTML.
                    type: string
                  assignment[assignment_group_id]:
                    required: false
                    displayName: assignment[assignment_group_id]
                    description: |
                      The assignment group id to put the assignment in.

                      Defaults to the top assignment group in the course.
                    type: integer
                    format: int64
                  assignment[muted]:
                    required: false
                    displayName: assignment[muted]
                    description: |
                      Whether this assignment is muted.

                      A muted assignment does not send change notifications

                      and hides grades from students.

                      Defaults to false.
                    type: boolean
                  assignment[assignment_overrides]:
                    required: false
                    displayName: assignment[assignment_overrides]
                    description: List of overrides for the assignment.
                    type: array
                    items:
                      type: object
                  assignment[only_visible_to_overrides]:
                    required: false
                    displayName: assignment[only_visible_to_overrides]
                    description: |
                      Whether this assignment is only visible to overrides

                      (Only useful if 'differentiated assignments' account setting is on)
                    type: boolean
                  assignment[published]:
                    required: false
                    displayName: assignment[published]
                    description: |
                      Whether this assignment is published.

                      (Only useful if 'draft state' account setting is on)

                      Unpublished assignments are not visible to students.
                    type: boolean
                  assignment[grading_standard_id]:
                    required: false
                    displayName: assignment[grading_standard_id]
                    description: |
                      The grading standard id to set for the course.  If no value is provided for this argument the current grading_standard will be un-set from this course.

                      This will update the grading_type for the course to 'letter_grade' unless it is already 'gpa_scale'.
                    type: integer
                    format: int64
                  assignment[omit_from_final_grade]:
                    required: false
                    displayName: assignment[omit_from_final_grade]
                    description: Whether this assignment is counted towards a student's final grade.
                    type: boolean
                  assignment[moderated_grading]:
                    required: false
                    displayName: assignment[moderated_grading]
                    description: Whether this assignment is moderated.
                    type: boolean
                  assignment[allowed_attempts]:
                    required: false
                    displayName: assignment[allowed_attempts]
                    description: |
                      The number of submission attempts allowed for this assignment. Set to -1 or null for

                      unlimited attempts.
                    type: integer
                    format: int64
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
        /overrides:
          get:
            displayName: batch_retrieve_overrides_in_course
            description: Batch retrieve overrides in a course
            queryParameters:
              assignment_overrides[id]:
                required: true
                displayName: assignment_overrides[id]
                description: Ids of overrides to retrieve
                type: array
                items:
                  type: string
              assignment_overrides[assignment_id]:
                required: true
                displayName: assignment_overrides[assignment_id]
                description: Ids of assignments for each override
                type: array
                items:
                  type: string
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          post:
            displayName: batch_create_overrides_in_course
            description: Batch create overrides in a course
            body:
              multipart/form-data:
                type: object
                properties:
                  assignment_overrides:
                    required: true
                    displayName: assignment_overrides
                    description: |
                      Attributes for the new assignment overrides.

                      See {api:AssignmentOverridesController#create Create an assignment override} for available

                      attributes
                    type: array
                    items:
                      type: object
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: batch_update_overrides_in_course
            description: Batch update overrides in a course
            body:
              multipart/form-data:
                type: object
                properties:
                  assignment_overrides:
                    required: true
                    displayName: assignment_overrides
                    description: Attributes for the updated overrides.
                    type: array
                    items:
                      type: object
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
        /gradeable_students:
          get:
            displayName: list_multiple_assignments_gradeable_students
            description: List multiple assignments gradeable students
            queryParameters:
              assignment_ids:
                required: false
                displayName: assignment_ids
                description: Assignments being requested
                type: array
                items:
                  type: string
            responses:
              200:
                description: Success
        /{assignment_id}:
          uriParameters:
            assignment_id:
              required: true
              displayName: assignment_id
              description: ID
              type: string
          /extensions:
            post:
              displayName: set_extensions_for_student_assignment_submissions
              description: Set extensions for student assignment submissions
              body:
                multipart/form-data:
                  type: object
                  properties:
                    assignment_extensions[user_id]:
                      required: true
                      displayName: assignment_extensions[user_id]
                      description: The ID of the user we want to add assignment extensions for.
                      type: array
                      items:
                        type: integer
                        format: int32
                    assignment_extensions[extra_attempts]:
                      required: true
                      displayName: assignment_extensions[extra_attempts]
                      description: |
                        Number of times the student is allowed to re-take the assignment over the

                        limit.
                      type: array
                      items:
                        type: integer
                        format: int32
              responses:
                200:
                  description: Success
          /overrides:
            get:
              displayName: list_assignment_overrides
              description: List assignment overrides
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            post:
              displayName: create_assignment_override
              description: Create an assignment override
              body:
                multipart/form-data:
                  type: object
                  properties:
                    assignment_override[student_ids]:
                      required: false
                      displayName: assignment_override[student_ids]
                      description: |
                        The IDs of

                        the override's target students. If present, the IDs must each identify a

                        user with an active student enrollment in the course that is not already

                        targetted by a different adhoc override.
                      type: array
                      items:
                        type: integer
                        format: int32
                    assignment_override[title]:
                      required: false
                      displayName: assignment_override[title]
                      description: |
                        The title of the adhoc

                        assignment override. Required if student_ids is present, ignored

                        otherwise (the title is set to the name of the targetted group or section

                        instead).
                      type: string
                    assignment_override[group_id]:
                      required: false
                      displayName: assignment_override[group_id]
                      description: |
                        The ID of the

                        override's target group. If present, the following conditions must be met

                        for the override to be successful:


                        1. the assignment MUST be a group assignment (a group_category_id is assigned to it)

                        2. the ID must identify an active group in the group set the assignment is in

                        3. the ID must not be targetted by a different override


                        See {Appendix: Group assignments} for more info.
                      type: integer
                      format: int64
                    assignment_override[course_section_id]:
                      required: false
                      displayName: assignment_override[course_section_id]
                      description: |
                        The ID

                        of the override's target section. If present, must identify an active

                        section of the assignment's course not already targetted by a different

                        override.
                      type: integer
                      format: int64
                    assignment_override[due_at]:
                      required: false
                      displayName: assignment_override[due_at]
                      description: |
                        The day/time

                        the overridden assignment is due. Accepts times in ISO 8601 format, e.g.

                        2014-10-21T18:48:00Z. If absent, this override will not affect due date.

                        May be present but null to indicate the override removes any previous due

                        date.
                      type: object
                    assignment_override[unlock_at]:
                      required: false
                      displayName: assignment_override[unlock_at]
                      description: |
                        The day/time

                        the overridden assignment becomes unlocked. Accepts times in ISO 8601

                        format, e.g. 2014-10-21T18:48:00Z. If absent, this override will not

                        affect the unlock date. May be present but null to indicate the override

                        removes any previous unlock date.
                      type: object
                    assignment_override[lock_at]:
                      required: false
                      displayName: assignment_override[lock_at]
                      description: |
                        The day/time

                        the overridden assignment becomes locked. Accepts times in ISO 8601

                        format, e.g. 2014-10-21T18:48:00Z. If absent, this override will not

                        affect the lock date. May be present but null to indicate the override

                        removes any previous lock date.
                      type: object
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            /{id}:
              uriParameters:
                id:
                  required: true
                  displayName: id
                  description: ID
                  type: string
              get:
                displayName: get_single_assignment_override
                description: Get a single assignment override
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
              put:
                displayName: update_assignment_override
                description: Update an assignment override
                body:
                  multipart/form-data:
                    type: object
                    properties:
                      assignment_override[student_ids]:
                        required: false
                        displayName: assignment_override[student_ids]
                        description: |
                          The IDs of the

                          override's target students. If present, the IDs must each identify a

                          user with an active student enrollment in the course that is not already

                          targetted by a different adhoc override. Ignored unless the override

                          being updated is adhoc.
                        type: array
                        items:
                          type: integer
                          format: int32
                      assignment_override[title]:
                        required: false
                        displayName: assignment_override[title]
                        description: |
                          The title of an adhoc

                          assignment override. Ignored unless the override being updated is adhoc.
                        type: string
                      assignment_override[due_at]:
                        required: false
                        displayName: assignment_override[due_at]
                        description: |
                          The day/time

                          the overridden assignment is due. Accepts times in ISO 8601 format, e.g.

                          2014-10-21T18:48:00Z. If absent, this override will not affect due date.

                          May be present but null to indicate the override removes any previous due

                          date.
                        type: object
                      assignment_override[unlock_at]:
                        required: false
                        displayName: assignment_override[unlock_at]
                        description: |
                          The day/time

                          the overridden assignment becomes unlocked. Accepts times in ISO 8601

                          format, e.g. 2014-10-21T18:48:00Z. If absent, this override will not

                          affect the unlock date. May be present but null to indicate the override

                          removes any previous unlock date.
                        type: object
                      assignment_override[lock_at]:
                        required: false
                        displayName: assignment_override[lock_at]
                        description: |
                          The day/time

                          the overridden assignment becomes locked. Accepts times in ISO 8601

                          format, e.g. 2014-10-21T18:48:00Z. If absent, this override will not

                          affect the lock date. May be present but null to indicate the override

                          removes any previous lock date.
                        type: object
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
              delete:
                displayName: delete_assignment_override
                description: Delete an assignment override
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
          /moderated_students:
            get:
              displayName: list_students_selected_for_moderation
              description: List students selected for moderation
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            post:
              displayName: select_students_for_moderation
              description: Select students for moderation
              body:
                multipart/form-data:
                  type: object
                  properties:
                    student_ids:
                      required: false
                      displayName: student_ids
                      description: user ids for students to select for moderation
                      type: array
                      items:
                        type: number
                        format: double
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
          /anonymous_provisional_grades/status:
            get:
              displayName: show_provisional_grade_status_for_student
              description: Show provisional grade status for a student
              queryParameters:
                anonymous_id:
                  required: false
                  displayName: anonymous_id
                  description: The id of the student to show the status for
                  type: string
              responses:
                200:
                  description: Success
          /peer_reviews:
            get:
              displayName: get_all_peer_reviews_courses_peer_reviews
              description: Get all Peer Reviews
              queryParameters:
                include:
                  required: false
                  displayName: include
                  description: Associations to include with the peer review.
                  type: string
                  enum:
                  - submission_comments
                  - user
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
          /submissions:
            post:
              displayName: submit_assignment_courses
              description: Submit an assignment
              body:
                multipart/form-data:
                  type: object
                  properties:
                    submission[submission_type]:
                      required: true
                      displayName: submission[submission_type]
                      description: |
                        The type of submission being made. The assignment submission_types must

                        include this submission type as an allowed option, or the submission will be rejected with a 400 error.


                        The submission_type given determines which of the following parameters is

                        used. For instance, to submit a URL, submission [submission_type] must be

                        set to "online_url", otherwise the submission [url] parameter will be

                        ignored.
                      type: string
                      enum:
                      - online_text_entry
                      - online_url
                      - online_upload
                      - media_recording
                      - basic_lti_launch
                    comment[text_comment]:
                      required: false
                      displayName: comment[text_comment]
                      description: Include a textual comment with the submission.
                      type: string
                    submission[body]:
                      required: false
                      displayName: submission[body]
                      description: |
                        Submit the assignment as an HTML document snippet. Note this HTML snippet

                        will be sanitized using the same ruleset as a submission made from the

                        Canvas web UI. The sanitized HTML will be returned in the response as the

                        submission body. Requires a submission_type of "online_text_entry".
                      type: string
                    submission[url]:
                      required: false
                      displayName: submission[url]
                      description: |
                        Submit the assignment as a URL. The URL scheme must be "http" or "https",

                        no "ftp" or other URL schemes are allowed. If no scheme is given (e.g.

                        "www.example.com") then "http" will be assumed. Requires a submission_type

                        of "online_url" or "basic_lti_launch".
                      type: string
                    submission[file_ids]:
                      required: false
                      displayName: submission[file_ids]
                      description: |
                        Submit the assignment as a set of one or more previously uploaded files

                        residing in the submitting user's files section (or the group's files

                        section, for group assignments).


                        To upload a new file to submit, see the submissions {api:SubmissionsApiController#create_file Upload a file API}.


                        Requires a submission_type of "online_upload".
                      type: array
                      items:
                        type: integer
                        format: int32
                    submission[media_comment_id]:
                      required: false
                      displayName: submission[media_comment_id]
                      description: |
                        The media comment id to submit. Media comment ids can be submitted via

                        this API, however, note that there is not yet an API to generate or list

                        existing media comments, so this functionality is currently of limited use.


                        Requires a submission_type of "media_recording".
                      type: string
                    submission[media_comment_type]:
                      required: false
                      displayName: submission[media_comment_type]
                      description: The type of media comment being submitted.
                      type: string
                      enum:
                      - audio
                      - video
              responses:
                200:
                  description: Success
            get:
              displayName: list_assignment_submissions_courses
              description: List assignment submissions
              queryParameters:
                include:
                  required: false
                  displayName: include
                  description: Associations to include with the group.  "group" will add group_id and group_name.
                  type: array
                  items:
                    type: string
                grouped:
                  required: false
                  displayName: grouped
                  description: If this argument is true, the response will be grouped by student groups.
                  type: boolean
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            /{submission_id}/peer_reviews:
              uriParameters:
                submission_id:
                  required: true
                  displayName: submission_id
                  description: ID
                  type: string
              get:
                displayName: get_all_peer_reviews_courses_submissions
                description: Get all Peer Reviews
                queryParameters:
                  include:
                    required: false
                    displayName: include
                    description: Associations to include with the peer review.
                    type: string
                    enum:
                    - submission_comments
                    - user
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
              post:
                displayName: create_peer_review_courses
                description: Create Peer Review
                body:
                  multipart/form-data:
                    type: object
                    properties:
                      user_id:
                        required: true
                        displayName: user_id
                        description: user_id to assign as reviewer on this assignment
                        type: integer
                        format: int64
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
              delete:
                displayName: delete_peer_review_courses
                description: Delete Peer Review
                queryParameters:
                  user_id:
                    required: true
                    displayName: user_id
                    description: user_id to delete as reviewer on this assignment
                    type: integer
                    format: int64
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
            /{user_id}:
              uriParameters:
                user_id:
                  required: true
                  displayName: user_id
                  description: ID
                  type: string
              get:
                displayName: get_single_submission_courses
                description: Get a single submission
                queryParameters:
                  include:
                    required: false
                    displayName: include
                    description: Associations to include with the group.
                    type: string
                    enum:
                    - submission_history
                    - submission_comments
                    - rubric_assessment
                    - visibility
                    - course
                    - user
                responses:
                  200:
                    description: Success
              put:
                displayName: grade_or_comment_on_submission_courses
                description: Grade or comment on a submission
                body:
                  multipart/form-data:
                    type: object
                    properties:
                      comment[text_comment]:
                        required: false
                        displayName: comment[text_comment]
                        description: Add a textual comment to the submission.
                        type: string
                      comment[group_comment]:
                        required: false
                        displayName: comment[group_comment]
                        description: |
                          Whether or not this comment should be sent to the entire group (defaults

                          to false). Ignored if this is not a group assignment or if no text_comment

                          is provided.
                        type: boolean
                      comment[media_comment_id]:
                        required: false
                        displayName: comment[media_comment_id]
                        description: |
                          Add an audio/video comment to the submission. Media comments can be added

                          via this API, however, note that there is not yet an API to generate or

                          list existing media comments, so this functionality is currently of

                          limited use.
                        type: string
                      comment[media_comment_type]:
                        required: false
                        displayName: comment[media_comment_type]
                        description: The type of media comment being added.
                        type: string
                        enum:
                        - audio
                        - video
                      comment[file_ids]:
                        required: false
                        displayName: comment[file_ids]
                        description: |
                          Attach files to this comment that were previously uploaded using the

                          Submission Comment API's files action
                        type: array
                        items:
                          type: integer
                          format: int32
                      include[visibility]:
                        required: false
                        displayName: include[visibility]
                        description: Whether this assignment is visible to the owner of the submission
                        type: string
                      submission[posted_grade]:
                        required: false
                        displayName: submission[posted_grade]
                        description: |
                          Assign a score to the submission, updating both the "score" and "grade"

                          fields on the submission record. This parameter can be passed in a few

                          different formats:


                          points:: A floating point or integral value, such as "13.5". The grade
                            will be interpreted directly as the score of the assignment.
                            Values above assignment.points_possible are allowed, for awarding
                            extra credit.
                          percentage:: A floating point value appended with a percent sign, such as
                             "40%". The grade will be interpreted as a percentage score on the
                             assignment, where 100% == assignment.points_possible. Values above 100%
                             are allowed, for awarding extra credit.
                          letter grade:: A letter grade, following the assignment's defined letter
                             grading scheme. For example, "A-". The resulting score will be the high
                             end of the defined range for the letter grade. For instance, if "B" is
                             defined as 86% to 84%, a letter grade of "B" will be worth 86%. The
                             letter grade will be rejected if the assignment does not have a defined
                             letter grading scheme. For more fine-grained control of scores, pass in
                             points or percentage rather than the letter grade.
                          "pass/complete/fail/incomplete":: A string value of "pass" or "complete"
                             will give a score of 100%. "fail" or "incomplete" will give a score of
                             0.

                          Note that assignments with grading_type of "pass_fail" can only be

                          assigned a score of 0 or assignment.points_possible, nothing inbetween. If

                          a posted_grade in the "points" or "percentage" format is sent, the grade

                          will only be accepted if the grade equals one of those two values.
                        type: string
                      submission[excuse]:
                        required: false
                        displayName: submission[excuse]
                        description: Sets the "excused" status of an assignment.
                        type: boolean
                      submission[late_policy_status]:
                        required: false
                        displayName: submission[late_policy_status]
                        description: Sets the late policy status to either "late", "missing", "none", or null.
                        type: string
                      submission[seconds_late_override]:
                        required: false
                        displayName: submission[seconds_late_override]
                        description: Sets the seconds late if late policy status is "late"
                        type: integer
                        format: int64
                      rubric_assessment:
                        required: false
                        displayName: rubric_assessment
                        description: |
                          Assign a rubric assessment to this assignment submission. The

                          sub-parameters here depend on the rubric for the assignment. The general

                          format is, for each row in the rubric:


                          The points awarded for this row.
                            rubric_assessment[criterion_id][points]

                          Comments to add for this row.
                            rubric_assessment[criterion_id][comments]

                          For example, if the assignment rubric is (in JSON format):
                            !!!javascript
                            [
                              {
                                'id': 'crit1',
                                'points': 10,
                                'description': 'Criterion 1',
                                'ratings':
                                [
                                  { 'description': 'Good', 'points': 10 },
                                  { 'description': 'Poor', 'points': 3 }
                                ]
                              },
                              {
                                'id': 'crit2',
                                'points': 5,
                                'description': 'Criterion 2',
                                'ratings':
                                [
                                  { 'description': 'Complete', 'points': 5 },
                                  { 'description': 'Incomplete', 'points': 0 }
                                ]
                              }
                            ]

                          Then a possible set of values for rubric_assessment would be:
                              rubric_assessment[crit1][points]=3&rubric_assessment[crit2][points]=5&rubric_assessment[crit2][comments]=Well%20Done.
                        type: object
                responses:
                  200:
                    description: Success
              /comments/files:
                post:
                  displayName: upload_file
                  description: Upload a file
                  responses:
                    200:
                      description: Success
              /files:
                post:
                  displayName: upload_file_courses
                  description: Upload a file
                  responses:
                    200:
                      description: Success
              /read:
                put:
                  displayName: mark_submission_as_read_courses
                  description: Mark submission as read
                  responses:
                    200:
                      description: Success
                delete:
                  displayName: mark_submission_as_unread_courses
                  description: Mark submission as unread
                  responses:
                    200:
                      description: Success
            /update_grades:
              post:
                displayName: grade_or_comment_on_multiple_submissions_courses_assignments
                description: Grade or comment on multiple submissions
                body:
                  multipart/form-data:
                    type: object
                    properties:
                      grade_data[<student_id>][posted_grade]:
                        required: false
                        displayName: grade_data[<student_id>][posted_grade]
                        description: |
                          See documentation for the posted_grade argument in the

                          {api:SubmissionsApiController#update Submissions Update} documentation
                        type: string
                      grade_data[<student_id>][excuse]:
                        required: false
                        displayName: grade_data[<student_id>][excuse]
                        description: |
                          See documentation for the excuse argument in the

                          {api:SubmissionsApiController#update Submissions Update} documentation
                        type: boolean
                      grade_data[<student_id>][rubric_assessment]:
                        required: false
                        displayName: grade_data[<student_id>][rubric_assessment]
                        description: |
                          See documentation for the rubric_assessment argument in the

                          {api:SubmissionsApiController#update Submissions Update} documentation
                        type: object
                      grade_data[<student_id>][text_comment]:
                        required: false
                        displayName: grade_data[<student_id>][text_comment]
                        description: no description
                        type: string
                      grade_data[<student_id>][group_comment]:
                        required: false
                        displayName: grade_data[<student_id>][group_comment]
                        description: no description
                        type: boolean
                      grade_data[<student_id>][media_comment_id]:
                        required: false
                        displayName: grade_data[<student_id>][media_comment_id]
                        description: no description
                        type: string
                      grade_data[<student_id>][media_comment_type]:
                        required: false
                        displayName: grade_data[<student_id>][media_comment_type]
                        description: no description
                        type: string
                        enum:
                        - audio
                        - video
                      grade_data[<student_id>][file_ids]:
                        required: false
                        displayName: grade_data[<student_id>][file_ids]
                        description: |
                          See documentation for the comment[] arguments in the

                          {api:SubmissionsApiController#update Submissions Update} documentation
                        type: array
                        items:
                          type: integer
                          format: int32
                      grade_data[<student_id>][assignment_id]:
                        required: false
                        displayName: grade_data[<student_id>][assignment_id]
                        description: |
                          Specifies which assignment to grade.  This argument is not necessary when

                          using the assignment-specific endpoints.
                        type: integer
                        format: int64
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
          /gradeable_students:
            get:
              displayName: list_gradeable_students
              description: List gradeable students
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
          /submission_summary:
            get:
              displayName: submission_summary_courses
              description: Submission Summary
              queryParameters:
                grouped:
                  required: false
                  displayName: grouped
                  description: If this argument is true, the response will take into account student groups.
                  type: boolean
              responses:
                200:
                  description: Success
          /provisional_grades:
            /bulk_select:
              put:
                displayName: bulk_select_provisional_grades
                description: Bulk select provisional grades
                responses:
                  200:
                    description: Success
            /status:
              get:
                displayName: show_provisional_grade_status_for_student
                description: Show provisional grade status for a student
                queryParameters:
                  student_id:
                    required: false
                    displayName: student_id
                    description: The id of the student to show the status for
                    type: integer
                    format: int64
                responses:
                  200:
                    description: Success
            /{provisional_grade_id}/select:
              uriParameters:
                provisional_grade_id:
                  required: true
                  displayName: provisional_grade_id
                  description: ID
                  type: string
              put:
                displayName: select_provisional_grade
                description: Select provisional grade
                responses:
                  200:
                    description: Success
            /publish:
              post:
                displayName: publish_provisional_grades_for_assignment
                description: Publish provisional grades for an assignment
                responses:
                  200:
                    description: Success
      /blueprint_templates/{template_id}:
        uriParameters:
          template_id:
            required: true
            displayName: template_id
            description: ID
            type: string
        get:
          displayName: get_blueprint_information
          description: Get blueprint information
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /associated_courses:
          get:
            displayName: get_associated_course_information
            description: Get associated course information
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
        /update_associations:
          put:
            displayName: update_associated_courses
            description: Update associated courses
            body:
              multipart/form-data:
                type: object
                properties:
                  course_ids_to_add:
                    required: false
                    displayName: course_ids_to_add
                    description: Courses to add as associated courses
                    type: object
                  course_ids_to_remove:
                    required: false
                    displayName: course_ids_to_remove
                    description: Courses to remove as associated courses
                    type: object
            responses:
              200:
                description: Success
        /migrations:
          post:
            displayName: begin_migration_to_push_to_associated_courses
            description: Begin a migration to push to associated courses
            body:
              multipart/form-data:
                type: object
                properties:
                  comment:
                    required: false
                    displayName: comment
                    description: An optional comment to be included in the sync history.
                    type: string
                  send_notification:
                    required: false
                    displayName: send_notification
                    description: Send a notification to the calling user when the sync completes.
                    type: boolean
                  copy_settings:
                    required: false
                    displayName: copy_settings
                    description: |
                      Whether course settings should be copied over to associated courses.

                      Defaults to true for newly associated courses.
                    type: boolean
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          get:
            displayName: list_blueprint_migrations
            description: List blueprint migrations
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /{id}:
            uriParameters:
              id:
                required: true
                displayName: id
                description: ID
                type: string
            get:
              displayName: show_blueprint_migration
              description: Show a blueprint migration
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            /details:
              get:
                displayName: get_migration_details
                description: Get migration details
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
        /restrict_item:
          put:
            displayName: set_or_remove_restrictions_on_blueprint_course_object
            description: Set or remove restrictions on a blueprint course object
            body:
              multipart/form-data:
                type: object
                properties:
                  content_type:
                    required: false
                    displayName: content_type
                    description: The type of the object.
                    type: string
                    enum:
                    - assignment
                    - attachment
                    - discussion_topic
                    - external_tool
                    - quiz
                    - wiki_page
                  content_id:
                    required: false
                    displayName: content_id
                    description: The ID of the object.
                    type: integer
                    format: int64
                  restricted:
                    required: false
                    displayName: restricted
                    description: Whether to apply restrictions.
                    type: boolean
                  restrictions:
                    required: false
                    displayName: restrictions
                    description: |
                      (Optional) If the object is restricted, this specifies a set of restrictions. If not specified,

                      the course-level restrictions will be used. See {api:CoursesController#update Course API update documentation}
                    type: object
            responses:
              200:
                description: Success
        /unsynced_changes:
          get:
            displayName: get_unsynced_changes
            description: Get unsynced changes
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /blueprint_subscriptions:
        get:
          displayName: list_blueprint_subscriptions
          description: List blueprint subscriptions
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{subscription_id}/migrations:
          uriParameters:
            subscription_id:
              required: true
              displayName: subscription_id
              description: ID
              type: string
          get:
            displayName: list_blueprint_imports
            description: List blueprint imports
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /{id}:
            uriParameters:
              id:
                required: true
                displayName: id
                description: ID
                type: string
            get:
              displayName: show_blueprint_import
              description: Show a blueprint import
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            /details:
              get:
                displayName: get_import_details
                description: Get import details
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
      /collaborations:
        get:
          displayName: list_collaborations_courses
          description: List collaborations
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /potential_collaborators:
        get:
          displayName: list_potential_members_courses
          description: List potential members
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /conferences:
        get:
          displayName: list_conferences_courses
          description: List conferences
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /content_exports:
        get:
          displayName: list_content_exports_courses
          description: List content exports
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: export_content_courses
          description: Export content
          body:
            multipart/form-data:
              type: object
              properties:
                export_type:
                  required: true
                  displayName: export_type
                  description: |
                    "common_cartridge":: Export the contents of the course in the Common Cartridge (.imscc) format

                    "qti":: Export quizzes from a course in the QTI format

                    "zip":: Export files from a course, group, or user in a zip file
                  type: string
                  enum:
                  - common_cartridge
                  - qti
                  - zip
                skip_notifications:
                  required: false
                  displayName: skip_notifications
                  description: "Don't send the notifications about the export to the user. Default: false"
                  type: boolean
                select:
                  required: false
                  displayName: select
                  description: |
                    The select parameter allows exporting specific data. The keys are object types like 'files',

                    'folders', 'pages', etc. The value for each key is a list of object ids. An id can be an

                    integer or a string.


                    Multiple object types can be selected in the same call. However, not all object types are

                    valid for every export_type. Common Cartridge supports all object types. Zip and QTI only

                    support the object types as described below.


                    "folders":: Also supported for zip export_type.

                    "files":: Also supported for zip export_type.

                    "quizzes":: Also supported for qti export_type.
                  type: object
                  additionalProperties: true
                  properties: {}
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: show_content_export_courses
            description: Show content export
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /content_migrations:
        get:
          displayName: list_content_migrations_courses
          description: List content migrations
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_content_migration_courses
          description: Create a content migration
          body:
            multipart/form-data:
              type: object
              properties:
                migration_type:
                  required: true
                  displayName: migration_type
                  description: |
                    The type of the migration. Use the

                    {api:ContentMigrationsController#available_migrators Migrator} endpoint to

                    see all available migrators. Default allowed values:

                    canvas_cartridge_importer, common_cartridge_importer,

                    course_copy_importer, zip_file_importer, qti_converter, moodle_converter
                  type: string
                pre_attachment[name]:
                  required: false
                  displayName: pre_attachment[name]
                  description: |
                    Required if uploading a file. This is the first step in uploading a file

                    to the content migration. See the {file:file_uploads.html File Upload

                    Documentation} for details on the file upload workflow.
                  type: string
                pre_attachment[*]:
                  required: false
                  displayName: pre_attachment[*]
                  description: |
                    Other file upload properties, See {file:file_uploads.html File Upload

                    Documentation}
                  type: string
                settings[file_url]:
                  required: false
                  displayName: settings[file_url]
                  description: A URL to download the file from. Must not require authentication.
                  type: string
                settings[source_course_id]:
                  required: false
                  displayName: settings[source_course_id]
                  description: |
                    The course to copy from for a course copy migration. (required if doing

                    course copy)
                  type: string
                settings[folder_id]:
                  required: false
                  displayName: settings[folder_id]
                  description: The folder to unzip the .zip file into for a zip_file_import.
                  type: string
                settings[overwrite_quizzes]:
                  required: false
                  displayName: settings[overwrite_quizzes]
                  description: |
                    Whether to overwrite quizzes with the same identifiers between content

                    packages.
                  type: boolean
                settings[question_bank_id]:
                  required: false
                  displayName: settings[question_bank_id]
                  description: |
                    The existing question bank ID to import questions into if not specified in

                    the content package.
                  type: integer
                  format: int64
                settings[question_bank_name]:
                  required: false
                  displayName: settings[question_bank_name]
                  description: |
                    The question bank to import questions into if not specified in the content

                    package, if both bank id and name are set, id will take precedence.
                  type: string
                date_shift_options[shift_dates]:
                  required: false
                  displayName: date_shift_options[shift_dates]
                  description: Whether to shift dates in the copied course
                  type: boolean
                date_shift_options[old_start_date]:
                  required: false
                  displayName: date_shift_options[old_start_date]
                  description: The original start date of the source content/course
                  type: object
                date_shift_options[old_end_date]:
                  required: false
                  displayName: date_shift_options[old_end_date]
                  description: The original end date of the source content/course
                  type: object
                date_shift_options[new_start_date]:
                  required: false
                  displayName: date_shift_options[new_start_date]
                  description: The new start date for the content/course
                  type: object
                date_shift_options[new_end_date]:
                  required: false
                  displayName: date_shift_options[new_end_date]
                  description: The new end date for the source content/course
                  type: object
                date_shift_options[day_substitutions][X]:
                  required: false
                  displayName: date_shift_options[day_substitutions][X]
                  description: |
                    Move anything scheduled for day 'X' to the specified day. (0-Sunday,

                    1-Monday, 2-Tuesday, 3-Wednesday, 4-Thursday, 5-Friday, 6-Saturday)
                  type: integer
                  format: int64
                date_shift_options[remove_dates]:
                  required: false
                  displayName: date_shift_options[remove_dates]
                  description: |
                    Whether to remove dates in the copied course. Cannot be used

                    in conjunction with *shift_dates*.
                  type: boolean
                selective_import:
                  required: false
                  displayName: selective_import
                  description: |
                    If set, perform a selective import instead of importing all content.

                    The migration will identify the contents of the package and then stop

                    in the +waiting_for_select+ workflow state. At this point, use the

                    {api:ContentMigrationsController#content_list List items endpoint}

                    to enumerate the contents of the package, identifying the copy

                    parameters for the desired content. Then call the

                    {api:ContentMigrationsController#update Update endpoint} and provide these

                    copy parameters to start the import.
                  type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{content_migration_id}/migration_issues:
          uriParameters:
            content_migration_id:
              required: true
              displayName: content_migration_id
              description: ID
              type: string
          get:
            displayName: list_migration_issues_courses
            description: List migration issues
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /{id}:
            uriParameters:
              id:
                required: true
                displayName: id
                description: ID
                type: string
            get:
              displayName: get_migration_issue_courses
              description: Get a migration issue
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            put:
              displayName: update_migration_issue_courses
              description: Update a migration issue
              body:
                multipart/form-data:
                  type: object
                  properties:
                    workflow_state:
                      required: true
                      displayName: workflow_state
                      description: Set the workflow_state of the issue.
                      type: string
                      enum:
                      - active
                      - resolved
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_content_migration_courses
            description: Get a content migration
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: update_content_migration_courses
            description: Update a content migration
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /selective_data:
            get:
              displayName: list_items_for_selective_import_courses
              description: List items for selective import
              queryParameters:
                type:
                  required: false
                  displayName: type
                  description: The type of content to enumerate.
                  type: string
                  enum:
                  - context_modules
                  - assignments
                  - quizzes
                  - assessment_question_banks
                  - discussion_topics
                  - wiki_pages
                  - context_external_tools
                  - tool_profiles
                  - announcements
                  - calendar_events
                  - rubrics
                  - groups
                  - learning_outcomes
                  - attachments
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
        /migrators:
          get:
            displayName: list_migration_systems_courses
            description: List Migration Systems
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /csp_settings:
        get:
          displayName: get_current_settings_for_account_or_course_courses
          description: Get current settings for account or course
          responses:
            200:
              description: Success
        put:
          displayName: enable_disable_or_clear_explicit_csp_setting_courses
          description: Enable, disable, or clear explicit CSP setting
          body:
            multipart/form-data:
              type: object
              properties:
                status:
                  required: true
                  displayName: status
                  description: |
                    If set to "enabled" for an account, CSP will be enabled for all its courses and sub-accounts (that

                    have not explicitly enabled or disabled it), using the domain whitelist set on this account.

                    If set to "disabled", CSP will be disabled for this account or course and for all sub-accounts

                    that have not explicitly re-enabled it.

                    If set to "inherited", this account or course will reset to the default state where CSP settings

                    are inherited from the first parent account to have them explicitly set.
                  type: string
                  enum:
                  - enabled
                  - disabled
                  - inherited
          responses:
            200:
              description: Success
      /quiz_extensions:
        post:
          displayName: set_extensions_for_student_quiz_submissions
          description: Set extensions for student quiz submissions
          body:
            multipart/form-data:
              type: object
              properties:
                user_id:
                  required: true
                  displayName: user_id
                  description: The ID of the user we want to add quiz extensions for.
                  type: integer
                  format: int64
                extra_attempts:
                  required: false
                  displayName: extra_attempts
                  description: |
                    Number of times the student is allowed to re-take the quiz over the

                    multiple-attempt limit. This is limited to 1000 attempts or less.
                  type: integer
                  format: int64
                extra_time:
                  required: false
                  displayName: extra_time
                  description: |
                    The number of extra minutes to allow for all attempts. This will

                    add to the existing time limit on the submission. This is limited to

                    10080 minutes (1 week)
                  type: integer
                  format: int64
                manually_unlocked:
                  required: false
                  displayName: manually_unlocked
                  description: |
                    Allow the student to take the quiz even if it's locked for

                    everyone else.
                  type: boolean
                extend_from_now:
                  required: false
                  displayName: extend_from_now
                  description: |
                    The number of minutes to extend the quiz from the current time. This is

                    mutually exclusive to extend_from_end_at. This is limited to 1440

                    minutes (24 hours)
                  type: integer
                  format: int64
                extend_from_end_at:
                  required: false
                  displayName: extend_from_end_at
                  description: |
                    The number of minutes to extend the quiz beyond the quiz's current

                    ending time. This is mutually exclusive to extend_from_now. This is

                    limited to 1440 minutes (24 hours)
                  type: integer
                  format: int64
          responses:
            200:
              description: Success
      /files:
        post:
          displayName: upload_file
          description: Upload a file
          responses:
            200:
              description: Success
        get:
          displayName: list_files_courses
          description: List files
          queryParameters:
            content_types:
              required: false
              displayName: content_types
              description: |
                Filter results by content-type. You can specify type/subtype pairs (e.g.,

                'image/jpeg'), or simply types (e.g., 'image', which will match

                'image/gif', 'image/jpeg', etc.).
              type: array
              items:
                type: string
            search_term:
              required: false
              displayName: search_term
              description: The partial name of the files to match and return.
              type: string
            include:
              required: false
              displayName: include
              description: |
                Array of additional information to include.


                "user":: the user who uploaded the file or last edited its content

                "usage_rights":: copyright and license information for the file (see UsageRights)
              type: string
              enum:
              - user
            only:
              required: false
              displayName: only
              description: |
                Array of information to restrict to. Overrides include[]


                "names":: only returns file name information
              type: array
              items:
                type: object
            sort:
              required: false
              displayName: sort
              description: Sort results by this field. Defaults to 'name'. Note that `sort=user` implies `include[]=user`.
              type: string
              enum:
              - name
              - size
              - created_at
              - updated_at
              - content_type
              - user
            order:
              required: false
              displayName: order
              description: The sorting order. Defaults to 'asc'.
              type: string
              enum:
              - asc
              - desc
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: array
                  items:
                    type: file
        /quota:
          get:
            displayName: get_quota_information_courses
            description: Get quota information
            responses:
              200:
                description: Success
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_file_courses
            description: Get file
            queryParameters:
              include:
                required: false
                displayName: include
                description: |
                  Array of additional information to include.


                  "user":: the user who uploaded the file or last edited its content

                  "usage_rights":: copyright and license information for the file (see UsageRights)
                type: string
                enum:
                - user
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: file
      /students:
        get:
          displayName: list_students
          description: List students
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /submissions:
          get:
            displayName: list_submissions_for_multiple_assignments_courses
            description: List submissions for multiple assignments
            queryParameters:
              student_ids:
                required: false
                displayName: student_ids
                description: |
                  List of student ids to return submissions for. If this argument is

                  omitted, return submissions for the calling user. Students may only list

                  their own submissions. Observers may only list those of associated

                  students. The special id "all" will return submissions for all students

                  in the course/section as appropriate.
                type: array
                items:
                  type: string
              assignment_ids:
                required: false
                displayName: assignment_ids
                description: |
                  List of assignments to return submissions for. If none are given,

                  submissions for all assignments are returned.
                type: array
                items:
                  type: string
              grouped:
                required: false
                displayName: grouped
                description: |
                  If this argument is present, the response will be grouped by student,

                  rather than a flat array of submissions.
                type: boolean
              post_to_sis:
                required: false
                displayName: post_to_sis
                description: |
                  If this argument is set to true, the response will only include

                  submissions for assignments that have the post_to_sis flag set to true and

                  user enrollments that were added through sis.
                type: boolean
              submitted_since:
                required: false
                displayName: submitted_since
                description: |
                  If this argument is set, the response will only include submissions that

                  were submitted after the specified date_time. This will exclude

                  submissions that do not have a submitted_at which will exclude unsubmitted

                  submissions.

                  The value must be formatted as ISO 8601 YYYY-MM-DDTHH:MM:SSZ.
                type: object
              graded_since:
                required: false
                displayName: graded_since
                description: |
                  If this argument is set, the response will only include submissions that

                  were graded after the specified date_time. This will exclude

                  submissions that have not been graded.

                  The value must be formatted as ISO 8601 YYYY-MM-DDTHH:MM:SSZ.
                type: object
              grading_period_id:
                required: false
                displayName: grading_period_id
                description: |
                  The id of the grading period in which submissions are being requested

                  (Requires grading periods to exist on the account)
                type: integer
                format: int64
              workflow_state:
                required: false
                displayName: workflow_state
                description: The current status of the submission
                type: string
                enum:
                - submitted
                - unsubmitted
                - graded
                - pending_review
              enrollment_state:
                required: false
                displayName: enrollment_state
                description: |
                  The current state of the enrollments. If omitted will include all

                  enrollments that are not deleted.
                type: string
                enum:
                - active
                - concluded
              state_based_on_date:
                required: false
                displayName: state_based_on_date
                description: |
                  If omitted it is set to true. When set to false it will ignore the effective

                  state of the student enrollments and use the workflow_state for the

                  enrollments. The argument is ignored unless enrollment_state argument is

                  also passed.
                type: boolean
              order:
                required: false
                displayName: order
                description: |
                  The order submissions will be returned in.  Defaults to "id".  Doesn't

                  affect results for "grouped" mode.
                type: string
                enum:
                - id
                - graded_at
              order_direction:
                required: false
                displayName: order_direction
                description: |
                  Determines whether ordered results are returned in ascending or descending

                  order.  Defaults to "ascending".  Doesn't affect results for "grouped" mode.
                type: string
              include:
                required: false
                displayName: include
                description: |
                  Associations to include with the group. `total_scores` requires the

                  `grouped` argument.
                type: string
                enum:
                - submission_history
                - submission_comments
                - rubric_assessment
                - assignment
                - total_scores
                - visibility
                - course
                - user
            responses:
              200:
                description: Success
      /users:
        get:
          displayName: list_users_in_course_users
          description: List users in course
          queryParameters:
            search_term:
              required: false
              displayName: search_term
              description: The partial name or full ID of the users to match and return in the results list.
              type: string
            enrollment_type:
              required: false
              displayName: enrollment_type
              description: |
                When set, only return users where the user is enrolled as this type.

                "student_view" implies include[]=test_student.

                This argument is ignored if enrollment_role is given.
              type: string
              enum:
              - teacher
              - student
              - student_view
              - ta
              - observer
              - designer
            enrollment_role:
              required: false
              displayName: enrollment_role
              description: |
                Deprecated

                When set, only return users enrolled with the specified course-level role.  This can be

                a role created with the {api:RoleOverridesController#add_role Add Role API} or a

                base role type of 'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment',

                'ObserverEnrollment', or 'DesignerEnrollment'.
              type: string
            enrollment_role_id:
              required: false
              displayName: enrollment_role_id
              description: |
                When set, only return courses where the user is enrolled with the specified

                course-level role.  This can be a role created with the

                {api:RoleOverridesController#add_role Add Role API} or a built_in role id with type

                'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment', 'ObserverEnrollment',

                or 'DesignerEnrollment'.
              type: integer
              format: int64
            include:
              required: false
              displayName: include
              description: |
                - "enrollments":

                Optionally include with each Course the user's current and invited

                enrollments. If the user is enrolled as a student, and the account has

                permission to manage or view all grades, each enrollment will include a

                'grades' key with 'current_score', 'final_score', 'current_grade' and

                'final_grade' values.

                - "locked": Optionally include whether an enrollment is locked.

                - "avatar_url": Optionally include avatar_url.

                - "bio": Optionally include each user's bio.

                - "test_student": Optionally include the course's Test Student,

                if present. Default is to not include Test Student.

                - "custom_links": Optionally include plugin-supplied custom links for each student,

                such as analytics information

                - "current_grading_period_scores": if enrollments is included as

                well as this directive, the scores returned in the enrollment

                will be for the current grading period if there is one. A

                'grading_period_id' value will also be included with the

                scores. if grading_period_id is nil there is no current grading

                period and the score is a total score.
              type: string
              enum:
              - enrollments
              - locked
              - avatar_url
              - test_student
              - bio
              - custom_links
              - current_grading_period_scores
            user_id:
              required: false
              displayName: user_id
              description: |
                If this parameter is given and it corresponds to a user in the course,

                the +page+ parameter will be ignored and the page containing the specified user

                will be returned instead.
              type: string
            user_ids:
              required: false
              displayName: user_ids
              description: |
                If included, the course users set will only include users with IDs

                specified by the param. Note: this will not work in conjunction

                with the "user_id" argument but multiple user_ids can be included.
              type: array
              items:
                type: integer
                format: int32
            enrollment_state:
              required: false
              displayName: enrollment_state
              description: |
                When set, only return users where the enrollment workflow state is of one of the given types.

                "active" and "invited" enrollments are returned by default.
              type: string
              enum:
              - active
              - invited
              - rejected
              - completed
              - inactive
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_single_user
            description: Get single user
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
        /{user_id}/last_attended:
          uriParameters:
            user_id:
              required: true
              displayName: user_id
              description: ID
              type: string
          put:
            displayName: adds_last_attended_date_to_student_enrollment_in_course
            description: Adds last attended date to student enrollment in course
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /search_users:
        get:
          displayName: list_users_in_course_search_users
          description: List users in course
          queryParameters:
            search_term:
              required: false
              displayName: search_term
              description: The partial name or full ID of the users to match and return in the results list.
              type: string
            enrollment_type:
              required: false
              displayName: enrollment_type
              description: |
                When set, only return users where the user is enrolled as this type.

                "student_view" implies include[]=test_student.

                This argument is ignored if enrollment_role is given.
              type: string
              enum:
              - teacher
              - student
              - student_view
              - ta
              - observer
              - designer
            enrollment_role:
              required: false
              displayName: enrollment_role
              description: |
                Deprecated

                When set, only return users enrolled with the specified course-level role.  This can be

                a role created with the {api:RoleOverridesController#add_role Add Role API} or a

                base role type of 'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment',

                'ObserverEnrollment', or 'DesignerEnrollment'.
              type: string
            enrollment_role_id:
              required: false
              displayName: enrollment_role_id
              description: |
                When set, only return courses where the user is enrolled with the specified

                course-level role.  This can be a role created with the

                {api:RoleOverridesController#add_role Add Role API} or a built_in role id with type

                'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment', 'ObserverEnrollment',

                or 'DesignerEnrollment'.
              type: integer
              format: int64
            include:
              required: false
              displayName: include
              description: |
                - "enrollments":

                Optionally include with each Course the user's current and invited

                enrollments. If the user is enrolled as a student, and the account has

                permission to manage or view all grades, each enrollment will include a

                'grades' key with 'current_score', 'final_score', 'current_grade' and

                'final_grade' values.

                - "locked": Optionally include whether an enrollment is locked.

                - "avatar_url": Optionally include avatar_url.

                - "bio": Optionally include each user's bio.

                - "test_student": Optionally include the course's Test Student,

                if present. Default is to not include Test Student.

                - "custom_links": Optionally include plugin-supplied custom links for each student,

                such as analytics information

                - "current_grading_period_scores": if enrollments is included as

                well as this directive, the scores returned in the enrollment

                will be for the current grading period if there is one. A

                'grading_period_id' value will also be included with the

                scores. if grading_period_id is nil there is no current grading

                period and the score is a total score.
              type: string
              enum:
              - enrollments
              - locked
              - avatar_url
              - test_student
              - bio
              - custom_links
              - current_grading_period_scores
            user_id:
              required: false
              displayName: user_id
              description: |
                If this parameter is given and it corresponds to a user in the course,

                the +page+ parameter will be ignored and the page containing the specified user

                will be returned instead.
              type: string
            user_ids:
              required: false
              displayName: user_ids
              description: |
                If included, the course users set will only include users with IDs

                specified by the param. Note: this will not work in conjunction

                with the "user_id" argument but multiple user_ids can be included.
              type: array
              items:
                type: integer
                format: int32
            enrollment_state:
              required: false
              displayName: enrollment_state
              description: |
                When set, only return users where the enrollment workflow state is of one of the given types.

                "active" and "invited" enrollments are returned by default.
              type: string
              enum:
              - active
              - invited
              - rejected
              - completed
              - inactive
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /recent_students:
        get:
          displayName: list_recently_logged_in_students
          description: List recently logged in students
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /preview_html:
        post:
          displayName: preview_processed_html
          description: Preview processed html
          body:
            multipart/form-data:
              type: object
              properties:
                html:
                  required: false
                  displayName: html
                  description: The html content to process
                  type: string
          responses:
            200:
              description: Success
      /activity_stream:
        get:
          displayName: course_activity_stream
          description: Course activity stream
          responses:
            200:
              description: Success
        /summary:
          get:
            displayName: course_activity_stream_summary
            description: Course activity stream summary
            responses:
              200:
                description: Success
      /todo:
        get:
          displayName: course_todo_items
          description: Course TODO items
          responses:
            200:
              description: Success
      /settings:
        get:
          displayName: get_course_settings
          description: Get course settings
          responses:
            200:
              description: Success
        put:
          displayName: update_course_settings
          description: Update course settings
          body:
            multipart/form-data:
              type: object
              properties:
                allow_student_discussion_topics:
                  required: false
                  displayName: allow_student_discussion_topics
                  description: Let students create discussion topics
                  type: boolean
                allow_student_forum_attachments:
                  required: false
                  displayName: allow_student_forum_attachments
                  description: Let students attach files to discussions
                  type: boolean
                allow_student_discussion_editing:
                  required: false
                  displayName: allow_student_discussion_editing
                  description: Let students edit or delete their own discussion posts
                  type: boolean
                allow_student_organized_groups:
                  required: false
                  displayName: allow_student_organized_groups
                  description: Let students organize their own groups
                  type: boolean
                hide_final_grades:
                  required: false
                  displayName: hide_final_grades
                  description: Hide totals in student grades summary
                  type: boolean
                hide_distribution_graphs:
                  required: false
                  displayName: hide_distribution_graphs
                  description: Hide grade distribution graphs from students
                  type: boolean
                lock_all_announcements:
                  required: false
                  displayName: lock_all_announcements
                  description: Disable comments on announcements
                  type: boolean
                restrict_student_past_view:
                  required: false
                  displayName: restrict_student_past_view
                  description: Restrict students from viewing courses after end date
                  type: boolean
                restrict_student_future_view:
                  required: false
                  displayName: restrict_student_future_view
                  description: Restrict students from viewing courses before start date
                  type: boolean
                show_announcements_on_home_page:
                  required: false
                  displayName: show_announcements_on_home_page
                  description: Show the most recent announcements on the Course home page (if a Wiki, defaults to five announcements, configurable via home_page_announcement_limit)
                  type: boolean
                home_page_announcement_limit:
                  required: false
                  displayName: home_page_announcement_limit
                  description: Limit the number of announcements on the home page if enabled via show_announcements_on_home_page
                  type: integer
                  format: int64
          responses:
            200:
              description: Success
      /reset_content:
        post:
          displayName: reset_course
          description: Reset a course
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /effective_due_dates:
        get:
          displayName: get_effective_due_dates
          description: Get effective due dates
          queryParameters:
            assignment_ids:
              required: false
              displayName: assignment_ids
              description: no description
              type: array
              items:
                type: string
          responses:
            200:
              description: Success
      /permissions:
        get:
          displayName: permissions
          description: Permissions
          queryParameters:
            permissions:
              required: false
              displayName: permissions
              description: |
                List of permissions to check against the authenticated user.

                Permission names are documented in the {api:RoleOverridesController#add_role Create a role} endpoint.
              type: array
              items:
                type: string
          responses:
            200:
              description: Success
      /course_copy:
        post:
          displayName: copy_course_content
          description: Copy course content
          body:
            multipart/form-data:
              type: object
              properties:
                source_course:
                  required: false
                  displayName: source_course
                  description: ID or SIS-ID of the course to copy the content from
                  type: string
                except:
                  required: false
                  displayName: except
                  description: |
                    A list of the course content types to exclude, all areas not listed will

                    be copied.
                  type: string
                  enum:
                  - course_settings
                  - assignments
                  - external_tools
                  - files
                  - topics
                  - calendar_events
                  - quizzes
                  - wiki_pages
                  - modules
                  - outcomes
                only:
                  required: false
                  displayName: only
                  description: |
                    A list of the course content types to copy, all areas not listed will not

                    be copied.
                  type: string
                  enum:
                  - course_settings
                  - assignments
                  - external_tools
                  - files
                  - topics
                  - calendar_events
                  - quizzes
                  - wiki_pages
                  - modules
                  - outcomes
          responses:
            200:
              description: Success
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_course_copy_status
            description: Get course copy status
            responses:
              200:
                description: Success
      /custom_gradebook_columns:
        get:
          displayName: list_custom_gradebook_columns
          description: List custom gradebook columns
          queryParameters:
            include_hidden:
              required: false
              displayName: include_hidden
              description: Include hidden parameters (defaults to false)
              type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_custom_gradebook_column
          description: Create a custom gradebook column
          body:
            multipart/form-data:
              type: object
              properties:
                column[title]:
                  required: true
                  displayName: column[title]
                  description: no description
                  type: string
                column[position]:
                  required: false
                  displayName: column[position]
                  description: The position of the column relative to other custom columns
                  type: integer
                  format: int64
                column[hidden]:
                  required: false
                  displayName: column[hidden]
                  description: Hidden columns are not displayed in the gradebook
                  type: boolean
                column[teacher_notes]:
                  required: false
                  displayName: column[teacher_notes]
                  description: |
                    Set this if the column is created by a teacher.  The gradebook only

                    supports one teacher_notes column.
                  type: boolean
                column[read_only]:
                  required: false
                  displayName: column[read_only]
                  description: Set this to prevent the column from being editable in the gradebook ui
                  type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          put:
            displayName: update_custom_gradebook_column
            description: Update a custom gradebook column
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: delete_custom_gradebook_column
            description: Delete a custom gradebook column
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /data:
            get:
              displayName: list_entries_for_column
              description: List entries for a column
              queryParameters:
                include_hidden:
                  required: false
                  displayName: include_hidden
                  description: |
                    If true, hidden columns will be included in the

                    result. If false or absent, only visible columns

                    will be returned.
                  type: boolean
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            /{user_id}:
              uriParameters:
                user_id:
                  required: true
                  displayName: user_id
                  description: ID
                  type: string
              put:
                displayName: update_column_data
                description: Update column data
                body:
                  multipart/form-data:
                    type: object
                    properties:
                      column_data[content]:
                        required: true
                        displayName: column_data[content]
                        description: Column content.  Setting this to blank will delete the datum object.
                        type: string
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
        /reorder:
          post:
            displayName: reorder_custom_columns
            description: Reorder custom columns
            body:
              multipart/form-data:
                type: object
                properties:
                  order:
                    required: true
                    displayName: order
                    description: no description
                    type: array
                    items:
                      type: integer
                      format: int32
            responses:
              200:
                description: Success
      /custom_gradebook_column_data:
        put:
          displayName: bulk_update_column_data
          description: Bulk update column data
          body:
            multipart/form-data:
              type: object
              properties:
                column_data:
                  required: true
                  displayName: column_data
                  description: Column content. Setting this to an empty string will delete the data object.
                  type: array
                  items:
                    type: object
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /discussion_topics:
        get:
          displayName: list_discussion_topics_courses
          description: List discussion topics
          queryParameters:
            include:
              required: false
              displayName: include
              description: |
                If "all_dates" is passed, all dates associated with graded discussions'

                assignments will be included.

                if "sections" is passed, includes the course sections that are associated

                with the topic, if the topic is specific to certain sections of the course.

                If "sections_user_count" is passed, then:
                  (a) If sections were asked for *and* the topic is specific to certain
                      course sections, includes the number of users in each
                      section. (as part of the section json asked for above)
                  (b) Else, includes at the root level the total number of users in the
                      topic's context (group or course) that the topic applies to.
                If "overrides" is passed, the overrides for the assignment will be included
              type: string
              enum:
              - all_dates
              - sections
              - sections_user_count
              - overrides
            order_by:
              required: false
              displayName: order_by
              description: Determines the order of the discussion topic list. Defaults to "position".
              type: string
              enum:
              - position
              - recent_activity
              - title
            scope:
              required: false
              displayName: scope
              description: |
                Only return discussion topics in the given state(s). Defaults to including

                all topics. Filtering is done after pagination, so pages

                may be smaller than requested if topics are filtered.

                Can pass multiple states as comma separated string.
              type: string
              enum:
              - locked
              - unlocked
              - pinned
              - unpinned
            only_announcements:
              required: false
              displayName: only_announcements
              description: Return announcements instead of discussion topics. Defaults to false
              type: boolean
            filter_by:
              required: false
              displayName: filter_by
              description: The state of the discussion topic to return. Currently only supports unread state.
              type: string
              enum:
              - all
              - unread
            search_term:
              required: false
              displayName: search_term
              description: The partial title of the discussion topics to match and return.
              type: string
            exclude_context_module_locked_topics:
              required: false
              displayName: exclude_context_module_locked_topics
              description: |
                For students, exclude topics that are locked by module progression.

                Defaults to false.
              type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_new_discussion_topic_courses
          description: Create a new discussion topic
          body:
            multipart/form-data:
              type: object
              properties:
                title:
                  required: false
                  displayName: title
                  description: no description
                  type: string
                message:
                  required: false
                  displayName: message
                  description: no description
                  type: string
                discussion_type:
                  required: false
                  displayName: discussion_type
                  description: The type of discussion. Defaults to side_comment if not value is given. Accepted values are 'side_comment', for discussions that only allow one level of nested comments, and 'threaded' for fully threaded discussions.
                  type: string
                  enum:
                  - side_comment
                  - threaded
                published:
                  required: false
                  displayName: published
                  description: |
                    Whether this topic is published (true) or draft state (false). Only

                    teachers and TAs have the ability to create draft state topics.
                  type: boolean
                delayed_post_at:
                  required: false
                  displayName: delayed_post_at
                  description: If a timestamp is given, the topic will not be published until that time.
                  type: object
                allow_rating:
                  required: false
                  displayName: allow_rating
                  description: Whether or not users can rate entries in this topic.
                  type: boolean
                lock_at:
                  required: false
                  displayName: lock_at
                  description: |
                    If a timestamp is given, the topic will be scheduled to lock at the

                    provided timestamp. If the timestamp is in the past, the topic will be

                    locked.
                  type: object
                podcast_enabled:
                  required: false
                  displayName: podcast_enabled
                  description: If true, the topic will have an associated podcast feed.
                  type: boolean
                podcast_has_student_posts:
                  required: false
                  displayName: podcast_has_student_posts
                  description: |
                    If true, the podcast will include posts from students as well. Implies

                    podcast_enabled.
                  type: boolean
                require_initial_post:
                  required: false
                  displayName: require_initial_post
                  description: |
                    If true then a user may not respond to other replies until that user has

                    made an initial reply. Defaults to false.
                  type: boolean
                assignment:
                  required: false
                  displayName: assignment
                  description: |
                    To create an assignment discussion, pass the assignment parameters as a

                    sub-object. See the {api:AssignmentsApiController#create Create an Assignment API}

                    for the available parameters. The name parameter will be ignored, as it's

                    taken from the discussion title. If you want to make a discussion that was

                    an assignment NOT an assignment, pass set_assignment = false as part of

                    the assignment object
                  type: object
                is_announcement:
                  required: false
                  displayName: is_announcement
                  description: |
                    If true, this topic is an announcement. It will appear in the

                    announcement's section rather than the discussions section. This requires

                    announcment-posting permissions.
                  type: boolean
                pinned:
                  required: false
                  displayName: pinned
                  description: If true, this topic will be listed in the "Pinned Discussion" section
                  type: boolean
                position_after:
                  required: false
                  displayName: position_after
                  description: |
                    By default, discussions are sorted chronologically by creation date, you

                    can pass the id of another topic to have this one show up after the other

                    when they are listed.
                  type: string
                group_category_id:
                  required: false
                  displayName: group_category_id
                  description: |
                    If present, the topic will become a group discussion assigned

                    to the group.
                  type: integer
                  format: int64
                only_graders_can_rate:
                  required: false
                  displayName: only_graders_can_rate
                  description: If true, only graders will be allowed to rate entries.
                  type: boolean
                sort_by_rating:
                  required: false
                  displayName: sort_by_rating
                  description: If true, entries will be sorted by rating.
                  type: boolean
                attachment:
                  required: false
                  displayName: attachment
                  description: |
                    A multipart/form-data form-field-style attachment.

                    Attachments larger than 1 kilobyte are subject to quota restrictions.
                  type: file
                specific_sections:
                  required: false
                  displayName: specific_sections
                  description: |
                    A comma-separated list of sections ids to which the discussion topic

                    should be made specific too.  If it is not desired to make the discussion

                    topic specific to sections, then this parameter may be omitted or set to

                    "all".  Can only be present only on announcements and only those that are

                    for a course (as opposed to a group).
                  type: string
          responses:
            200:
              description: Success
        /{topic_id}:
          uriParameters:
            topic_id:
              required: true
              displayName: topic_id
              description: ID
              type: string
          put:
            displayName: update_topic_courses
            description: Update a topic
            body:
              multipart/form-data:
                type: object
                properties:
                  title:
                    required: false
                    displayName: title
                    description: no description
                    type: string
                  message:
                    required: false
                    displayName: message
                    description: no description
                    type: string
                  discussion_type:
                    required: false
                    displayName: discussion_type
                    description: The type of discussion. Defaults to side_comment if not value is given. Accepted values are 'side_comment', for discussions that only allow one level of nested comments, and 'threaded' for fully threaded discussions.
                    type: string
                    enum:
                    - side_comment
                    - threaded
                  published:
                    required: false
                    displayName: published
                    description: |
                      Whether this topic is published (true) or draft state (false). Only

                      teachers and TAs have the ability to create draft state topics.
                    type: boolean
                  delayed_post_at:
                    required: false
                    displayName: delayed_post_at
                    description: If a timestamp is given, the topic will not be published until that time.
                    type: object
                  lock_at:
                    required: false
                    displayName: lock_at
                    description: |
                      If a timestamp is given, the topic will be scheduled to lock at the

                      provided timestamp. If the timestamp is in the past, the topic will be

                      locked.
                    type: object
                  podcast_enabled:
                    required: false
                    displayName: podcast_enabled
                    description: If true, the topic will have an associated podcast feed.
                    type: boolean
                  podcast_has_student_posts:
                    required: false
                    displayName: podcast_has_student_posts
                    description: |
                      If true, the podcast will include posts from students as well. Implies

                      podcast_enabled.
                    type: boolean
                  require_initial_post:
                    required: false
                    displayName: require_initial_post
                    description: |
                      If true then a user may not respond to other replies until that user has

                      made an initial reply. Defaults to false.
                    type: boolean
                  assignment:
                    required: false
                    displayName: assignment
                    description: |
                      To create an assignment discussion, pass the assignment parameters as a

                      sub-object. See the {api:AssignmentsApiController#create Create an Assignment API}

                      for the available parameters. The name parameter will be ignored, as it's

                      taken from the discussion title. If you want to make a discussion that was

                      an assignment NOT an assignment, pass set_assignment = false as part of

                      the assignment object
                    type: object
                  is_announcement:
                    required: false
                    displayName: is_announcement
                    description: |
                      If true, this topic is an announcement. It will appear in the

                      announcement's section rather than the discussions section. This requires

                      announcment-posting permissions.
                    type: boolean
                  pinned:
                    required: false
                    displayName: pinned
                    description: If true, this topic will be listed in the "Pinned Discussion" section
                    type: boolean
                  position_after:
                    required: false
                    displayName: position_after
                    description: |
                      By default, discussions are sorted chronologically by creation date, you

                      can pass the id of another topic to have this one show up after the other

                      when they are listed.
                    type: string
                  group_category_id:
                    required: false
                    displayName: group_category_id
                    description: |
                      If present, the topic will become a group discussion assigned

                      to the group.
                    type: integer
                    format: int64
                  allow_rating:
                    required: false
                    displayName: allow_rating
                    description: If true, users will be allowed to rate entries.
                    type: boolean
                  only_graders_can_rate:
                    required: false
                    displayName: only_graders_can_rate
                    description: If true, only graders will be allowed to rate entries.
                    type: boolean
                  sort_by_rating:
                    required: false
                    displayName: sort_by_rating
                    description: If true, entries will be sorted by rating.
                    type: boolean
                  specific_sections:
                    required: false
                    displayName: specific_sections
                    description: |
                      A comma-separated list of sections ids to which the discussion topic

                      should be made specific too.  If it is not desired to make the discussion

                      topic specific to sections, then this parameter may be omitted or set to

                      "all".  Can only be present only on announcements and only those that are

                      for a course (as opposed to a group).
                    type: string
            responses:
              200:
                description: Success
          delete:
            displayName: delete_topic_courses
            description: Delete a topic
            responses:
              200:
                description: Success
          get:
            displayName: get_single_topic_courses
            description: Get a single topic
            queryParameters:
              include:
                required: false
                displayName: include
                description: |
                  If "all_dates" is passed, all dates associated with graded discussions'

                  assignments will be included.

                  if "sections" is passed, includes the course sections that are associated

                  with the topic, if the topic is specific to certain sections of the course.

                  If "sections_user_count" is passed, then:
                    (a) If sections were asked for *and* the topic is specific to certain
                        course sections, includes the number of users in each
                        section. (as part of the section json asked for above)
                    (b) Else, includes at the root level the total number of users in the
                        topic's context (group or course) that the topic applies to.
                  If "overrides" is passed, the overrides for the assignment will be included
                type: string
                enum:
                - all_dates
                - sections
                - sections_user_count
                - overrides
            responses:
              200:
                description: Success
          /view:
            get:
              displayName: get_full_topic_courses
              description: Get the full topic
              responses:
                200:
                  description: Success
          /entries:
            post:
              displayName: post_entry_courses
              description: Post an entry
              body:
                multipart/form-data:
                  type: object
                  properties:
                    message:
                      required: false
                      displayName: message
                      description: The body of the entry.
                      type: string
                    attachment:
                      required: false
                      displayName: attachment
                      description: |
                        a multipart/form-data form-field-style

                        attachment. Attachments larger than 1 kilobyte are subject to quota

                        restrictions.
                      type: string
              responses:
                200:
                  description: Success
            get:
              displayName: list_topic_entries_courses
              description: List topic entries
              responses:
                200:
                  description: Success
            /{id}:
              uriParameters:
                id:
                  required: true
                  displayName: id
                  description: ID
                  type: string
              put:
                displayName: update_entry_courses
                description: Update an entry
                body:
                  multipart/form-data:
                    type: object
                    properties:
                      message:
                        required: false
                        displayName: message
                        description: The updated body of the entry.
                        type: string
                responses:
                  200:
                    description: Success
              delete:
                displayName: delete_entry_courses
                description: Delete an entry
                responses:
                  200:
                    description: Success
            /{entry_id}:
              uriParameters:
                entry_id:
                  required: true
                  displayName: entry_id
                  description: ID
                  type: string
              /replies:
                post:
                  displayName: post_reply_courses
                  description: Post a reply
                  body:
                    multipart/form-data:
                      type: object
                      properties:
                        message:
                          required: false
                          displayName: message
                          description: The body of the entry.
                          type: string
                        attachment:
                          required: false
                          displayName: attachment
                          description: |
                            a multipart/form-data form-field-style

                            attachment. Attachments larger than 1 kilobyte are subject to quota

                            restrictions.
                          type: string
                  responses:
                    200:
                      description: Success
                get:
                  displayName: list_entry_replies_courses
                  description: List entry replies
                  responses:
                    200:
                      description: Success
              /read:
                put:
                  displayName: mark_entry_as_read_courses
                  description: Mark entry as read
                  body:
                    multipart/form-data:
                      type: object
                      properties:
                        forced_read_state:
                          required: false
                          displayName: forced_read_state
                          description: |
                            A boolean value to set the entry's forced_read_state. No change is made if

                            this argument is not specified.
                          type: boolean
                  responses:
                    200:
                      description: Success
                delete:
                  displayName: mark_entry_as_unread_courses
                  description: Mark entry as unread
                  queryParameters:
                    forced_read_state:
                      required: false
                      displayName: forced_read_state
                      description: |
                        A boolean value to set the entry's forced_read_state. No change is made if

                        this argument is not specified.
                      type: boolean
                  responses:
                    200:
                      description: Success
              /rating:
                post:
                  displayName: rate_entry_courses
                  description: Rate entry
                  body:
                    multipart/form-data:
                      type: object
                      properties:
                        rating:
                          required: false
                          displayName: rating
                          description: A rating to set on this entry. Only 0 and 1 are accepted.
                          type: integer
                          format: int64
                  responses:
                    200:
                      description: Success
          /entry_list:
            get:
              displayName: list_entries_courses
              description: List entries
              queryParameters:
                ids:
                  required: false
                  displayName: ids
                  description: |
                    A list of entry ids to retrieve. Entries will be returned in id order,

                    smallest id first.
                  type: array
                  items:
                    type: string
              responses:
                200:
                  description: Success
          /read:
            put:
              displayName: mark_topic_as_read_courses
              description: Mark topic as read
              responses:
                200:
                  description: Success
            delete:
              displayName: mark_topic_as_unread_courses
              description: Mark topic as unread
              responses:
                200:
                  description: Success
          /read_all:
            put:
              displayName: mark_all_entries_as_read_courses
              description: Mark all entries as read
              body:
                multipart/form-data:
                  type: object
                  properties:
                    forced_read_state:
                      required: false
                      displayName: forced_read_state
                      description: |
                        A boolean value to set all of the entries' forced_read_state. No change

                        is made if this argument is not specified.
                      type: boolean
              responses:
                200:
                  description: Success
            delete:
              displayName: mark_all_entries_as_unread_courses
              description: Mark all entries as unread
              queryParameters:
                forced_read_state:
                  required: false
                  displayName: forced_read_state
                  description: |
                    A boolean value to set all of the entries' forced_read_state. No change is

                    made if this argument is not specified.
                  type: boolean
              responses:
                200:
                  description: Success
          /subscribed:
            put:
              displayName: subscribe_to_topic_courses
              description: Subscribe to a topic
              responses:
                200:
                  description: Success
            delete:
              displayName: unsubscribe_from_topic_courses
              description: Unsubscribe from a topic
              responses:
                200:
                  description: Success
        /reorder:
          post:
            displayName: reorder_pinned_topics_courses
            description: Reorder pinned topics
            body:
              multipart/form-data:
                type: object
                properties:
                  order:
                    required: true
                    displayName: order
                    description: |
                      The ids of the pinned discussion topics in the desired order.

                      (For example, "order=104,102,103".)
                    type: array
                    items:
                      type: integer
                      format: int32
            responses:
              200:
                description: Success
      /enrollments:
        get:
          displayName: list_enrollments_courses
          description: List enrollments
          queryParameters:
            type:
              required: false
              displayName: type
              description: |
                A list of enrollment types to return. Accepted values are

                'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment',

                'DesignerEnrollment', and 'ObserverEnrollment.' If omitted, all enrollment

                types are returned. This argument is ignored if `role` is given.
              type: array
              items:
                type: string
            role:
              required: false
              displayName: role
              description: |
                A list of enrollment roles to return. Accepted values include course-level

                roles created by the {api:RoleOverridesController#add_role Add Role API}

                as well as the base enrollment types accepted by the `type` argument above.
              type: array
              items:
                type: string
            state:
              required: false
              displayName: state
              description: |
                Filter by enrollment state. If omitted, 'active' and 'invited' enrollments

                are returned. When querying a user's enrollments (either via user_id

                argument or via user enrollments endpoint), the following additional

                synthetic states are supported: "current_and_invited"|"current_and_future"|"current_and_concluded"
              type: string
              enum:
              - active
              - invited
              - creation_pending
              - deleted
              - rejected
              - completed
              - inactive
            include:
              required: false
              displayName: include
              description: |
                Array of additional information to include on the enrollment or user records.

                "avatar_url" and "group_ids" will be returned on the user record.
              type: string
              enum:
              - avatar_url
              - group_ids
              - locked
              - observed_users
              - can_be_removed
            user_id:
              required: false
              displayName: user_id
              description: |
                Filter by user_id (only valid for course or section enrollment

                queries). If set to the current user's id, this is a way to

                determine if the user has any enrollments in the course or section,

                independent of whether the user has permission to view other people

                on the roster.
              type: string
            grading_period_id:
              required: false
              displayName: grading_period_id
              description: |
                Return grades for the given grading_period.  If this parameter is not

                specified, the returned grades will be for the whole course.
              type: integer
              format: int64
            enrollment_term_id:
              required: false
              displayName: enrollment_term_id
              description: |
                Returns only enrollments for the specified enrollment term. This parameter

                only applies to the user enrollments path. May pass the ID from the

                enrollment terms api or the SIS id prepended with 'sis_term_id:'.
              type: integer
              format: int64
            sis_account_id:
              required: false
              displayName: sis_account_id
              description: |
                Returns only enrollments for the specified SIS account ID(s). Does not

                look into sub_accounts. May pass in array or string.
              type: array
              items:
                type: string
            sis_course_id:
              required: false
              displayName: sis_course_id
              description: |
                Returns only enrollments matching the specified SIS course ID(s).

                May pass in array or string.
              type: array
              items:
                type: string
            sis_section_id:
              required: false
              displayName: sis_section_id
              description: |
                Returns only section enrollments matching the specified SIS section ID(s).

                May pass in array or string.
              type: array
              items:
                type: string
            sis_user_id:
              required: false
              displayName: sis_user_id
              description: |
                Returns only enrollments for the specified SIS user ID(s). May pass in

                array or string.
              type: array
              items:
                type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: enroll_user_courses
          description: Enroll a user
          body:
            multipart/form-data:
              type: object
              properties:
                enrollment[user_id]:
                  required: true
                  displayName: enrollment[user_id]
                  description: The ID of the user to be enrolled in the course.
                  type: string
                enrollment[type]:
                  required: true
                  displayName: enrollment[type]
                  description: |
                    Enroll the user as a student, teacher, TA, observer, or designer. If no

                    value is given, the type will be inferred by enrollment[role] if supplied,

                    otherwise 'StudentEnrollment' will be used.
                  type: string
                  enum:
                  - StudentEnrollment
                  - TeacherEnrollment
                  - TaEnrollment
                  - ObserverEnrollment
                  - DesignerEnrollment
                enrollment[role]:
                  required: false
                  displayName: enrollment[role]
                  description: Assigns a custom course-level role to the user.
                  type: object
                enrollment[role_id]:
                  required: false
                  displayName: enrollment[role_id]
                  description: Assigns a custom course-level role to the user.
                  type: integer
                  format: int64
                enrollment[enrollment_state]:
                  required: false
                  displayName: enrollment[enrollment_state]
                  description: |
                    If set to 'active,' student will be immediately enrolled in the course.

                    Otherwise they will be required to accept a course invitation. Default is

                    'invited.'.


                    If set to 'inactive', student will be listed in the course roster for

                    teachers, but will not be able to participate in the course until

                    their enrollment is activated.
                  type: string
                  enum:
                  - active
                  - invited
                  - inactive
                enrollment[course_section_id]:
                  required: false
                  displayName: enrollment[course_section_id]
                  description: |
                    The ID of the course section to enroll the student in. If the

                    section-specific URL is used, this argument is redundant and will be

                    ignored.
                  type: integer
                  format: int64
                enrollment[limit_privileges_to_course_section]:
                  required: false
                  displayName: enrollment[limit_privileges_to_course_section]
                  description: |
                    If set, the enrollment will only allow the user to see and interact with

                    users enrolled in the section given by course_section_id.

                    * For teachers and TAs, this includes grading privileges.

                    * Section-limited students will not see any users (including teachers
                      and TAs) not enrolled in their sections.
                    * Users may have other enrollments that grant privileges to
                      multiple sections in the same course.
                  type: boolean
                enrollment[notify]:
                  required: false
                  displayName: enrollment[notify]
                  description: |
                    If true, a notification will be sent to the enrolled user.

                    Notifications are not sent by default.
                  type: boolean
                enrollment[self_enrollment_code]:
                  required: false
                  displayName: enrollment[self_enrollment_code]
                  description: |
                    If the current user is not allowed to manage enrollments in this

                    course, but the course allows self-enrollment, the user can self-

                    enroll as a student in the default section by passing in a valid

                    code. When self-enrolling, the user_id must be 'self'. The

                    enrollment_state will be set to 'active' and all other arguments

                    will be ignored.
                  type: string
                enrollment[self_enrolled]:
                  required: false
                  displayName: enrollment[self_enrolled]
                  description: |
                    If true, marks the enrollment as a self-enrollment, which gives

                    students the ability to drop the course if desired. Defaults to false.
                  type: boolean
                enrollment[associated_user_id]:
                  required: false
                  displayName: enrollment[associated_user_id]
                  description: |
                    For an observer enrollment, the ID of a student to observe. The

                    caller must have +manage_students+ permission in the course.

                    This is a one-off operation; to automatically observe all a

                    student's enrollments (for example, as a parent), please use

                    the {api:UserObserveesController#create User Observees API}.
                  type: integer
                  format: int64
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          delete:
            displayName: conclude_deactivate_or_delete_enrollment
            description: Conclude, deactivate, or delete an enrollment
            queryParameters:
              task:
                required: false
                displayName: task
                description: |
                  The action to take on the enrollment.

                  When inactive, a user will still appear in the course roster to admins, but be unable to participate.

                  ("inactivate" and "deactivate" are equivalent tasks)
                type: string
                enum:
                - conclude
                - delete
                - inactivate
                - deactivate
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /accept:
            post:
              displayName: accept_course_invitation
              description: Accept Course Invitation
              responses:
                200:
                  description: Success
          /reject:
            post:
              displayName: reject_course_invitation
              description: Reject Course Invitation
              responses:
                200:
                  description: Success
          /reactivate:
            put:
              displayName: re_activate_enrollment
              description: Re-activate an enrollment
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
      /external_tools:
        get:
          displayName: list_external_tools_courses
          description: List external tools
          queryParameters:
            search_term:
              required: false
              displayName: search_term
              description: The partial name of the tools to match and return.
              type: string
            selectable:
              required: false
              displayName: selectable
              description: If true, then only tools that are meant to be selectable are returned
              type: boolean
            include_parents:
              required: false
              displayName: include_parents
              description: If true, then include tools installed in all accounts above the current context
              type: boolean
          responses:
            200:
              description: Success
        post:
          displayName: create_external_tool_courses
          description: Create an external tool
          body:
            multipart/form-data:
              type: object
              properties:
                name:
                  required: true
                  displayName: name
                  description: The name of the tool
                  type: string
                privacy_level:
                  required: true
                  displayName: privacy_level
                  description: What information to send to the external tool.
                  type: string
                consumer_key:
                  required: true
                  displayName: consumer_key
                  description: The consumer key for the external tool
                  type: string
                shared_secret:
                  required: true
                  displayName: shared_secret
                  description: The shared secret with the external tool
                  type: string
                description:
                  required: false
                  displayName: description
                  description: A description of the tool
                  type: string
                url:
                  required: false
                  displayName: url
                  description: |
                    The url to match links against. Either "url" or "domain" should be set,

                    not both.
                  type: string
                domain:
                  required: false
                  displayName: domain
                  description: |
                    The domain to match links against. Either "url" or "domain" should be

                    set, not both.
                  type: string
                icon_url:
                  required: false
                  displayName: icon_url
                  description: The url of the icon to show for this tool
                  type: string
                text:
                  required: false
                  displayName: text
                  description: The default text to show for this tool
                  type: string
                custom_fields[field_name]:
                  required: false
                  displayName: custom_fields[field_name]
                  description: |
                    Custom fields that will be sent to the tool consumer; can be used

                    multiple times
                  type: string
                account_navigation[url]:
                  required: false
                  displayName: account_navigation[url]
                  description: The url of the external tool for account navigation
                  type: string
                account_navigation[enabled]:
                  required: false
                  displayName: account_navigation[enabled]
                  description: Set this to enable this feature
                  type: boolean
                account_navigation[text]:
                  required: false
                  displayName: account_navigation[text]
                  description: The text that will show on the left-tab in the account navigation
                  type: string
                account_navigation[selection_width]:
                  required: false
                  displayName: account_navigation[selection_width]
                  description: The width of the dialog the tool is launched in
                  type: string
                account_navigation[selection_height]:
                  required: false
                  displayName: account_navigation[selection_height]
                  description: The height of the dialog the tool is launched in
                  type: string
                account_navigation[display_type]:
                  required: false
                  displayName: account_navigation[display_type]
                  description: |
                    The layout type to use when launching the tool. Must be

                    "full_width", "full_width_in_context", "borderless", or "default"
                  type: string
                user_navigation[url]:
                  required: false
                  displayName: user_navigation[url]
                  description: The url of the external tool for user navigation
                  type: string
                user_navigation[enabled]:
                  required: false
                  displayName: user_navigation[enabled]
                  description: Set this to enable this feature
                  type: boolean
                user_navigation[text]:
                  required: false
                  displayName: user_navigation[text]
                  description: The text that will show on the left-tab in the user navigation
                  type: string
                user_navigation[visibility]:
                  required: false
                  displayName: user_navigation[visibility]
                  description: |
                    Who will see the navigation tab. "admins" for admins, "public" or

                    "members" for everyone
                  type: string
                course_home_sub_navigation[url]:
                  required: false
                  displayName: course_home_sub_navigation[url]
                  description: The url of the external tool for right-side course home navigation menu
                  type: string
                course_home_sub_navigation[enabled]:
                  required: false
                  displayName: course_home_sub_navigation[enabled]
                  description: Set this to enable this feature
                  type: boolean
                course_home_sub_navigation[text]:
                  required: false
                  displayName: course_home_sub_navigation[text]
                  description: The text that will show on the right-side course home navigation menu
                  type: string
                course_home_sub_navigation[icon_url]:
                  required: false
                  displayName: course_home_sub_navigation[icon_url]
                  description: The url of the icon to show in the right-side course home navigation menu
                  type: string
                course_navigation[enabled]:
                  required: false
                  displayName: course_navigation[enabled]
                  description: Set this to enable this feature
                  type: boolean
                course_navigation[text]:
                  required: false
                  displayName: course_navigation[text]
                  description: The text that will show on the left-tab in the course navigation
                  type: string
                course_navigation[visibility]:
                  required: false
                  displayName: course_navigation[visibility]
                  description: |
                    Who will see the navigation tab. "admins" for course admins, "members" for

                    students, null for everyone
                  type: string
                  enum:
                  - admins
                  - members
                course_navigation[windowTarget]:
                  required: false
                  displayName: course_navigation[windowTarget]
                  description: |
                    Determines how the navigation tab will be opened.

                    "_blank"	Launches the external tool in a new window or tab.

                    "_self"	(Default) Launches the external tool in an iframe inside of Canvas.
                  type: string
                  enum:
                  - _blank
                  - _self
                course_navigation[default]:
                  required: false
                  displayName: course_navigation[default]
                  description: |
                    Whether the navigation option will show in the course by default or

                    whether the teacher will have to explicitly enable it
                  type: boolean
                course_navigation[display_type]:
                  required: false
                  displayName: course_navigation[display_type]
                  description: |
                    The layout type to use when launching the tool. Must be

                    "full_width", "full_width_in_context", "borderless", or "default"
                  type: string
                editor_button[url]:
                  required: false
                  displayName: editor_button[url]
                  description: The url of the external tool
                  type: string
                editor_button[enabled]:
                  required: false
                  displayName: editor_button[enabled]
                  description: Set this to enable this feature
                  type: boolean
                editor_button[icon_url]:
                  required: false
                  displayName: editor_button[icon_url]
                  description: The url of the icon to show in the WYSIWYG editor
                  type: string
                editor_button[selection_width]:
                  required: false
                  displayName: editor_button[selection_width]
                  description: The width of the dialog the tool is launched in
                  type: string
                editor_button[selection_height]:
                  required: false
                  displayName: editor_button[selection_height]
                  description: The height of the dialog the tool is launched in
                  type: string
                editor_button[message_type]:
                  required: false
                  displayName: editor_button[message_type]
                  description: |
                    Set this to ContentItemSelectionRequest to tell the tool to use

                    content-item; otherwise, omit
                  type: string
                homework_submission[url]:
                  required: false
                  displayName: homework_submission[url]
                  description: The url of the external tool
                  type: string
                homework_submission[enabled]:
                  required: false
                  displayName: homework_submission[enabled]
                  description: Set this to enable this feature
                  type: boolean
                homework_submission[text]:
                  required: false
                  displayName: homework_submission[text]
                  description: The text that will show on the homework submission tab
                  type: string
                homework_submission[message_type]:
                  required: false
                  displayName: homework_submission[message_type]
                  description: |
                    Set this to ContentItemSelectionRequest to tell the tool to use

                    content-item; otherwise, omit
                  type: string
                link_selection[url]:
                  required: false
                  displayName: link_selection[url]
                  description: The url of the external tool
                  type: string
                link_selection[enabled]:
                  required: false
                  displayName: link_selection[enabled]
                  description: Set this to enable this feature
                  type: boolean
                link_selection[text]:
                  required: false
                  displayName: link_selection[text]
                  description: The text that will show for the link selection text
                  type: string
                link_selection[message_type]:
                  required: false
                  displayName: link_selection[message_type]
                  description: |
                    Set this to ContentItemSelectionRequest to tell the tool to use

                    content-item; otherwise, omit
                  type: string
                migration_selection[url]:
                  required: false
                  displayName: migration_selection[url]
                  description: The url of the external tool
                  type: string
                migration_selection[enabled]:
                  required: false
                  displayName: migration_selection[enabled]
                  description: Set this to enable this feature
                  type: boolean
                migration_selection[message_type]:
                  required: false
                  displayName: migration_selection[message_type]
                  description: |
                    Set this to ContentItemSelectionRequest to tell the tool to use

                    content-item; otherwise, omit
                  type: string
                tool_configuration[url]:
                  required: false
                  displayName: tool_configuration[url]
                  description: The url of the external tool
                  type: string
                tool_configuration[enabled]:
                  required: false
                  displayName: tool_configuration[enabled]
                  description: Set this to enable this feature
                  type: boolean
                tool_configuration[message_type]:
                  required: false
                  displayName: tool_configuration[message_type]
                  description: |
                    Set this to ContentItemSelectionRequest to tell the tool to use

                    content-item; otherwise, omit
                  type: string
                tool_configuration[prefer_sis_email]:
                  required: false
                  displayName: tool_configuration[prefer_sis_email]
                  description: |
                    Set this to default the lis_person_contact_email_primary to prefer

                    provisioned sis_email; otherwise, omit
                  type: boolean
                resource_selection[url]:
                  required: false
                  displayName: resource_selection[url]
                  description: The url of the external tool
                  type: string
                resource_selection[enabled]:
                  required: false
                  displayName: resource_selection[enabled]
                  description: Set this to enable this feature
                  type: boolean
                resource_selection[icon_url]:
                  required: false
                  displayName: resource_selection[icon_url]
                  description: The url of the icon to show in the module external tool list
                  type: string
                resource_selection[selection_width]:
                  required: false
                  displayName: resource_selection[selection_width]
                  description: The width of the dialog the tool is launched in
                  type: string
                resource_selection[selection_height]:
                  required: false
                  displayName: resource_selection[selection_height]
                  description: The height of the dialog the tool is launched in
                  type: string
                config_type:
                  required: false
                  displayName: config_type
                  description: |
                    Configuration can be passed in as CC xml instead of using query

                    parameters. If this value is "by_url" or "by_xml" then an xml

                    configuration will be expected in either the "config_xml" or "config_url"

                    parameter. Note that the name parameter overrides the tool name provided

                    in the xml
                  type: string
                config_xml:
                  required: false
                  displayName: config_xml
                  description: |
                    XML tool configuration, as specified in the CC xml specification. This is

                    required if "config_type" is set to "by_xml"
                  type: string
                config_url:
                  required: false
                  displayName: config_url
                  description: |
                    URL where the server can retrieve an XML tool configuration, as specified

                    in the CC xml specification. This is required if "config_type" is set to

                    "by_url"
                  type: string
                not_selectable:
                  required: false
                  displayName: not_selectable
                  description: |
                    Default: false, if set to true the tool won't show up in the external tool

                    selection UI in modules and assignments
                  type: boolean
                oauth_compliant:
                  required: false
                  displayName: oauth_compliant
                  description: |
                    Default: false, if set to true LTI query params will not be copied to the

                    post body.
                  type: boolean
          responses:
            200:
              description: Success
        /sessionless_launch:
          get:
            displayName: get_sessionless_launch_url_for_external_tool_courses
            description: Get a sessionless launch url for an external tool.
            queryParameters:
              id:
                required: false
                displayName: id
                description: The external id of the tool to launch.
                type: string
              url:
                required: false
                displayName: url
                description: The LTI launch url for the external tool.
                type: string
              assignment_id:
                required: false
                displayName: assignment_id
                description: The assignment id for an assignment launch. Required if launch_type is set to "assessment".
                type: string
              module_item_id:
                required: false
                displayName: module_item_id
                description: The assignment id for a module item launch. Required if launch_type is set to "module_item".
                type: string
              launch_type:
                required: false
                displayName: launch_type
                description: |
                  The type of launch to perform on the external tool. Placement names (eg. "course_navigation")

                  can also be specified to use the custom launch url for that placement; if done, the tool id

                  must be provided.
                type: string
                enum:
                - assessment
                - module_item
            responses:
              200:
                description: Success
        /{external_tool_id}:
          uriParameters:
            external_tool_id:
              required: true
              displayName: external_tool_id
              description: ID
              type: string
          get:
            displayName: get_single_external_tool_courses
            description: Get a single external tool
            responses:
              200:
                description: Success
          put:
            displayName: edit_external_tool_courses
            description: Edit an external tool
            responses:
              200:
                description: Success
          delete:
            displayName: delete_external_tool_courses
            description: Delete an external tool
            responses:
              200:
                description: Success
      /features:
        get:
          displayName: list_features_courses
          description: List features
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /enabled:
          get:
            displayName: list_enabled_features_courses
            description: List enabled features
            responses:
              200:
                description: Success
        /flags/{feature}:
          uriParameters:
            feature:
              required: true
              displayName: feature
              description: ID
              type: string
          get:
            displayName: get_feature_flag_courses
            description: Get feature flag
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: set_feature_flag_courses
            description: Set feature flag
            body:
              multipart/form-data:
                type: object
                properties:
                  state:
                    required: false
                    displayName: state
                    description: |
                      "off":: The feature is not available for the course, user, or account and sub-accounts.

                      "allowed":: (valid only on accounts) The feature is off in the account, but may be enabled in
                                  sub-accounts and courses by setting a feature flag on the sub-account or course.
                      "on":: The feature is turned on unconditionally for the user, course, or account and sub-accounts.
                    type: string
                    enum:
                    - off
                    - allowed
                    - on
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: remove_feature_flag_courses
            description: Remove feature flag
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /folders:
        get:
          displayName: list_all_folders_courses
          description: List all folders
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_folder_courses
          description: Create folder
          body:
            multipart/form-data:
              type: object
              properties:
                name:
                  required: true
                  displayName: name
                  description: The name of the folder
                  type: string
                parent_folder_id:
                  required: false
                  displayName: parent_folder_id
                  description: The id of the folder to store the file in. If this and parent_folder_path are sent an error will be returned. If neither is given, a default folder will be used.
                  type: string
                parent_folder_path:
                  required: false
                  displayName: parent_folder_path
                  description: The path of the folder to store the new folder in. The path separator is the forward slash `/`, never a back slash. The parent folder will be created if it does not already exist. This parameter only applies to new folders in a context that has folders, such as a user, a course, or a group. If this and parent_folder_id are sent an error will be returned. If neither is given, a default folder will be used.
                  type: string
                lock_at:
                  required: false
                  displayName: lock_at
                  description: The datetime to lock the folder at
                  type: object
                unlock_at:
                  required: false
                  displayName: unlock_at
                  description: The datetime to unlock the folder at
                  type: object
                locked:
                  required: false
                  displayName: locked
                  description: Flag the folder as locked
                  type: boolean
                hidden:
                  required: false
                  displayName: hidden
                  description: Flag the folder as hidden
                  type: boolean
                position:
                  required: false
                  displayName: position
                  description: Set an explicit sort position for the folder
                  type: integer
                  format: int64
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /by_path:
          get:
            displayName: resolve_path_courses
            description: Resolve path
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /*full_path:
            get:
              displayName: resolve_path_courses_full_path
              description: Resolve path
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_folder_courses
            description: Get folder
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /usage_rights:
        put:
          displayName: set_usage_rights_courses
          description: Set usage rights
          body:
            multipart/form-data:
              type: object
              properties:
                file_ids:
                  required: true
                  displayName: file_ids
                  description: List of ids of files to set usage rights for.
                  type: array
                  items:
                    type: string
                usage_rights[use_justification]:
                  required: true
                  displayName: usage_rights[use_justification]
                  description: The intellectual property justification for using the files in Canvas
                  type: string
                  enum:
                  - own_copyright
                  - used_by_permission
                  - fair_use
                  - public_domain
                  - creative_commons
                folder_ids:
                  required: false
                  displayName: folder_ids
                  description: |
                    List of ids of folders to search for files to set usage rights for.

                    Note that new files uploaded to these folders do not automatically inherit these rights.
                  type: array
                  items:
                    type: string
                publish:
                  required: false
                  displayName: publish
                  description: Whether the file(s) or folder(s) should be published on save, provided that usage rights have been specified (set to `true` to publish on save).
                  type: boolean
                usage_rights[legal_copyright]:
                  required: false
                  displayName: usage_rights[legal_copyright]
                  description: The legal copyright line for the files
                  type: string
                usage_rights[license]:
                  required: false
                  displayName: usage_rights[license]
                  description: The license that applies to the files. See the {api:UsageRightsController#licenses List licenses endpoint} for the supported license types.
                  type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        delete:
          displayName: remove_usage_rights_courses
          description: Remove usage rights
          queryParameters:
            file_ids:
              required: true
              displayName: file_ids
              description: List of ids of files to remove associated usage rights from.
              type: array
              items:
                type: string
            folder_ids:
              required: false
              displayName: folder_ids
              description: List of ids of folders. Usage rights will be removed from all files in these folders.
              type: array
              items:
                type: string
          responses:
            200:
              description: Success
      /content_licenses:
        get:
          displayName: list_licenses_courses
          description: List licenses
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /grading_periods:
        get:
          displayName: list_grading_periods_courses
          description: List grading periods
          responses:
            200:
              description: Success
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_single_grading_period
            description: Get a single grading period
            responses:
              200:
                description: Success
          put:
            displayName: update_single_grading_period
            description: Update a single grading period
            body:
              multipart/form-data:
                type: object
                properties:
                  grading_periods[start_date]:
                    required: true
                    displayName: grading_periods[start_date]
                    description: The date the grading period starts.
                    type: array
                    items:
                      type: object
                  grading_periods[end_date]:
                    required: true
                    displayName: grading_periods[end_date]
                    description: no description
                    type: array
                    items:
                      type: object
                  grading_periods[weight]:
                    required: false
                    displayName: grading_periods[weight]
                    description: A weight value that contributes to the overall weight of a grading period set which is used to calculate how much assignments in this period contribute to the total grade
                    type: array
                    items:
                      type: number
                      format: double
            responses:
              200:
                description: Success
          delete:
            displayName: delete_grading_period_courses
            description: Delete a grading period
            responses:
              200:
                description: Success
      /grading_standards:
        post:
          displayName: create_new_grading_standard_courses
          description: Create a new grading standard
          body:
            multipart/form-data:
              type: object
              properties:
                title:
                  required: true
                  displayName: title
                  description: The title for the Grading Standard.
                  type: string
                grading_scheme_entry[name]:
                  required: true
                  displayName: grading_scheme_entry[name]
                  description: |
                    The name for an entry value within a GradingStandard that describes the range of the value

                    e.g. A-
                  type: array
                  items:
                    type: string
                grading_scheme_entry[value]:
                  required: true
                  displayName: grading_scheme_entry[value]
                  description: |
                    The value for the name of the entry within a GradingStandard.

                    The entry represents the lower bound of the range for the entry.

                    This range includes the value up to the next entry in the GradingStandard,

                    or 100 if there is no upper bound. The lowest value will have a lower bound range of 0.

                    e.g. 93
                  type: array
                  items:
                    type: integer
                    format: int32
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        get:
          displayName: list_grading_standards_available_in_context_courses
          description: List the grading standards available in a context.
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{grading_standard_id}:
          uriParameters:
            grading_standard_id:
              required: true
              displayName: grading_standard_id
              description: ID
              type: string
          get:
            displayName: get_single_grading_standard_in_context_courses
            description: Get a single grading standard in a context.
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /group_categories:
        get:
          displayName: list_group_categories_for_context_courses
          description: List group categories for a context
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_group_category_courses
          description: Create a Group Category
          body:
            multipart/form-data:
              type: object
              properties:
                name:
                  required: true
                  displayName: name
                  description: Name of the group category
                  type: string
                self_signup:
                  required: false
                  displayName: self_signup
                  description: |
                    Allow students to sign up for a group themselves (Course Only).

                    valid values are:

                    "enabled":: allows students to self sign up for any group in course

                    "restricted":: allows students to self sign up only for groups in the
                                   same section null disallows self sign up
                  type: string
                  enum:
                  - enabled
                  - restricted
                auto_leader:
                  required: false
                  displayName: auto_leader
                  description: |
                    Assigns group leaders automatically when generating and allocating students to groups

                    Valid values are:

                    "first":: the first student to be allocated to a group is the leader

                    "random":: a random student from all members is chosen as the leader
                  type: string
                  enum:
                  - first
                  - random
                group_limit:
                  required: false
                  displayName: group_limit
                  description: |
                    Limit the maximum number of users in each group (Course Only). Requires

                    self signup.
                  type: integer
                  format: int64
                sis_group_category_id:
                  required: false
                  displayName: sis_group_category_id
                  description: The unique SIS identifier.
                  type: string
                create_group_count:
                  required: false
                  displayName: create_group_count
                  description: Create this number of groups (Course Only).
                  type: integer
                  format: int64
                split_group_count:
                  required: false
                  displayName: split_group_count
                  description: |
                    (Deprecated)

                    Create this number of groups, and evenly distribute students

                    among them. not allowed with "enable_self_signup". because

                    the group assignment happens synchronously, it's recommended

                    that you instead use the assign_unassigned_members endpoint.

                    (Course Only)
                  type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /groups:
        get:
          displayName: list_groups_available_in_context_courses
          description: List the groups available in a context.
          queryParameters:
            only_own_groups:
              required: false
              displayName: only_own_groups
              description: Will only include groups that the user belongs to if this is set
              type: boolean
            include:
              required: false
              displayName: include
              description: |
                - "tabs": Include the list of tabs configured for each group.  See the
                  {api:TabsController#index List available tabs API} for more information.
              type: string
              enum:
              - tabs
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /live_assessments:
        post:
          displayName: create_or_find_live_assessment
          description: Create or find a live assessment
          responses:
            200:
              description: Success
        get:
          displayName: list_live_assessments
          description: List live assessments
          responses:
            200:
              description: Success
        /{assessment_id}/results:
          uriParameters:
            assessment_id:
              required: true
              displayName: assessment_id
              description: ID
              type: string
          post:
            displayName: create_live_assessment_results
            description: Create live assessment results
            responses:
              200:
                description: Success
          get:
            displayName: list_live_assessment_results
            description: List live assessment results
            queryParameters:
              user_id:
                required: false
                displayName: user_id
                description: If set, restrict results to those for this user
                type: integer
                format: int64
            responses:
              200:
                description: Success
      /modules:
        get:
          displayName: list_modules
          description: List modules
          queryParameters:
            include:
              required: false
              displayName: include
              description: |
                - "items": Return module items inline if possible.
                  This parameter suggests that Canvas return module items directly
                  in the Module object JSON, to avoid having to make separate API
                  requests for each module when enumerating modules and items. Canvas
                  is free to omit 'items' for any particular module if it deems them
                  too numerous to return inline. Callers must be prepared to use the
                  {api:ContextModuleItemsApiController#index List Module Items API}
                  if items are not returned.
                - "content_details": Requires include['items']. Returns additional
                  details with module items specific to their associated content items.
                  Includes standard lock information for each item.
              type: string
              enum:
              - items
              - content_details
            search_term:
              required: false
              displayName: search_term
              description: |
                The partial name of the modules (and module items, if include['items'] is

                specified) to match and return.
              type: string
            student_id:
              required: false
              displayName: student_id
              description: Returns module completion information for the student with this id.
              type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_module
          description: Create a module
          body:
            multipart/form-data:
              type: object
              properties:
                module[name]:
                  required: true
                  displayName: module[name]
                  description: The name of the module
                  type: string
                module[unlock_at]:
                  required: false
                  displayName: module[unlock_at]
                  description: The date the module will unlock
                  type: object
                module[position]:
                  required: false
                  displayName: module[position]
                  description: The position of this module in the course (1-based)
                  type: integer
                  format: int64
                module[require_sequential_progress]:
                  required: false
                  displayName: module[require_sequential_progress]
                  description: Whether module items must be unlocked in order
                  type: boolean
                module[prerequisite_module_ids]:
                  required: false
                  displayName: module[prerequisite_module_ids]
                  description: |
                    IDs of Modules that must be completed before this one is unlocked.

                    Prerequisite modules must precede this module (i.e. have a lower position

                    value), otherwise they will be ignored
                  type: array
                  items:
                    type: string
                module[publish_final_grade]:
                  required: false
                  displayName: module[publish_final_grade]
                  description: |
                    Whether to publish the student's final grade for the course upon

                    completion of this module.
                  type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: show_module
            description: Show module
            queryParameters:
              include:
                required: false
                displayName: include
                description: |
                  - "items": Return module items inline if possible.
                    This parameter suggests that Canvas return module items directly
                    in the Module object JSON, to avoid having to make separate API
                    requests for each module when enumerating modules and items. Canvas
                    is free to omit 'items' for any particular module if it deems them
                    too numerous to return inline. Callers must be prepared to use the
                    {api:ContextModuleItemsApiController#index List Module Items API}
                    if items are not returned.
                  - "content_details": Requires include['items']. Returns additional
                    details with module items specific to their associated content items.
                    Includes standard lock information for each item.
                type: string
                enum:
                - items
                - content_details
              student_id:
                required: false
                displayName: student_id
                description: Returns module completion information for the student with this id.
                type: string
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: update_module
            description: Update a module
            body:
              multipart/form-data:
                type: object
                properties:
                  module[name]:
                    required: false
                    displayName: module[name]
                    description: The name of the module
                    type: string
                  module[unlock_at]:
                    required: false
                    displayName: module[unlock_at]
                    description: The date the module will unlock
                    type: object
                  module[position]:
                    required: false
                    displayName: module[position]
                    description: The position of the module in the course (1-based)
                    type: integer
                    format: int64
                  module[require_sequential_progress]:
                    required: false
                    displayName: module[require_sequential_progress]
                    description: Whether module items must be unlocked in order
                    type: boolean
                  module[prerequisite_module_ids]:
                    required: false
                    displayName: module[prerequisite_module_ids]
                    description: |
                      IDs of Modules that must be completed before this one is unlocked

                      Prerequisite modules must precede this module (i.e. have a lower position

                      value), otherwise they will be ignored
                    type: array
                    items:
                      type: string
                  module[publish_final_grade]:
                    required: false
                    displayName: module[publish_final_grade]
                    description: |
                      Whether to publish the student's final grade for the course upon

                      completion of this module.
                    type: boolean
                  module[published]:
                    required: false
                    displayName: module[published]
                    description: Whether the module is published and visible to students
                    type: boolean
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: delete_module
            description: Delete module
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /relock:
            put:
              displayName: re_lock_module_progressions
              description: Re-lock module progressions
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
        /{module_id}/items:
          uriParameters:
            module_id:
              required: true
              displayName: module_id
              description: ID
              type: string
          get:
            displayName: list_module_items
            description: List module items
            queryParameters:
              include:
                required: false
                displayName: include
                description: |
                  If included, will return additional details specific to the content

                  associated with each item. Refer to the {api:Modules:Module%20Item Module

                  Item specification} for more details.

                  Includes standard lock information for each item.
                type: string
                enum:
                - content_details
              search_term:
                required: false
                displayName: search_term
                description: The partial title of the items to match and return.
                type: string
              student_id:
                required: false
                displayName: student_id
                description: Returns module completion information for the student with this id.
                type: string
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          post:
            displayName: create_module_item
            description: Create a module item
            body:
              multipart/form-data:
                type: object
                properties:
                  module_item[type]:
                    required: true
                    displayName: module_item[type]
                    description: The type of content linked to the item
                    type: string
                    enum:
                    - File
                    - Page
                    - Discussion
                    - Assignment
                    - Quiz
                    - SubHeader
                    - ExternalUrl
                    - ExternalTool
                  module_item[content_id]:
                    required: true
                    displayName: module_item[content_id]
                    description: |
                      The id of the content to link to the module item. Required, except for

                      'ExternalUrl', 'Page', and 'SubHeader' types.
                    type: string
                  module_item[title]:
                    required: false
                    displayName: module_item[title]
                    description: The name of the module item and associated content
                    type: string
                  module_item[position]:
                    required: false
                    displayName: module_item[position]
                    description: The position of this item in the module (1-based).
                    type: integer
                    format: int64
                  module_item[indent]:
                    required: false
                    displayName: module_item[indent]
                    description: 0-based indent level; module items may be indented to show a hierarchy
                    type: integer
                    format: int64
                  module_item[page_url]:
                    required: false
                    displayName: module_item[page_url]
                    description: |
                      Suffix for the linked wiki page (e.g. 'front-page'). Required for 'Page'

                      type.
                    type: string
                  module_item[external_url]:
                    required: false
                    displayName: module_item[external_url]
                    description: |
                      External url that the item points to. [Required for 'ExternalUrl' and

                      'ExternalTool' types.
                    type: string
                  module_item[new_tab]:
                    required: false
                    displayName: module_item[new_tab]
                    description: |
                      Whether the external tool opens in a new tab. Only applies to

                      'ExternalTool' type.
                    type: boolean
                  module_item[completion_requirement][type]:
                    required: false
                    displayName: module_item[completion_requirement][type]
                    description: |
                      Completion requirement for this module item.

                      "must_view": Applies to all item types

                      "must_contribute": Only applies to "Assignment", "Discussion", and "Page" types

                      "must_submit", "min_score": Only apply to "Assignment" and "Quiz" types

                      Inapplicable types will be ignored
                    type: string
                    enum:
                    - must_view
                    - must_contribute
                    - must_submit
                  module_item[completion_requirement][min_score]:
                    required: false
                    displayName: module_item[completion_requirement][min_score]
                    description: |
                      Minimum score required to complete. Required for completion_requirement

                      type 'min_score'.
                    type: integer
                    format: int64
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /{id}:
            uriParameters:
              id:
                required: true
                displayName: id
                description: ID
                type: string
            get:
              displayName: show_module_item
              description: Show module item
              queryParameters:
                include:
                  required: false
                  displayName: include
                  description: |
                    If included, will return additional details specific to the content

                    associated with this item. Refer to the {api:Modules:Module%20Item Module

                    Item specification} for more details.

                    Includes standard lock information for each item.
                  type: string
                  enum:
                  - content_details
                student_id:
                  required: false
                  displayName: student_id
                  description: Returns module completion information for the student with this id.
                  type: string
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            put:
              displayName: update_module_item
              description: Update a module item
              body:
                multipart/form-data:
                  type: object
                  properties:
                    module_item[title]:
                      required: false
                      displayName: module_item[title]
                      description: The name of the module item
                      type: string
                    module_item[position]:
                      required: false
                      displayName: module_item[position]
                      description: The position of this item in the module (1-based)
                      type: integer
                      format: int64
                    module_item[indent]:
                      required: false
                      displayName: module_item[indent]
                      description: 0-based indent level; module items may be indented to show a hierarchy
                      type: integer
                      format: int64
                    module_item[external_url]:
                      required: false
                      displayName: module_item[external_url]
                      description: External url that the item points to. Only applies to 'ExternalUrl' type.
                      type: string
                    module_item[new_tab]:
                      required: false
                      displayName: module_item[new_tab]
                      description: |
                        Whether the external tool opens in a new tab. Only applies to

                        'ExternalTool' type.
                      type: boolean
                    module_item[completion_requirement][type]:
                      required: false
                      displayName: module_item[completion_requirement][type]
                      description: |
                        Completion requirement for this module item.

                        "must_view": Applies to all item types

                        "must_contribute": Only applies to "Assignment", "Discussion", and "Page" types

                        "must_submit", "min_score": Only apply to "Assignment" and "Quiz" types

                        Inapplicable types will be ignored
                      type: string
                      enum:
                      - must_view
                      - must_contribute
                      - must_submit
                    module_item[completion_requirement][min_score]:
                      required: false
                      displayName: module_item[completion_requirement][min_score]
                      description: |
                        Minimum score required to complete, Required for completion_requirement

                        type 'min_score'.
                      type: integer
                      format: int64
                    module_item[published]:
                      required: false
                      displayName: module_item[published]
                      description: Whether the module item is published and visible to students.
                      type: boolean
                    module_item[module_id]:
                      required: false
                      displayName: module_item[module_id]
                      description: |
                        Move this item to another module by specifying the target module id here.

                        The target module must be in the same course.
                      type: string
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            delete:
              displayName: delete_module_item
              description: Delete module item
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            /select_mastery_path:
              post:
                displayName: select_mastery_path
                description: Select a mastery path
                body:
                  multipart/form-data:
                    type: object
                    properties:
                      assignment_set_id:
                        required: false
                        displayName: assignment_set_id
                        description: |
                          Assignment set chosen, as specified in the mastery_paths portion of the

                          context module item response
                        type: string
                      student_id:
                        required: false
                        displayName: student_id
                        description: |
                          Which student the selection applies to.  If not specified, current user is

                          implied.
                        type: string
                responses:
                  200:
                    description: Success
            /done:
              put:
                displayName: mark_module_item_as_done_not_done
                description: Mark module item as done/not done
                responses:
                  200:
                    description: Success
            /mark_read:
              post:
                displayName: mark_module_item_read
                description: Mark module item read
                responses:
                  200:
                    description: Success
      /module_item_sequence:
        get:
          displayName: get_module_item_sequence
          description: Get module item sequence
          queryParameters:
            asset_type:
              required: false
              displayName: asset_type
              description: |
                The type of asset to find module sequence information for. Use the ModuleItem if it is known

                (e.g., the user navigated from a module item), since this will avoid ambiguity if the asset

                appears more than once in the module sequence.
              type: string
              enum:
              - ModuleItem
              - File
              - Page
              - Discussion
              - Assignment
              - Quiz
              - ExternalTool
            asset_id:
              required: false
              displayName: asset_id
              description: The id of the asset (or the url in the case of a Page)
              type: integer
              format: int64
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /root_outcome_group:
        get:
          displayName: redirect_to_root_outcome_group_for_context_courses
          description: Redirect to root outcome group for context
          responses:
            200:
              description: Success
      /outcome_groups:
        get:
          displayName: get_all_outcome_groups_for_context_courses
          description: Get all outcome groups for context
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: show_outcome_group_courses
            description: Show an outcome group
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: update_outcome_group_courses
            description: Update an outcome group
            body:
              multipart/form-data:
                type: object
                properties:
                  title:
                    required: false
                    displayName: title
                    description: The new outcome group title.
                    type: string
                  description:
                    required: false
                    displayName: description
                    description: The new outcome group description.
                    type: string
                  vendor_guid:
                    required: false
                    displayName: vendor_guid
                    description: A custom GUID for the learning standard.
                    type: string
                  parent_outcome_group_id:
                    required: false
                    displayName: parent_outcome_group_id
                    description: The id of the new parent outcome group.
                    type: integer
                    format: int64
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: delete_outcome_group_courses
            description: Delete an outcome group
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /outcomes:
            get:
              displayName: list_linked_outcomes_courses
              description: List linked outcomes
              queryParameters:
                outcome_style:
                  required: false
                  displayName: outcome_style
                  description: |
                    The detail level of the outcomes. Defaults to "abbrev".

                    Specify "full" for more information.
                  type: string
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            post:
              displayName: create_link_outcome_courses
              description: Create/link an outcome
              body:
                multipart/form-data:
                  type: object
                  properties:
                    outcome_id:
                      required: false
                      displayName: outcome_id
                      description: The ID of the existing outcome to link.
                      type: integer
                      format: int64
                    move_from:
                      required: false
                      displayName: move_from
                      description: The ID of the old outcome group. Only used if outcome_id is present.
                      type: integer
                      format: int64
                    title:
                      required: false
                      displayName: title
                      description: The title of the new outcome. Required if outcome_id is absent.
                      type: string
                    display_name:
                      required: false
                      displayName: display_name
                      description: |
                        A friendly name shown in reports for outcomes with cryptic titles,

                        such as common core standards names.
                      type: string
                    description:
                      required: false
                      displayName: description
                      description: The description of the new outcome.
                      type: string
                    vendor_guid:
                      required: false
                      displayName: vendor_guid
                      description: A custom GUID for the learning standard.
                      type: string
                    mastery_points:
                      required: false
                      displayName: mastery_points
                      description: The mastery threshold for the embedded rubric criterion.
                      type: integer
                      format: int64
                    ratings[description]:
                      required: false
                      displayName: ratings[description]
                      description: The description of a rating level for the embedded rubric criterion.
                      type: array
                      items:
                        type: string
                    ratings[points]:
                      required: false
                      displayName: ratings[points]
                      description: The points corresponding to a rating level for the embedded rubric criterion.
                      type: array
                      items:
                        type: integer
                        format: int32
                    calculation_method:
                      required: false
                      displayName: calculation_method
                      description: The new calculation method.  Defaults to "decaying_average"
                      type: string
                      enum:
                      - decaying_average
                      - n_mastery
                      - latest
                      - highest
                    calculation_int:
                      required: false
                      displayName: calculation_int
                      description: The new calculation int.  Only applies if the calculation_method is "decaying_average" or "n_mastery". Defaults to 65
                      type: integer
                      format: int64
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            /{outcome_id}:
              uriParameters:
                outcome_id:
                  required: true
                  displayName: outcome_id
                  description: The ID of the existing outcome to link.
                  type: integer
                  format: int64
              put:
                displayName: create_link_outcome_courses_outcome_id
                description: Create/link an outcome
                body:
                  multipart/form-data:
                    type: object
                    properties:
                      move_from:
                        required: false
                        displayName: move_from
                        description: The ID of the old outcome group. Only used if outcome_id is present.
                        type: integer
                        format: int64
                      title:
                        required: false
                        displayName: title
                        description: The title of the new outcome. Required if outcome_id is absent.
                        type: string
                      display_name:
                        required: false
                        displayName: display_name
                        description: |
                          A friendly name shown in reports for outcomes with cryptic titles,

                          such as common core standards names.
                        type: string
                      description:
                        required: false
                        displayName: description
                        description: The description of the new outcome.
                        type: string
                      vendor_guid:
                        required: false
                        displayName: vendor_guid
                        description: A custom GUID for the learning standard.
                        type: string
                      mastery_points:
                        required: false
                        displayName: mastery_points
                        description: The mastery threshold for the embedded rubric criterion.
                        type: integer
                        format: int64
                      ratings[description]:
                        required: false
                        displayName: ratings[description]
                        description: The description of a rating level for the embedded rubric criterion.
                        type: array
                        items:
                          type: string
                      ratings[points]:
                        required: false
                        displayName: ratings[points]
                        description: The points corresponding to a rating level for the embedded rubric criterion.
                        type: array
                        items:
                          type: integer
                          format: int32
                      calculation_method:
                        required: false
                        displayName: calculation_method
                        description: The new calculation method.  Defaults to "decaying_average"
                        type: string
                        enum:
                        - decaying_average
                        - n_mastery
                        - latest
                        - highest
                      calculation_int:
                        required: false
                        displayName: calculation_int
                        description: The new calculation int.  Only applies if the calculation_method is "decaying_average" or "n_mastery". Defaults to 65
                        type: integer
                        format: int64
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
              delete:
                displayName: unlink_outcome_courses
                description: Unlink an outcome
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
          /subgroups:
            get:
              displayName: list_subgroups_courses
              description: List subgroups
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            post:
              displayName: create_subgroup_courses
              description: Create a subgroup
              body:
                multipart/form-data:
                  type: object
                  properties:
                    title:
                      required: true
                      displayName: title
                      description: The title of the new outcome group.
                      type: string
                    description:
                      required: false
                      displayName: description
                      description: The description of the new outcome group.
                      type: string
                    vendor_guid:
                      required: false
                      displayName: vendor_guid
                      description: A custom GUID for the learning standard
                      type: string
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
          /import:
            post:
              displayName: import_outcome_group_courses
              description: Import an outcome group
              body:
                multipart/form-data:
                  type: object
                  properties:
                    source_outcome_group_id:
                      required: true
                      displayName: source_outcome_group_id
                      description: The ID of the source outcome group.
                      type: integer
                      format: int64
                    async:
                      required: false
                      displayName: async
                      description: |
                        If true, perform action asynchronously.  In that case, this endpoint

                        will return a Progress object instead of an OutcomeGroup.

                        Use the {api:ProgressController#show progress endpoint}

                        to query the status of the operation.  The imported outcome group id

                        and url will be returned in the results of the Progress object

                        as "outcome_group_id" and "outcome_group_url"
                      type: boolean
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
      /outcome_group_links:
        get:
          displayName: get_all_outcome_links_for_context_courses
          description: Get all outcome links for context
          queryParameters:
            outcome_style:
              required: false
              displayName: outcome_style
              description: |
                The detail level of the outcomes. Defaults to "abbrev".

                Specify "full" for more information.
              type: string
            outcome_group_style:
              required: false
              displayName: outcome_group_style
              description: |
                The detail level of the outcome groups. Defaults to "abbrev".

                Specify "full" for more information.
              type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /outcome_imports:
        post:
          displayName: import_outcomes_courses
          description: Import Outcomes
          body:
            multipart/form-data:
              type: object
              properties:
                import_type:
                  required: false
                  displayName: import_type
                  description: |
                    Choose the data format for reading outcome data. With a standard Canvas

                    install, this option can only be 'instructure_csv', and if unprovided,

                    will be assumed to be so. Can be part of the query string.
                  type: string
                attachment:
                  required: false
                  displayName: attachment
                  description: |
                    There are two ways to post outcome import data - either via a

                    multipart/form-data form-field-style attachment, or via a non-multipart

                    raw post request.


                    'attachment' is required for multipart/form-data style posts. Assumed to

                    be outcome data from a file upload form field named 'attachment'.


                    Examples:
                      curl -F attachment=@<filename> -H "Authorization: Bearer <token>" \
                          'https://<canvas>/api/v1/accounts/<account_id>/outcome_imports?import_type=instructure_csv'
                      curl -F attachment=@<filename> -H "Authorization: Bearer <token>" \
                          'https://<canvas>/api/v1/courses/<course_id>/outcome_imports?import_type=instructure_csv'

                    If you decide to do a raw post, you can skip the 'attachment' argument,

                    but you will then be required to provide a suitable Content-Type header.

                    You are encouraged to also provide the 'extension' argument.


                    Examples:
                      curl -H 'Content-Type: text/csv' --data-binary @<filename>.csv \
                          -H "Authorization: Bearer <token>" \
                          'https://<canvas>/api/v1/accounts/<account_id>/outcome_imports?import_type=instructure_csv'

                      curl -H 'Content-Type: text/csv' --data-binary @<filename>.csv \
                          -H "Authorization: Bearer <token>" \
                          'https://<canvas>/api/v1/courses/<course_id>/outcome_imports?import_type=instructure_csv'
                  type: string
                extension:
                  required: false
                  displayName: extension
                  description: |
                    Recommended for raw post request style imports. This field will be used to

                    distinguish between csv and other file format extensions that

                    would usually be provided with the filename in the multipart post request

                    scenario. If not provided, this value will be inferred from the

                    Content-Type, falling back to csv-file format if all else fails.
                  type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_outcome_import_status_courses
            description: Get Outcome import status
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /outcome_results:
        get:
          displayName: get_outcome_results
          description: Get outcome results
          queryParameters:
            user_ids:
              required: false
              displayName: user_ids
              description: |
                If specified, only the users whose ids are given will be included in the

                results. SIS ids can be used, prefixed by "sis_user_id:".

                It is an error to specify an id for a user who is not a student in

                the context.
              type: array
              items:
                type: integer
                format: int32
            outcome_ids:
              required: false
              displayName: outcome_ids
              description: |
                If specified, only the outcomes whose ids are given will be included in the

                results. it is an error to specify an id for an outcome which is not linked

                to the context.
              type: array
              items:
                type: integer
                format: int32
            include:
              required: false
              displayName: include
              description: |
                [String, "alignments"|"outcomes"|"outcomes.alignments"|"outcome_groups"|"outcome_links"|"outcome_paths"|"users"]

                Specify additional collections to be side loaded with the result.

                "alignments" includes only the alignments referenced by the returned

                results.

                "outcomes.alignments" includes all alignments referenced by outcomes in the

                context.
              type: array
              items:
                type: string
            include_hidden:
              required: false
              displayName: include_hidden
              description: |
                If true, results that are hidden from the learning mastery gradebook and student rollup

                scores will be included
              type: boolean
          responses:
            200:
              description: Success
      /outcome_rollups:
        get:
          displayName: get_outcome_result_rollups
          description: Get outcome result rollups
          queryParameters:
            aggregate:
              required: false
              displayName: aggregate
              description: |
                If specified, instead of returning one rollup for each user, all the user

                rollups will be combined into one rollup for the course that will contain

                the average (or median, see below) rollup score for each outcome.
              type: string
              enum:
              - course
            aggregate_stat:
              required: false
              displayName: aggregate_stat
              description: |
                If aggregate rollups requested, then this value determines what

                statistic is used for the aggregate. Defaults to "mean" if this value

                is not specified.
              type: string
              enum:
              - mean
              - median
            user_ids:
              required: false
              displayName: user_ids
              description: |
                If specified, only the users whose ids are given will be included in the

                results or used in an aggregate result. it is an error to specify an id

                for a user who is not a student in the context
              type: array
              items:
                type: integer
                format: int32
            outcome_ids:
              required: false
              displayName: outcome_ids
              description: |
                If specified, only the outcomes whose ids are given will be included in the

                results. it is an error to specify an id for an outcome which is not linked

                to the context.
              type: array
              items:
                type: integer
                format: int32
            include:
              required: false
              displayName: include
              description: |
                [String, "courses"|"outcomes"|"outcomes.alignments"|"outcome_groups"|"outcome_links"|"outcome_paths"|"users"]

                Specify additional collections to be side loaded with the result.
              type: array
              items:
                type: string
            exclude:
              required: false
              displayName: exclude
              description: |
                Specify additional values to exclude. "missing_user_rollups" excludes

                rollups for users without results.
              type: string
              enum:
              - missing_user_rollups
            sort_by:
              required: false
              displayName: sort_by
              description: |
                If specified, sorts outcome result rollups. "student" sorting will sort

                by a user's sortable name. "outcome" sorting will sort by the given outcome's

                rollup score. The latter requires specifying the "sort_outcome_id" parameter.

                By default, the sort order is ascending.
              type: string
              enum:
              - student
              - outcome
            sort_outcome_id:
              required: false
              displayName: sort_outcome_id
              description: |
                If outcome sorting requested, then this determines which outcome to use

                for rollup score sorting.
              type: integer
              format: int64
            sort_order:
              required: false
              displayName: sort_order
              description: |
                If sorting requested, then this allows changing the default sort order of

                ascending to descending.
              type: string
              enum:
              - asc
              - desc
          responses:
            200:
              description: Success
      /outcome_alignments:
        get:
          displayName: get_aligned_assignments_for_outcome_in_course_for_particular_student
          description: Get aligned assignments for an outcome in a course for a particular student
          queryParameters:
            student_id:
              required: false
              displayName: student_id
              description: The id of the student
              type: integer
              format: int64
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /front_page:
        get:
          displayName: show_front_page_courses
          description: Show front page
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        put:
          displayName: update_create_front_page_courses
          description: Update/create front page
          body:
            multipart/form-data:
              type: object
              properties:
                wiki_page[title]:
                  required: false
                  displayName: wiki_page[title]
                  description: |
                    The title for the new page. NOTE: changing a page's title will change its

                    url. The updated url will be returned in the result.
                  type: string
                wiki_page[body]:
                  required: false
                  displayName: wiki_page[body]
                  description: The content for the new page.
                  type: string
                wiki_page[editing_roles]:
                  required: false
                  displayName: wiki_page[editing_roles]
                  description: |
                    Which user roles are allowed to edit this page. Any combination

                    of these roles is allowed (separated by commas).


                    "teachers":: Allows editing by teachers in the course.

                    "students":: Allows editing by students in the course.

                    "members":: For group wikis, allows editing by members of the group.

                    "public":: Allows editing by any user.
                  type: string
                wiki_page[notify_of_update]:
                  required: false
                  displayName: wiki_page[notify_of_update]
                  description: Whether participants should be notified when this page changes.
                  type: boolean
                wiki_page[published]:
                  required: false
                  displayName: wiki_page[published]
                  description: Whether the page is published (true) or draft state (false).
                  type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /pages:
        get:
          displayName: list_pages_courses
          description: List pages
          queryParameters:
            sort:
              required: false
              displayName: sort
              description: Sort results by this field.
              type: string
              enum:
              - title
              - created_at
              - updated_at
            order:
              required: false
              displayName: order
              description: The sorting order. Defaults to 'asc'.
              type: string
              enum:
              - asc
              - desc
            search_term:
              required: false
              displayName: search_term
              description: The partial title of the pages to match and return.
              type: string
            published:
              required: false
              displayName: published
              description: |
                If true, include only published paqes. If false, exclude published

                pages. If not present, do not filter on published status.
              type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_page_courses
          description: Create page
          body:
            multipart/form-data:
              type: object
              properties:
                wiki_page[title]:
                  required: true
                  displayName: wiki_page[title]
                  description: The title for the new page.
                  type: string
                wiki_page[body]:
                  required: false
                  displayName: wiki_page[body]
                  description: The content for the new page.
                  type: string
                wiki_page[editing_roles]:
                  required: false
                  displayName: wiki_page[editing_roles]
                  description: |
                    Which user roles are allowed to edit this page. Any combination

                    of these roles is allowed (separated by commas).


                    "teachers":: Allows editing by teachers in the course.

                    "students":: Allows editing by students in the course.

                    "members":: For group wikis, allows editing by members of the group.

                    "public":: Allows editing by any user.
                  type: string
                wiki_page[notify_of_update]:
                  required: false
                  displayName: wiki_page[notify_of_update]
                  description: Whether participants should be notified when this page changes.
                  type: boolean
                wiki_page[published]:
                  required: false
                  displayName: wiki_page[published]
                  description: Whether the page is published (true) or draft state (false).
                  type: boolean
                wiki_page[front_page]:
                  required: false
                  displayName: wiki_page[front_page]
                  description: Set an unhidden page as the front page (if true)
                  type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{url}:
          uriParameters:
            url:
              required: true
              displayName: url
              description: ID
              type: string
          get:
            displayName: show_page_courses
            description: Show page
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: update_create_page_courses
            description: Update/create page
            body:
              multipart/form-data:
                type: object
                properties:
                  wiki_page[title]:
                    required: false
                    displayName: wiki_page[title]
                    description: |
                      The title for the new page. NOTE: changing a page's title will change its

                      url. The updated url will be returned in the result.
                    type: string
                  wiki_page[body]:
                    required: false
                    displayName: wiki_page[body]
                    description: The content for the new page.
                    type: string
                  wiki_page[editing_roles]:
                    required: false
                    displayName: wiki_page[editing_roles]
                    description: |
                      Which user roles are allowed to edit this page. Any combination

                      of these roles is allowed (separated by commas).


                      "teachers":: Allows editing by teachers in the course.

                      "students":: Allows editing by students in the course.

                      "members":: For group wikis, allows editing by members of the group.

                      "public":: Allows editing by any user.
                    type: string
                  wiki_page[notify_of_update]:
                    required: false
                    displayName: wiki_page[notify_of_update]
                    description: Whether participants should be notified when this page changes.
                    type: boolean
                  wiki_page[published]:
                    required: false
                    displayName: wiki_page[published]
                    description: Whether the page is published (true) or draft state (false).
                    type: boolean
                  wiki_page[front_page]:
                    required: false
                    displayName: wiki_page[front_page]
                    description: Set an unhidden page as the front page (if true)
                    type: boolean
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: delete_page_courses
            description: Delete page
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /duplicate:
            post:
              displayName: duplicate_page
              description: Duplicate page
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
          /revisions:
            get:
              displayName: list_revisions_courses
              description: List revisions
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            /latest:
              get:
                displayName: show_revision_courses_latest
                description: Show revision
                queryParameters:
                  summary:
                    required: false
                    displayName: summary
                    description: If set, exclude page content from results
                    type: boolean
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
            /{revision_id}:
              uriParameters:
                revision_id:
                  required: true
                  displayName: revision_id
                  description: ID
                  type: string
              get:
                displayName: show_revision_courses_revision_id
                description: Show revision
                queryParameters:
                  summary:
                    required: false
                    displayName: summary
                    description: If set, exclude page content from results
                    type: boolean
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
              post:
                displayName: revert_to_revision_courses
                description: Revert to revision
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
      /quizzes:
        get:
          displayName: list_quizzes_in_course
          description: List quizzes in a course
          queryParameters:
            search_term:
              required: false
              displayName: search_term
              description: The partial title of the quizzes to match and return.
              type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_quiz
          description: Create a quiz
          body:
            multipart/form-data:
              type: object
              properties:
                quiz[title]:
                  required: true
                  displayName: quiz[title]
                  description: The quiz title.
                  type: string
                quiz[description]:
                  required: false
                  displayName: quiz[description]
                  description: A description of the quiz.
                  type: string
                quiz[quiz_type]:
                  required: false
                  displayName: quiz[quiz_type]
                  description: The type of quiz.
                  type: string
                  enum:
                  - practice_quiz
                  - assignment
                  - graded_survey
                  - survey
                quiz[assignment_group_id]:
                  required: false
                  displayName: quiz[assignment_group_id]
                  description: |
                    The assignment group id to put the assignment in. Defaults to the top

                    assignment group in the course. Only valid if the quiz is graded, i.e. if

                    quiz_type is "assignment" or "graded_survey".
                  type: integer
                  format: int64
                quiz[time_limit]:
                  required: false
                  displayName: quiz[time_limit]
                  description: |
                    Time limit to take this quiz, in minutes. Set to null for no time limit.

                    Defaults to null.
                  type: integer
                  format: int64
                quiz[shuffle_answers]:
                  required: false
                  displayName: quiz[shuffle_answers]
                  description: |
                    If true, quiz answers for multiple choice questions will be randomized for

                    each student. Defaults to false.
                  type: boolean
                quiz[hide_results]:
                  required: false
                  displayName: quiz[hide_results]
                  description: |
                    Dictates whether or not quiz results are hidden from students.

                    If null, students can see their results after any attempt.

                    If "always", students can never see their results.

                    If "until_after_last_attempt", students can only see results after their

                    last attempt. (Only valid if allowed_attempts > 1). Defaults to null.
                  type: string
                  enum:
                  - always
                  - until_after_last_attempt
                quiz[show_correct_answers]:
                  required: false
                  displayName: quiz[show_correct_answers]
                  description: |
                    Only valid if hide_results=null

                    If false, hides correct answers from students when quiz results are viewed.

                    Defaults to true.
                  type: boolean
                quiz[show_correct_answers_last_attempt]:
                  required: false
                  displayName: quiz[show_correct_answers_last_attempt]
                  description: |
                    Only valid if show_correct_answers=true and allowed_attempts > 1

                    If true, hides correct answers from students when quiz results are viewed

                    until they submit the last attempt for the quiz.

                    Defaults to false.
                  type: boolean
                quiz[show_correct_answers_at]:
                  required: false
                  displayName: quiz[show_correct_answers_at]
                  description: |
                    Only valid if show_correct_answers=true

                    If set, the correct answers will be visible by students only after this

                    date, otherwise the correct answers are visible once the student hands in

                    their quiz submission.
                  type: object
                quiz[hide_correct_answers_at]:
                  required: false
                  displayName: quiz[hide_correct_answers_at]
                  description: |
                    Only valid if show_correct_answers=true

                    If set, the correct answers will stop being visible once this date has

                    passed. Otherwise, the correct answers will be visible indefinitely.
                  type: object
                quiz[allowed_attempts]:
                  required: false
                  displayName: quiz[allowed_attempts]
                  description: |
                    Number of times a student is allowed to take a quiz.

                    Set to -1 for unlimited attempts.

                    Defaults to 1.
                  type: integer
                  format: int64
                quiz[scoring_policy]:
                  required: false
                  displayName: quiz[scoring_policy]
                  description: |
                    Required and only valid if allowed_attempts > 1.

                    Scoring policy for a quiz that students can take multiple times.

                    Defaults to "keep_highest".
                  type: string
                  enum:
                  - keep_highest
                  - keep_latest
                quiz[one_question_at_a_time]:
                  required: false
                  displayName: quiz[one_question_at_a_time]
                  description: |
                    If true, shows quiz to student one question at a time.

                    Defaults to false.
                  type: boolean
                quiz[cant_go_back]:
                  required: false
                  displayName: quiz[cant_go_back]
                  description: |
                    Only valid if one_question_at_a_time=true

                    If true, questions are locked after answering.

                    Defaults to false.
                  type: boolean
                quiz[access_code]:
                  required: false
                  displayName: quiz[access_code]
                  description: |
                    Restricts access to the quiz with a password.

                    For no access code restriction, set to null.

                    Defaults to null.
                  type: string
                quiz[ip_filter]:
                  required: false
                  displayName: quiz[ip_filter]
                  description: |
                    Restricts access to the quiz to computers in a specified IP range.

                    Filters can be a comma-separated list of addresses, or an address followed by a mask


                    Examples:
                      "192.168.217.1"
                      "192.168.217.1/24"
                      "192.168.217.1/255.255.255.0"

                    For no IP filter restriction, set to null.

                    Defaults to null.
                  type: string
                quiz[due_at]:
                  required: false
                  displayName: quiz[due_at]
                  description: |
                    The day/time the quiz is due.

                    Accepts times in ISO 8601 format, e.g. 2011-10-21T18:48Z.
                  type: object
                quiz[lock_at]:
                  required: false
                  displayName: quiz[lock_at]
                  description: |
                    The day/time the quiz is locked for students.

                    Accepts times in ISO 8601 format, e.g. 2011-10-21T18:48Z.
                  type: object
                quiz[unlock_at]:
                  required: false
                  displayName: quiz[unlock_at]
                  description: |
                    The day/time the quiz is unlocked for students.

                    Accepts times in ISO 8601 format, e.g. 2011-10-21T18:48Z.
                  type: object
                quiz[published]:
                  required: false
                  displayName: quiz[published]
                  description: |
                    Whether the quiz should have a draft state of published or unpublished.

                    NOTE: If students have started taking the quiz, or there are any

                    submissions for the quiz, you may not unpublish a quiz and will recieve

                    an error.
                  type: boolean
                quiz[one_time_results]:
                  required: false
                  displayName: quiz[one_time_results]
                  description: |
                    Whether students should be prevented from viewing their quiz results past

                    the first time (right after they turn the quiz in.)

                    Only valid if "hide_results" is not set to "always".

                    Defaults to false.
                  type: boolean
                quiz[only_visible_to_overrides]:
                  required: false
                  displayName: quiz[only_visible_to_overrides]
                  description: |
                    Whether this quiz is only visible to overrides (Only useful if

                    'differentiated assignments' account setting is on)

                    Defaults to false.
                  type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /assignment_overrides:
          get:
            displayName: retrieve_assignment_overridden_dates_for_quizzes
            description: Retrieve assignment-overridden dates for quizzes
            queryParameters:
              quiz_assignment_overrides[0][quiz_ids]:
                required: false
                displayName: quiz_assignment_overrides[0][quiz_ids]
                description: |
                  An array of quiz IDs. If omitted, overrides for all quizzes available to

                  the operating user will be returned.
                type: array
                items:
                  type: integer
                  format: int32
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_single_quiz
            description: Get a single quiz
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: edit_quiz
            description: Edit a quiz
            body:
              multipart/form-data:
                type: object
                properties:
                  quiz[notify_of_update]:
                    required: false
                    displayName: quiz[notify_of_update]
                    description: |
                      If true, notifies users that the quiz has changed.

                      Defaults to true
                    type: boolean
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: delete_quiz
            description: Delete a quiz
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /submission_users/message:
            post:
              displayName: send_message_to_unsubmitted_or_submitted_users_for_quiz
              description: Send a message to unsubmitted or submitted users for the quiz
              body:
                multipart/form-data:
                  type: object
                  properties:
                    conversations:
                      required: false
                      displayName: conversations
                      description: '- Body and recipients to send the message to.'
                      type: object
              responses:
                200:
                  description: Success
          /reorder:
            post:
              displayName: reorder_quiz_items
              description: Reorder quiz items
              body:
                multipart/form-data:
                  type: object
                  properties:
                    order[id]:
                      required: true
                      displayName: order[id]
                      description: The associated item's unique identifier
                      type: array
                      items:
                        type: integer
                        format: int32
                    order[type]:
                      required: false
                      displayName: order[type]
                      description: The type of item is either 'question' or 'group'
                      type: array
                      items:
                        type: string
              responses:
                200:
                  description: Success
          /validate_access_code:
            post:
              displayName: validate_quiz_access_code
              description: Validate quiz access code
              body:
                multipart/form-data:
                  type: object
                  properties:
                    access_code:
                      required: true
                      displayName: access_code
                      description: The access code being validated
                      type: string
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: boolean
        /{quiz_id}:
          uriParameters:
            quiz_id:
              required: true
              displayName: quiz_id
              description: ID
              type: string
          /extensions:
            post:
              displayName: set_extensions_for_student_quiz_submissions
              description: Set extensions for student quiz submissions
              body:
                multipart/form-data:
                  type: object
                  properties:
                    quiz_extensions[user_id]:
                      required: true
                      displayName: quiz_extensions[user_id]
                      description: The ID of the user we want to add quiz extensions for.
                      type: array
                      items:
                        type: integer
                        format: int32
                    quiz_extensions[extra_attempts]:
                      required: false
                      displayName: quiz_extensions[extra_attempts]
                      description: |
                        Number of times the student is allowed to re-take the quiz over the

                        multiple-attempt limit. This is limited to 1000 attempts or less.
                      type: array
                      items:
                        type: integer
                        format: int32
                    quiz_extensions[extra_time]:
                      required: false
                      displayName: quiz_extensions[extra_time]
                      description: |
                        The number of extra minutes to allow for all attempts. This will

                        add to the existing time limit on the submission. This is limited to

                        10080 minutes (1 week)
                      type: array
                      items:
                        type: integer
                        format: int32
                    quiz_extensions[manually_unlocked]:
                      required: false
                      displayName: quiz_extensions[manually_unlocked]
                      description: |
                        Allow the student to take the quiz even if it's locked for

                        everyone else.
                      type: array
                      items:
                        type: boolean
                    quiz_extensions[extend_from_now]:
                      required: false
                      displayName: quiz_extensions[extend_from_now]
                      description: |
                        The number of minutes to extend the quiz from the current time. This is

                        mutually exclusive to extend_from_end_at. This is limited to 1440

                        minutes (24 hours)
                      type: array
                      items:
                        type: integer
                        format: int32
                    quiz_extensions[extend_from_end_at]:
                      required: false
                      displayName: quiz_extensions[extend_from_end_at]
                      description: |
                        The number of minutes to extend the quiz beyond the quiz's current

                        ending time. This is mutually exclusive to extend_from_now. This is

                        limited to 1440 minutes (24 hours)
                      type: array
                      items:
                        type: integer
                        format: int32
              responses:
                200:
                  description: Success
          /ip_filters:
            get:
              displayName: get_available_quiz_ip_filters
              description: Get available quiz IP filters.
              responses:
                200:
                  description: Success
          /groups:
            post:
              displayName: create_question_group
              description: Create a question group
              body:
                multipart/form-data:
                  type: object
                  properties:
                    quiz_groups[name]:
                      required: false
                      displayName: quiz_groups[name]
                      description: The name of the question group.
                      type: array
                      items:
                        type: string
                    quiz_groups[pick_count]:
                      required: false
                      displayName: quiz_groups[pick_count]
                      description: The number of questions to randomly select for this group.
                      type: array
                      items:
                        type: integer
                        format: int32
                    quiz_groups[question_points]:
                      required: false
                      displayName: quiz_groups[question_points]
                      description: The number of points to assign to each question in the group.
                      type: array
                      items:
                        type: integer
                        format: int32
                    quiz_groups[assessment_question_bank_id]:
                      required: false
                      displayName: quiz_groups[assessment_question_bank_id]
                      description: The id of the assessment question bank to pull questions from.
                      type: array
                      items:
                        type: integer
                        format: int32
              responses:
                200:
                  description: Success
            /{id}:
              uriParameters:
                id:
                  required: true
                  displayName: id
                  description: ID
                  type: string
              get:
                displayName: get_single_quiz_group
                description: Get a single quiz group
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
              put:
                displayName: update_question_group
                description: Update a question group
                body:
                  multipart/form-data:
                    type: object
                    properties:
                      quiz_groups[name]:
                        required: false
                        displayName: quiz_groups[name]
                        description: The name of the question group.
                        type: array
                        items:
                          type: string
                      quiz_groups[pick_count]:
                        required: false
                        displayName: quiz_groups[pick_count]
                        description: The number of questions to randomly select for this group.
                        type: array
                        items:
                          type: integer
                          format: int32
                      quiz_groups[question_points]:
                        required: false
                        displayName: quiz_groups[question_points]
                        description: The number of points to assign to each question in the group.
                        type: array
                        items:
                          type: integer
                          format: int32
                responses:
                  200:
                    description: Success
              delete:
                displayName: delete_question_group
                description: Delete a question group
                responses:
                  200:
                    description: Success
              /reorder:
                post:
                  displayName: reorder_question_groups
                  description: Reorder question groups
                  body:
                    multipart/form-data:
                      type: object
                      properties:
                        order[id]:
                          required: true
                          displayName: order[id]
                          description: The associated item's unique identifier
                          type: array
                          items:
                            type: integer
                            format: int32
                        order[type]:
                          required: false
                          displayName: order[type]
                          description: The type of item is always 'question' for a group
                          type: string
                          enum:
                          - question
                  responses:
                    200:
                      description: Success
          /questions:
            get:
              displayName: list_questions_in_quiz_or_submission
              description: List questions in a quiz or a submission
              queryParameters:
                quiz_submission_id:
                  required: false
                  displayName: quiz_submission_id
                  description: |
                    If specified, the endpoint will return the questions that were presented

                    for that submission. This is useful if the quiz has been modified after

                    the submission was created and the latest quiz version's set of questions

                    does not match the submission's.

                    NOTE: you must specify quiz_submission_attempt as well if you specify this

                    parameter.
                  type: integer
                  format: int64
                quiz_submission_attempt:
                  required: false
                  displayName: quiz_submission_attempt
                  description: The attempt of the submission you want the questions for.
                  type: integer
                  format: int64
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            post:
              displayName: create_single_quiz_question
              description: Create a single quiz question
              body:
                multipart/form-data:
                  type: object
                  properties:
                    question[question_name]:
                      required: false
                      displayName: question[question_name]
                      description: The name of the question.
                      type: string
                    question[question_text]:
                      required: false
                      displayName: question[question_text]
                      description: The text of the question.
                      type: string
                    question[quiz_group_id]:
                      required: false
                      displayName: question[quiz_group_id]
                      description: The id of the quiz group to assign the question to.
                      type: integer
                      format: int64
                    question[question_type]:
                      required: false
                      displayName: question[question_type]
                      description: The type of question. Multiple optional fields depend upon the type of question to be used.
                      type: string
                      enum:
                      - calculated_question
                      - essay_question
                      - file_upload_question
                      - fill_in_multiple_blanks_question
                      - matching_question
                      - multiple_answers_question
                      - multiple_choice_question
                      - multiple_dropdowns_question
                      - numerical_question
                      - short_answer_question
                      - text_only_question
                      - true_false_question
                    question[position]:
                      required: false
                      displayName: question[position]
                      description: The order in which the question will be displayed in the quiz in relation to other questions.
                      type: integer
                      format: int64
                    question[points_possible]:
                      required: false
                      displayName: question[points_possible]
                      description: The maximum amount of points received for answering this question correctly.
                      type: integer
                      format: int64
                    question[correct_comments]:
                      required: false
                      displayName: question[correct_comments]
                      description: The comment to display if the student answers the question correctly.
                      type: string
                    question[incorrect_comments]:
                      required: false
                      displayName: question[incorrect_comments]
                      description: The comment to display if the student answers incorrectly.
                      type: string
                    question[neutral_comments]:
                      required: false
                      displayName: question[neutral_comments]
                      description: The comment to display regardless of how the student answered.
                      type: string
                    question[text_after_answers]:
                      required: false
                      displayName: question[text_after_answers]
                      description: no description
                      type: string
                    question[answers]:
                      required: false
                      displayName: question[answers]
                      description: no description
                      type: object
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            /{id}:
              uriParameters:
                id:
                  required: true
                  displayName: id
                  description: The quiz question unique identifier.
                  type: integer
                  format: int64
              get:
                displayName: get_single_quiz_question
                description: Get a single quiz question
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
              put:
                displayName: update_existing_quiz_question
                description: Update an existing quiz question
                body:
                  multipart/form-data:
                    type: object
                    properties:
                      question[question_name]:
                        required: false
                        displayName: question[question_name]
                        description: The name of the question.
                        type: string
                      question[question_text]:
                        required: false
                        displayName: question[question_text]
                        description: The text of the question.
                        type: string
                      question[quiz_group_id]:
                        required: false
                        displayName: question[quiz_group_id]
                        description: The id of the quiz group to assign the question to.
                        type: integer
                        format: int64
                      question[question_type]:
                        required: false
                        displayName: question[question_type]
                        description: The type of question. Multiple optional fields depend upon the type of question to be used.
                        type: string
                        enum:
                        - calculated_question
                        - essay_question
                        - file_upload_question
                        - fill_in_multiple_blanks_question
                        - matching_question
                        - multiple_answers_question
                        - multiple_choice_question
                        - multiple_dropdowns_question
                        - numerical_question
                        - short_answer_question
                        - text_only_question
                        - true_false_question
                      question[position]:
                        required: false
                        displayName: question[position]
                        description: The order in which the question will be displayed in the quiz in relation to other questions.
                        type: integer
                        format: int64
                      question[points_possible]:
                        required: false
                        displayName: question[points_possible]
                        description: The maximum amount of points received for answering this question correctly.
                        type: integer
                        format: int64
                      question[correct_comments]:
                        required: false
                        displayName: question[correct_comments]
                        description: The comment to display if the student answers the question correctly.
                        type: string
                      question[incorrect_comments]:
                        required: false
                        displayName: question[incorrect_comments]
                        description: The comment to display if the student answers incorrectly.
                        type: string
                      question[neutral_comments]:
                        required: false
                        displayName: question[neutral_comments]
                        description: The comment to display regardless of how the student answered.
                        type: string
                      question[text_after_answers]:
                        required: false
                        displayName: question[text_after_answers]
                        description: no description
                        type: string
                      question[answers]:
                        required: false
                        displayName: question[answers]
                        description: no description
                        type: object
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
              delete:
                displayName: delete_quiz_question
                description: Delete a quiz question
                responses:
                  200:
                    description: Success
          /reports:
            get:
              displayName: retrieve_all_quiz_reports
              description: Retrieve all quiz reports
              queryParameters:
                includes_all_versions:
                  required: false
                  displayName: includes_all_versions
                  description: |
                    Whether to retrieve reports that consider all the submissions or only

                    the most recent. Defaults to false, ignored for item_analysis reports.
                  type: boolean
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            post:
              displayName: create_quiz_report
              description: Create a quiz report
              body:
                multipart/form-data:
                  type: object
                  properties:
                    quiz_report[report_type]:
                      required: true
                      displayName: quiz_report[report_type]
                      description: The type of report to be generated.
                      type: string
                      enum:
                      - student_analysis
                      - item_analysis
                    quiz_report[includes_all_versions]:
                      required: false
                      displayName: quiz_report[includes_all_versions]
                      description: |
                        Whether the report should consider all submissions or only the most

                        recent. Defaults to false, ignored for item_analysis.
                      type: boolean
                    include:
                      required: false
                      displayName: include
                      description: |
                        Whether the output should include documents for the file and/or progress

                        objects associated with this report. (Note: JSON-API only)
                      type: string
                      enum:
                      - file
                      - progress
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            /{id}:
              uriParameters:
                id:
                  required: true
                  displayName: id
                  description: ID
                  type: string
              get:
                displayName: get_quiz_report
                description: Get a quiz report
                queryParameters:
                  include:
                    required: false
                    displayName: include
                    description: |
                      Whether the output should include documents for the file and/or progress

                      objects associated with this report. (Note: JSON-API only)
                    type: string
                    enum:
                    - file
                    - progress
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
              delete:
                displayName: abort_generation_of_report_or_remove_previously_generated_one
                description: Abort the generation of a report, or remove a previously generated one
                responses:
                  200:
                    description: Success
          /statistics:
            get:
              displayName: fetching_latest_quiz_statistics
              description: Fetching the latest quiz statistics
              queryParameters:
                all_versions:
                  required: false
                  displayName: all_versions
                  description: Whether the statistics report should include all submissions attempts.
                  type: boolean
              responses:
                200:
                  description: Success
          /submissions:
            get:
              displayName: get_all_quiz_submissions
              description: Get all quiz submissions.
              queryParameters:
                include:
                  required: false
                  displayName: include
                  description: Associations to include with the quiz submission.
                  type: string
                  enum:
                  - submission
                  - quiz
                  - user
              responses:
                200:
                  description: Success
            post:
              displayName: create_quiz_submission_start_quiz_taking_session
              description: Create the quiz submission (start a quiz-taking session)
              body:
                multipart/form-data:
                  type: object
                  properties:
                    access_code:
                      required: false
                      displayName: access_code
                      description: Access code for the Quiz, if any.
                      type: string
                    preview:
                      required: false
                      displayName: preview
                      description: |
                        Whether this should be a preview QuizSubmission and not count towards

                        the user's course record. Teachers only.
                      type: boolean
              responses:
                200:
                  description: Success
            /self/files:
              post:
                displayName: upload_file
                description: Upload a file
                body:
                  multipart/form-data:
                    type: object
                    properties:
                      name:
                        required: false
                        displayName: name
                        description: The name of the quiz submission file
                        type: string
                      on_duplicate:
                        required: false
                        displayName: on_duplicate
                        description: How to handle duplicate names
                        type: string
                responses:
                  200:
                    description: Success
            /{id}:
              uriParameters:
                id:
                  required: true
                  displayName: id
                  description: ID
                  type: string
              get:
                displayName: get_single_quiz_submission
                description: Get a single quiz submission.
                queryParameters:
                  include:
                    required: false
                    displayName: include
                    description: Associations to include with the quiz submission.
                    type: string
                    enum:
                    - submission
                    - quiz
                    - user
                responses:
                  200:
                    description: Success
              put:
                displayName: update_student_question_scores_and_comments
                description: Update student question scores and comments.
                body:
                  multipart/form-data:
                    type: object
                    properties:
                      quiz_submissions[attempt]:
                        required: true
                        displayName: quiz_submissions[attempt]
                        description: |
                          The attempt number of the quiz submission that should be updated. This

                          attempt MUST be already completed.
                        type: array
                        items:
                          type: integer
                          format: int32
                      quiz_submissions[fudge_points]:
                        required: false
                        displayName: quiz_submissions[fudge_points]
                        description: Amount of positive or negative points to fudge the total score by.
                        type: array
                        items:
                          type: number
                          format: double
                      quiz_submissions[questions]:
                        required: false
                        displayName: quiz_submissions[questions]
                        description: |
                          A set of scores and comments for each question answered by the student.

                          The keys are the question IDs, and the values are hashes of `score` and

                          `comment` entries. See {Appendix: Manual Scoring} for more on this

                          parameter.
                        type: array
                        items:
                          type: object
                responses:
                  200:
                    description: Success
              /events:
                post:
                  displayName: submit_captured_events
                  description: Submit captured events
                  body:
                    multipart/form-data:
                      type: object
                      properties:
                        quiz_submission_events:
                          required: true
                          displayName: quiz_submission_events
                          description: The submission events to be recorded
                          type: array
                          items:
                            type: object
                  responses:
                    200:
                      description: Success
                get:
                  displayName: retrieve_captured_events
                  description: Retrieve captured events
                  queryParameters:
                    attempt:
                      required: false
                      displayName: attempt
                      description: |
                        The specific submission attempt to look up the events for. If unspecified,

                        the latest attempt will be used.
                      type: integer
                      format: int64
                  responses:
                    200:
                      description: Success
              /complete:
                post:
                  displayName: complete_quiz_submission_turn_it_in
                  description: Complete the quiz submission (turn it in).
                  body:
                    multipart/form-data:
                      type: object
                      properties:
                        attempt:
                          required: true
                          displayName: attempt
                          description: |
                            The attempt number of the quiz submission that should be completed. Note

                            that this must be the latest attempt index, as earlier attempts can not

                            be modified.
                          type: integer
                          format: int64
                        validation_token:
                          required: true
                          displayName: validation_token
                          description: |
                            The unique validation token you received when this Quiz Submission was

                            created.
                          type: string
                        access_code:
                          required: false
                          displayName: access_code
                          description: Access code for the Quiz, if any.
                          type: string
                  responses:
                    200:
                      description: Success
              /time:
                get:
                  displayName: get_current_quiz_submission_times
                  description: Get current quiz submission times.
                  responses:
                    200:
                      description: Success
          /submission:
            get:
              displayName: get_quiz_submission
              description: Get the quiz submission.
              queryParameters:
                include:
                  required: false
                  displayName: include
                  description: Associations to include with the quiz submission.
                  type: string
                  enum:
                  - submission
                  - quiz
                  - user
              responses:
                200:
                  description: Success
      /rubrics:
        post:
          displayName: create_single_rubric
          description: Create a single rubric
          body:
            multipart/form-data:
              type: object
              properties:
                id:
                  required: false
                  displayName: id
                  description: The id of the rubric
                  type: integer
                  format: int64
                rubric_association_id:
                  required: false
                  displayName: rubric_association_id
                  description: The id of the object with which this rubric is associated
                  type: integer
                  format: int64
                rubric[title]:
                  required: false
                  displayName: rubric[title]
                  description: no description
                  type: string
                rubric[free_form_criterion_comments]:
                  required: false
                  displayName: rubric[free_form_criterion_comments]
                  description: no description
                  type: boolean
                rubric_association[association_id]:
                  required: false
                  displayName: rubric_association[association_id]
                  description: The id of the object with which this rubric is associated
                  type: integer
                  format: int64
                rubric_association[association_type]:
                  required: false
                  displayName: rubric_association[association_type]
                  description: The type of object this rubric is associated with
                  type: string
                  enum:
                  - Assignment
                  - Course
                  - Account
                rubric_association[use_for_grading]:
                  required: false
                  displayName: rubric_association[use_for_grading]
                  description: no description
                  type: boolean
                rubric_association[hide_score_total]:
                  required: false
                  displayName: rubric_association[hide_score_total]
                  description: no description
                  type: boolean
                rubric_association[purpose]:
                  required: false
                  displayName: rubric_association[purpose]
                  description: no description
                  type: string
                rubric[criteria]:
                  required: false
                  displayName: rubric[criteria]
                  description: An indexed Hash of RubricCriteria objects where the keys are integer ids and the values are the RubricCriteria objects
                  type: object
                  additionalProperties: true
                  properties: {}
          responses:
            200:
              description: Success
        get:
          displayName: list_rubrics_courses
          description: List rubrics
          responses:
            200:
              description: Success
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: The id of the rubric
              type: integer
              format: int64
          put:
            displayName: update_single_rubric
            description: Update a single rubric
            body:
              multipart/form-data:
                type: object
                properties:
                  rubric_association_id:
                    required: false
                    displayName: rubric_association_id
                    description: The id of the object with which this rubric is associated
                    type: integer
                    format: int64
                  rubric[title]:
                    required: false
                    displayName: rubric[title]
                    description: no description
                    type: string
                  rubric[free_form_criterion_comments]:
                    required: false
                    displayName: rubric[free_form_criterion_comments]
                    description: no description
                    type: boolean
                  rubric[skip_updating_points_possible]:
                    required: false
                    displayName: rubric[skip_updating_points_possible]
                    description: Whether or not to update the points possible
                    type: boolean
                  rubric_association[association_id]:
                    required: false
                    displayName: rubric_association[association_id]
                    description: The id of the object with which this rubric is associated
                    type: integer
                    format: int64
                  rubric_association[association_type]:
                    required: false
                    displayName: rubric_association[association_type]
                    description: The type of object this rubric is associated with
                    type: string
                    enum:
                    - Assignment
                    - Course
                    - Account
                  rubric_association[use_for_grading]:
                    required: false
                    displayName: rubric_association[use_for_grading]
                    description: no description
                    type: boolean
                  rubric_association[hide_score_total]:
                    required: false
                    displayName: rubric_association[hide_score_total]
                    description: no description
                    type: boolean
                  rubric_association[purpose]:
                    required: false
                    displayName: rubric_association[purpose]
                    description: no description
                    type: string
                  rubric[criteria]:
                    required: false
                    displayName: rubric[criteria]
                    description: An indexed Hash of RubricCriteria objects where the keys are integer ids and the values are the RubricCriteria objects
                    type: object
                    additionalProperties: true
                    properties: {}
            responses:
              200:
                description: Success
          delete:
            displayName: delete_single_rubric
            description: Delete a single rubric
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          get:
            displayName: get_single_rubric_courses
            description: Get a single rubric
            queryParameters:
              include:
                required: false
                displayName: include
                description: Related records to include in the response.
                type: string
                enum:
                - assessments
                - graded_assessments
                - peer_assessments
                - associations
                - assignment_associations
                - course_associations
                - account_associations
              style:
                required: false
                displayName: style
                description: Applicable only if assessments are being returned. If included, returns either all criteria data associated with the assessment, or just the comments. If not included, both data and comments are omitted.
                type: string
                enum:
                - full
                - comments_only
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /rubric_associations:
        post:
          displayName: create_rubricassociation
          description: Create a RubricAssociation
          body:
            multipart/form-data:
              type: object
              properties:
                rubric_association[rubric_id]:
                  required: false
                  displayName: rubric_association[rubric_id]
                  description: The id of the Rubric
                  type: integer
                  format: int64
                rubric_association[association_id]:
                  required: false
                  displayName: rubric_association[association_id]
                  description: The id of the object with which this rubric is associated
                  type: integer
                  format: int64
                rubric_association[association_type]:
                  required: false
                  displayName: rubric_association[association_type]
                  description: The type of object this rubric is associated with
                  type: string
                  enum:
                  - Assignment
                  - Course
                  - Account
                rubric_association[title]:
                  required: false
                  displayName: rubric_association[title]
                  description: no description
                  type: string
                rubric_association[use_for_grading]:
                  required: false
                  displayName: rubric_association[use_for_grading]
                  description: no description
                  type: boolean
                rubric_association[hide_score_total]:
                  required: false
                  displayName: rubric_association[hide_score_total]
                  description: no description
                  type: boolean
                rubric_association[purpose]:
                  required: false
                  displayName: rubric_association[purpose]
                  description: no description
                  type: string
                rubric_association[url]:
                  required: false
                  displayName: rubric_association[url]
                  description: no description
                  type: string
                rubric_association[bookmarked]:
                  required: false
                  displayName: rubric_association[bookmarked]
                  description: no description
                  type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{rubric_association_id}/rubric_assessments:
          uriParameters:
            rubric_association_id:
              required: true
              displayName: rubric_association_id
              description: The id of the object with which this rubric assessment is associated
              type: integer
              format: int64
          post:
            displayName: create_single_rubric_assessment
            description: Create a single rubric assessment
            body:
              multipart/form-data:
                type: object
                properties:
                  provisional:
                    required: false
                    displayName: provisional
                    description: (optional) Indicates whether this assessment is provisional, defaults to false.
                    type: string
                  final:
                    required: false
                    displayName: final
                    description: (optional) Indicates a provisional grade will be marked as final. It only takes effect if the provisional param is passed as true. Defaults to false.
                    type: string
                  graded_anonymously:
                    required: false
                    displayName: graded_anonymously
                    description: (optional) Defaults to false
                    type: boolean
                  rubric_assessment:
                    required: false
                    displayName: rubric_assessment
                    description: |
                      A Hash of data to complement the rubric assessment:

                      The user id that refers to the person being assessed
                        rubric_assessment[user_id]
                      Assessment type. There are only three valid types:  'grading', 'peer_review', or 'provisional_grade'
                        rubric_assessment[assessment_type]
                      The points awarded for this row.
                        rubric_assessment[criterion_id][points]
                      Comments to add for this row.
                        rubric_assessment[criterion_id][comments]
                      For each criterion_id, change the id by the criterion number, ex: criterion_123

                      If the criterion_id is not specified it defaults to false, and nothing is updated.
                    type: object
                    additionalProperties: true
                    properties: {}
            responses:
              200:
                description: Success
          /{id}:
            uriParameters:
              id:
                required: true
                displayName: id
                description: The id of the rubric assessment
                type: integer
                format: int64
            put:
              displayName: update_single_rubric_assessment
              description: Update a single rubric assessment
              body:
                multipart/form-data:
                  type: object
                  properties:
                    provisional:
                      required: false
                      displayName: provisional
                      description: (optional) Indicates whether this assessment is provisional, defaults to false.
                      type: string
                    final:
                      required: false
                      displayName: final
                      description: (optional) Indicates a provisional grade will be marked as final. It only takes effect if the provisional param is passed as true. Defaults to false.
                      type: string
                    graded_anonymously:
                      required: false
                      displayName: graded_anonymously
                      description: (optional) Defaults to false
                      type: boolean
                    rubric_assessment:
                      required: false
                      displayName: rubric_assessment
                      description: |
                        A Hash of data to complement the rubric assessment:

                        The user id that refers to the person being assessed
                          rubric_assessment[user_id]
                        Assessment type. There are only three valid types:  'grading', 'peer_review', or 'provisional_grade'
                          rubric_assessment[assessment_type]
                        The points awarded for this row.
                          rubric_assessment[criterion_id][points]
                        Comments to add for this row.
                          rubric_assessment[criterion_id][comments]
                        For each criterion_id, change the id by the criterion number, ex: criterion_123

                        If the criterion_id is not specified it defaults to false, and nothing is updated.
                      type: object
                      additionalProperties: true
                      properties: {}
              responses:
                200:
                  description: Success
            delete:
              displayName: delete_single_rubric_assessment
              description: Delete a single rubric assessment
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: The id of the RubricAssociation to update
              type: integer
              format: int64
          put:
            displayName: update_rubricassociation
            description: Update a RubricAssociation
            body:
              multipart/form-data:
                type: object
                properties:
                  rubric_association[rubric_id]:
                    required: false
                    displayName: rubric_association[rubric_id]
                    description: The id of the Rubric
                    type: integer
                    format: int64
                  rubric_association[association_id]:
                    required: false
                    displayName: rubric_association[association_id]
                    description: The id of the object with which this rubric is associated
                    type: integer
                    format: int64
                  rubric_association[association_type]:
                    required: false
                    displayName: rubric_association[association_type]
                    description: The type of object this rubric is associated with
                    type: string
                    enum:
                    - Assignment
                    - Course
                    - Account
                  rubric_association[title]:
                    required: false
                    displayName: rubric_association[title]
                    description: no description
                    type: string
                  rubric_association[use_for_grading]:
                    required: false
                    displayName: rubric_association[use_for_grading]
                    description: no description
                    type: boolean
                  rubric_association[hide_score_total]:
                    required: false
                    displayName: rubric_association[hide_score_total]
                    description: no description
                    type: boolean
                  rubric_association[purpose]:
                    required: false
                    displayName: rubric_association[purpose]
                    description: no description
                    type: string
                  rubric_association[url]:
                    required: false
                    displayName: rubric_association[url]
                    description: no description
                    type: string
                  rubric_association[bookmarked]:
                    required: false
                    displayName: rubric_association[bookmarked]
                    description: no description
                    type: boolean
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: delete_rubricassociation
            description: Delete a RubricAssociation
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /sections:
        get:
          displayName: list_course_sections
          description: List course sections
          queryParameters:
            include:
              required: false
              displayName: include
              description: |
                - "students": Associations to include with the group. Note: this is only
                  available if you have permission to view users or grades in the course
                - "avatar_url": Include the avatar URLs for students returned.

                - "enrollments": If 'students' is also included, return the section
                  enrollment for each student
                - "total_students": Returns the total amount of active and invited students
                  for the course section
                - "passback_status": Include the grade passback status.
              type: string
              enum:
              - students
              - avatar_url
              - enrollments
              - total_students
              - passback_status
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_course_section
          description: Create course section
          body:
            multipart/form-data:
              type: object
              properties:
                course_section[name]:
                  required: false
                  displayName: course_section[name]
                  description: The name of the section
                  type: string
                course_section[sis_section_id]:
                  required: false
                  displayName: course_section[sis_section_id]
                  description: The sis ID of the section. Must have manage_sis permission to set. This is ignored if caller does not have permission to set.
                  type: string
                course_section[integration_id]:
                  required: false
                  displayName: course_section[integration_id]
                  description: The integration_id of the section. Must have manage_sis permission to set. This is ignored if caller does not have permission to set.
                  type: string
                course_section[start_at]:
                  required: false
                  displayName: course_section[start_at]
                  description: Section start date in ISO8601 format, e.g. 2011-01-01T01:00Z
                  type: object
                course_section[end_at]:
                  required: false
                  displayName: course_section[end_at]
                  description: Section end date in ISO8601 format. e.g. 2011-01-01T01:00Z
                  type: object
                course_section[restrict_enrollments_to_section_dates]:
                  required: false
                  displayName: course_section[restrict_enrollments_to_section_dates]
                  description: Set to true to restrict user enrollments to the start and end dates of the section.
                  type: boolean
                enable_sis_reactivation:
                  required: false
                  displayName: enable_sis_reactivation
                  description: When true, will first try to re-activate a deleted section with matching sis_section_id if possible.
                  type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_section_information_courses
            description: Get section information
            queryParameters:
              include:
                required: false
                displayName: include
                description: |
                  - "students": Associations to include with the group. Note: this is only
                    available if you have permission to view users or grades in the course
                  - "avatar_url": Include the avatar URLs for students returned.

                  - "enrollments": If 'students' is also included, return the section
                    enrollment for each student
                  - "total_students": Returns the total amount of active and invited students
                    for the course section
                  - "passback_status": Include the grade passback status.
                type: string
                enum:
                - students
                - avatar_url
                - enrollments
                - total_students
                - passback_status
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /submissions/update_grades:
        post:
          displayName: grade_or_comment_on_multiple_submissions_courses_submissions
          description: Grade or comment on multiple submissions
          body:
            multipart/form-data:
              type: object
              properties:
                grade_data[<student_id>][posted_grade]:
                  required: false
                  displayName: grade_data[<student_id>][posted_grade]
                  description: |
                    See documentation for the posted_grade argument in the

                    {api:SubmissionsApiController#update Submissions Update} documentation
                  type: string
                grade_data[<student_id>][excuse]:
                  required: false
                  displayName: grade_data[<student_id>][excuse]
                  description: |
                    See documentation for the excuse argument in the

                    {api:SubmissionsApiController#update Submissions Update} documentation
                  type: boolean
                grade_data[<student_id>][rubric_assessment]:
                  required: false
                  displayName: grade_data[<student_id>][rubric_assessment]
                  description: |
                    See documentation for the rubric_assessment argument in the

                    {api:SubmissionsApiController#update Submissions Update} documentation
                  type: object
                grade_data[<student_id>][text_comment]:
                  required: false
                  displayName: grade_data[<student_id>][text_comment]
                  description: no description
                  type: string
                grade_data[<student_id>][group_comment]:
                  required: false
                  displayName: grade_data[<student_id>][group_comment]
                  description: no description
                  type: boolean
                grade_data[<student_id>][media_comment_id]:
                  required: false
                  displayName: grade_data[<student_id>][media_comment_id]
                  description: no description
                  type: string
                grade_data[<student_id>][media_comment_type]:
                  required: false
                  displayName: grade_data[<student_id>][media_comment_type]
                  description: no description
                  type: string
                  enum:
                  - audio
                  - video
                grade_data[<student_id>][file_ids]:
                  required: false
                  displayName: grade_data[<student_id>][file_ids]
                  description: |
                    See documentation for the comment[] arguments in the

                    {api:SubmissionsApiController#update Submissions Update} documentation
                  type: array
                  items:
                    type: integer
                    format: int32
                grade_data[<student_id>][assignment_id]:
                  required: false
                  displayName: grade_data[<student_id>][assignment_id]
                  description: |
                    Specifies which assignment to grade.  This argument is not necessary when

                    using the assignment-specific endpoints.
                  type: integer
                  format: int64
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /tabs:
        get:
          displayName: list_available_tabs_for_course_or_group_courses
          description: List available tabs for a course or group
          queryParameters:
            include:
              required: false
              displayName: include
              description: '"external":: Optionally include external tool tabs in the returned list of tabs (Only has effect for courses, not groups)'
              type: string
              enum:
              - external
          responses:
            200:
              description: Success
        /{tab_id}:
          uriParameters:
            tab_id:
              required: true
              displayName: tab_id
              description: ID
              type: string
          put:
            displayName: update_tab_for_course
            description: Update a tab for a course
            body:
              multipart/form-data:
                type: object
                properties:
                  position:
                    required: false
                    displayName: position
                    description: The new position of the tab, 1-based
                    type: integer
                    format: int64
                  hidden:
                    required: false
                    displayName: hidden
                    description: no description
                    type: boolean
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /epub_exports:
        post:
          displayName: create_epub_export
          description: Create ePub Export
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: show_epub_export
            description: Show ePub export
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /analytics:
        /activity:
          get:
            displayName: get_course_level_participation_data
            description: Get course-level participation data
            responses:
              200:
                description: Success
        /assignments:
          get:
            displayName: get_course_level_assignment_data
            description: Get course-level assignment data
            queryParameters:
              async:
                required: false
                displayName: async
                description: |
                  If async is true, then the course_assignments call can happen asynch-

                  ronously and MAY return a response containing a progress_url key instead

                  of an assignments array. If it does, then it is the caller's

                  responsibility to poll the API again to see if the progress is complete.

                  If the data is ready (possibly even on the first async call) then it

                  will be passed back normally, as documented in the example response.
                type: boolean
            responses:
              200:
                description: Success
        /student_summaries:
          get:
            displayName: get_course_level_student_summary_data
            description: Get course-level student summary data
            queryParameters:
              sort_column:
                required: false
                displayName: sort_column
                description: The order results in which results are returned.  Defaults to "name".
                type: string
                enum:
                - name
                - name_descending
                - score
                - score_descending
                - participations
                - participations_descending
                - page_views
                - page_views_descending
              student_id:
                required: false
                displayName: student_id
                description: If set, returns only the specified student.
                type: string
            responses:
              200:
                description: Success
        /users:
          /{student_id}:
            uriParameters:
              student_id:
                required: true
                displayName: student_id
                description: ID
                type: string
            /activity:
              get:
                displayName: get_user_in_a_course_level_participation_data
                description: Get user-in-a-course-level participation data
                responses:
                  200:
                    description: Success
            /assignments:
              get:
                displayName: get_user_in_a_course_level_assignment_data
                description: Get user-in-a-course-level assignment data
                responses:
                  200:
                    description: Success
            /communication:
              get:
                displayName: get_user_in_a_course_level_messaging_data
                description: Get user-in-a-course-level messaging data
                responses:
                  200:
                    description: Success
      /calendar_events:
        /timetable:
          post:
            displayName: set_course_timetable
            description: Set a course timetable
            body:
              multipart/form-data:
                type: object
                properties:
                  timetables[course_section_id]:
                    required: false
                    displayName: timetables[course_section_id]
                    description: |
                      An array of timetable objects for the course section specified by course_section_id.

                      If course_section_id is set to "all", events will be created for the entire course.
                    type: array
                    items:
                      type: object
                  timetables[course_section_id][weekdays]:
                    required: false
                    displayName: timetables[course_section_id][weekdays]
                    description: |
                      A comma-separated list of abbreviated weekdays

                      (Mon-Monday, Tue-Tuesday, Wed-Wednesday, Thu-Thursday, Fri-Friday, Sat-Saturday, Sun-Sunday)
                    type: array
                    items:
                      type: string
                  timetables[course_section_id][start_time]:
                    required: false
                    displayName: timetables[course_section_id][start_time]
                    description: Time to start each event at (e.g. "9:00 am")
                    type: array
                    items:
                      type: string
                  timetables[course_section_id][end_time]:
                    required: false
                    displayName: timetables[course_section_id][end_time]
                    description: Time to end each event at (e.g. "9:00 am")
                    type: array
                    items:
                      type: string
                  timetables[course_section_id][location_name]:
                    required: false
                    displayName: timetables[course_section_id][location_name]
                    description: A location name to set for each event
                    type: array
                    items:
                      type: string
            responses:
              200:
                description: Success
          get:
            displayName: get_course_timetable
            description: Get course timetable
            responses:
              200:
                description: Success
        /timetable_events:
          post:
            displayName: create_or_update_events_directly_for_course_timetable
            description: Create or update events directly for a course timetable
            body:
              multipart/form-data:
                type: object
                properties:
                  course_section_id:
                    required: false
                    displayName: course_section_id
                    description: |
                      Events will be created for the course section specified by course_section_id.

                      If not present, events will be created for the entire course.
                    type: string
                  events:
                    required: false
                    displayName: events
                    description: An array of event objects to use.
                    type: array
                    items:
                      type: object
                  events[start_at]:
                    required: false
                    displayName: events[start_at]
                    description: Start time for the event
                    type: array
                    items:
                      type: object
                  events[end_at]:
                    required: false
                    displayName: events[end_at]
                    description: End time for the event
                    type: array
                    items:
                      type: object
                  events[location_name]:
                    required: false
                    displayName: events[location_name]
                    description: Location name for the event
                    type: array
                    items:
                      type: string
                  events[code]:
                    required: false
                    displayName: events[code]
                    description: |
                      A unique identifier that can be used to update the event at a later time

                      If one is not specified, an identifier will be generated based on the start and end times
                    type: array
                    items:
                      type: string
            responses:
              200:
                description: Success
      /gradebook_history:
        /days:
          get:
            displayName: days_in_gradebook_history_for_this_course
            description: Days in gradebook history for this course
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
        /{date}:
          uriParameters:
            date:
              required: true
              displayName: date
              description: The date for which you would like to see detailed information
              type: string
          get:
            displayName: details_for_given_date_in_gradebook_history_for_this_course
            description: Details for a given date in gradebook history for this course
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /graders/{grader_id}/assignments/{assignment_id}/submissions:
            uriParameters:
              grader_id:
                required: true
                displayName: grader_id
                description: The ID of the grader for which you want to see submissions
                type: integer
                format: int64
              assignment_id:
                required: true
                displayName: assignment_id
                description: The ID of the assignment for which you want to see submissions
                type: integer
                format: int64
            get:
              displayName: lists_submissions
              description: Lists submissions
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
        /feed:
          get:
            displayName: list_uncollated_submission_versions
            description: List uncollated submission versions
            queryParameters:
              assignment_id:
                required: false
                displayName: assignment_id
                description: |
                  The ID of the assignment for which you want to see submissions. If

                  absent, versions of submissions from any assignment in the course are

                  included.
                type: integer
                format: int64
              user_id:
                required: false
                displayName: user_id
                description: |
                  The ID of the user for which you want to see submissions. If absent,

                  versions of submissions from any user in the course are included.
                type: integer
                format: int64
              ascending:
                required: false
                displayName: ascending
                description: |
                  Returns submission versions in ascending date order (oldest first). If

                  absent, returns submission versions in descending date order (newest

                  first).
                type: boolean
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
  /error_reports:
    post:
      displayName: create_error_report
      description: Create Error Report
      body:
        multipart/form-data:
          type: object
          properties:
            error[subject]:
              required: true
              displayName: error[subject]
              description: The summary of the problem
              type: string
            error[url]:
              required: false
              displayName: error[url]
              description: URL from which the report was issued
              type: string
            error[email]:
              required: false
              displayName: error[email]
              description: Email address for the reporting user
              type: string
            error[comments]:
              required: false
              displayName: error[comments]
              description: The long version of the story from the user one what they experienced
              type: string
            error[http_env]:
              required: false
              displayName: error[http_env]
              description: |
                A collection of metadata about the users' environment.  If not provided,

                canvas will collect it based on information found in the request.

                (Doesn't have to be HTTPENV info, could be anything JSON object that can be

                serialized as a hash, a mobile app might include relevant metadata for

                itself)
              type: object
      responses:
        200:
          description: Success
  /group_categories/{group_category_id}:
    uriParameters:
      group_category_id:
        required: true
        displayName: group_category_id
        description: ID
        type: string
    get:
      displayName: get_single_group_category
      description: Get a single group category
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
    put:
      displayName: update_group_category
      description: Update a Group Category
      body:
        multipart/form-data:
          type: object
          properties:
            name:
              required: false
              displayName: name
              description: Name of the group category
              type: string
            self_signup:
              required: false
              displayName: self_signup
              description: |
                Allow students to sign up for a group themselves (Course Only).

                Valid values are:

                "enabled":: allows students to self sign up for any group in course

                "restricted":: allows students to self sign up only for groups in the
                               same section null disallows self sign up
              type: string
              enum:
              - enabled
              - restricted
            auto_leader:
              required: false
              displayName: auto_leader
              description: |
                Assigns group leaders automatically when generating and allocating students to groups

                Valid values are:

                "first":: the first student to be allocated to a group is the leader

                "random":: a random student from all members is chosen as the leader
              type: string
              enum:
              - first
              - random
            group_limit:
              required: false
              displayName: group_limit
              description: |
                Limit the maximum number of users in each group (Course Only). Requires

                self signup.
              type: integer
              format: int64
            sis_group_category_id:
              required: false
              displayName: sis_group_category_id
              description: The unique SIS identifier.
              type: string
            create_group_count:
              required: false
              displayName: create_group_count
              description: Create this number of groups (Course Only).
              type: integer
              format: int64
            split_group_count:
              required: false
              displayName: split_group_count
              description: |
                (Deprecated)

                Create this number of groups, and evenly distribute students

                among them. not allowed with "enable_self_signup". because

                the group assignment happens synchronously, it's recommended

                that you instead use the assign_unassigned_members endpoint.

                (Course Only)
              type: string
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
    delete:
      displayName: delete_group_category
      description: Delete a Group Category
      responses:
        200:
          description: Success
    /groups:
      get:
        displayName: list_groups_in_group_category
        description: List groups in group category
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      post:
        displayName: create_group_group_categories
        description: Create a group
        body:
          multipart/form-data:
            type: object
            properties:
              name:
                required: false
                displayName: name
                description: The name of the group
                type: string
              description:
                required: false
                displayName: description
                description: A description of the group
                type: string
              is_public:
                required: false
                displayName: is_public
                description: whether the group is public (applies only to community groups)
                type: boolean
              join_level:
                required: false
                displayName: join_level
                description: no description
                type: string
                enum:
                - parent_context_auto_join
                - parent_context_request
                - invitation_only
              storage_quota_mb:
                required: false
                displayName: storage_quota_mb
                description: |
                  The allowed file storage for the group, in megabytes. This parameter is

                  ignored if the caller does not have the manage_storage_quotas permission.
                type: integer
                format: int64
              sis_group_id:
                required: false
                displayName: sis_group_id
                description: The sis ID of the group. Must have manage_sis permission to set.
                type: string
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
    /users:
      get:
        displayName: list_users_in_group_category
        description: List users in group category
        queryParameters:
          search_term:
            required: false
            displayName: search_term
            description: |
              The partial name or full ID of the users to match and return in the results

              list. Must be at least 3 characters.
            type: string
          unassigned:
            required: false
            displayName: unassigned
            description: |
              Set this value to true if you wish only to search unassigned users in the

              group category.
            type: boolean
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
    /assign_unassigned_members:
      post:
        displayName: assign_unassigned_members
        description: Assign unassigned members
        body:
          multipart/form-data:
            type: object
            properties:
              sync:
                required: false
                displayName: sync
                description: |
                  The assigning is done asynchronously by default. If you would like to

                  override this and have the assigning done synchronously, set this value

                  to true.
                type: boolean
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
  /groups:
    post:
      displayName: create_group_groups
      description: Create a group
      body:
        multipart/form-data:
          type: object
          properties:
            name:
              required: false
              displayName: name
              description: The name of the group
              type: string
            description:
              required: false
              displayName: description
              description: A description of the group
              type: string
            is_public:
              required: false
              displayName: is_public
              description: whether the group is public (applies only to community groups)
              type: boolean
            join_level:
              required: false
              displayName: join_level
              description: no description
              type: string
              enum:
              - parent_context_auto_join
              - parent_context_request
              - invitation_only
            storage_quota_mb:
              required: false
              displayName: storage_quota_mb
              description: |
                The allowed file storage for the group, in megabytes. This parameter is

                ignored if the caller does not have the manage_storage_quotas permission.
              type: integer
              format: int64
            sis_group_id:
              required: false
              displayName: sis_group_id
              description: The sis ID of the group. Must have manage_sis permission to set.
              type: string
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
    /{group_id}:
      uriParameters:
        group_id:
          required: true
          displayName: group_id
          description: ID
          type: string
      get:
        displayName: get_single_group
        description: Get a single group
        queryParameters:
          include:
            required: false
            displayName: include
            description: |
              - "permissions": Include permissions the current user has
                for the group.
              - "tabs": Include the list of tabs configured for each group.  See the
                {api:TabsController#index List available tabs API} for more information.
            type: string
            enum:
            - permissions
            - tabs
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      put:
        displayName: edit_group
        description: Edit a group
        body:
          multipart/form-data:
            type: object
            properties:
              name:
                required: false
                displayName: name
                description: The name of the group
                type: string
              description:
                required: false
                displayName: description
                description: A description of the group
                type: string
              is_public:
                required: false
                displayName: is_public
                description: |
                  Whether the group is public (applies only to community groups). Currently

                  you cannot set a group back to private once it has been made public.
                type: boolean
              join_level:
                required: false
                displayName: join_level
                description: no description
                type: string
                enum:
                - parent_context_auto_join
                - parent_context_request
                - invitation_only
              avatar_id:
                required: false
                displayName: avatar_id
                description: |
                  The id of the attachment previously uploaded to the group that you would

                  like to use as the avatar image for this group.
                type: integer
                format: int64
              storage_quota_mb:
                required: false
                displayName: storage_quota_mb
                description: |
                  The allowed file storage for the group, in megabytes. This parameter is

                  ignored if the caller does not have the manage_storage_quotas permission.
                type: integer
                format: int64
              members:
                required: false
                displayName: members
                description: |
                  An array of user ids for users you would like in the group.

                  Users not in the group will be sent invitations. Existing group

                  members who aren't in the list will be removed from the group.
                type: array
                items:
                  type: string
              sis_group_id:
                required: false
                displayName: sis_group_id
                description: The sis ID of the group. Must have manage_sis permission to set.
                type: string
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      delete:
        displayName: delete_group
        description: Delete a group
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      /external_feeds:
        get:
          displayName: list_external_feeds_groups
          description: List external feeds
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_external_feed_groups
          description: Create an external feed
          body:
            multipart/form-data:
              type: object
              properties:
                url:
                  required: true
                  displayName: url
                  description: The url to the external rss or atom feed
                  type: string
                header_match:
                  required: false
                  displayName: header_match
                  description: If given, only feed entries that contain this string in their title will be imported
                  type: boolean
                verbosity:
                  required: false
                  displayName: verbosity
                  description: Defaults to "full"
                  type: string
                  enum:
                  - full
                  - truncate
                  - link_only
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{external_feed_id}:
          uriParameters:
            external_feed_id:
              required: true
              displayName: external_feed_id
              description: ID
              type: string
          delete:
            displayName: delete_external_feed_groups
            description: Delete an external feed
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /assignments/{assignment_id}/override:
        uriParameters:
          assignment_id:
            required: true
            displayName: assignment_id
            description: ID
            type: string
        get:
          displayName: redirect_to_assignment_override_for_group
          description: Redirect to the assignment override for a group
          responses:
            200:
              description: Success
      /collaborations:
        get:
          displayName: list_collaborations_groups
          description: List collaborations
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /potential_collaborators:
        get:
          displayName: list_potential_members_groups
          description: List potential members
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /conferences:
        get:
          displayName: list_conferences_groups
          description: List conferences
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /content_exports:
        get:
          displayName: list_content_exports_groups
          description: List content exports
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: export_content_groups
          description: Export content
          body:
            multipart/form-data:
              type: object
              properties:
                export_type:
                  required: true
                  displayName: export_type
                  description: |
                    "common_cartridge":: Export the contents of the course in the Common Cartridge (.imscc) format

                    "qti":: Export quizzes from a course in the QTI format

                    "zip":: Export files from a course, group, or user in a zip file
                  type: string
                  enum:
                  - common_cartridge
                  - qti
                  - zip
                skip_notifications:
                  required: false
                  displayName: skip_notifications
                  description: "Don't send the notifications about the export to the user. Default: false"
                  type: boolean
                select:
                  required: false
                  displayName: select
                  description: |
                    The select parameter allows exporting specific data. The keys are object types like 'files',

                    'folders', 'pages', etc. The value for each key is a list of object ids. An id can be an

                    integer or a string.


                    Multiple object types can be selected in the same call. However, not all object types are

                    valid for every export_type. Common Cartridge supports all object types. Zip and QTI only

                    support the object types as described below.


                    "folders":: Also supported for zip export_type.

                    "files":: Also supported for zip export_type.

                    "quizzes":: Also supported for qti export_type.
                  type: object
                  additionalProperties: true
                  properties: {}
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: show_content_export_groups
            description: Show content export
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /content_migrations:
        get:
          displayName: list_content_migrations_groups
          description: List content migrations
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_content_migration_groups
          description: Create a content migration
          body:
            multipart/form-data:
              type: object
              properties:
                migration_type:
                  required: true
                  displayName: migration_type
                  description: |
                    The type of the migration. Use the

                    {api:ContentMigrationsController#available_migrators Migrator} endpoint to

                    see all available migrators. Default allowed values:

                    canvas_cartridge_importer, common_cartridge_importer,

                    course_copy_importer, zip_file_importer, qti_converter, moodle_converter
                  type: string
                pre_attachment[name]:
                  required: false
                  displayName: pre_attachment[name]
                  description: |
                    Required if uploading a file. This is the first step in uploading a file

                    to the content migration. See the {file:file_uploads.html File Upload

                    Documentation} for details on the file upload workflow.
                  type: string
                pre_attachment[*]:
                  required: false
                  displayName: pre_attachment[*]
                  description: |
                    Other file upload properties, See {file:file_uploads.html File Upload

                    Documentation}
                  type: string
                settings[file_url]:
                  required: false
                  displayName: settings[file_url]
                  description: A URL to download the file from. Must not require authentication.
                  type: string
                settings[source_course_id]:
                  required: false
                  displayName: settings[source_course_id]
                  description: |
                    The course to copy from for a course copy migration. (required if doing

                    course copy)
                  type: string
                settings[folder_id]:
                  required: false
                  displayName: settings[folder_id]
                  description: The folder to unzip the .zip file into for a zip_file_import.
                  type: string
                settings[overwrite_quizzes]:
                  required: false
                  displayName: settings[overwrite_quizzes]
                  description: |
                    Whether to overwrite quizzes with the same identifiers between content

                    packages.
                  type: boolean
                settings[question_bank_id]:
                  required: false
                  displayName: settings[question_bank_id]
                  description: |
                    The existing question bank ID to import questions into if not specified in

                    the content package.
                  type: integer
                  format: int64
                settings[question_bank_name]:
                  required: false
                  displayName: settings[question_bank_name]
                  description: |
                    The question bank to import questions into if not specified in the content

                    package, if both bank id and name are set, id will take precedence.
                  type: string
                date_shift_options[shift_dates]:
                  required: false
                  displayName: date_shift_options[shift_dates]
                  description: Whether to shift dates in the copied course
                  type: boolean
                date_shift_options[old_start_date]:
                  required: false
                  displayName: date_shift_options[old_start_date]
                  description: The original start date of the source content/course
                  type: object
                date_shift_options[old_end_date]:
                  required: false
                  displayName: date_shift_options[old_end_date]
                  description: The original end date of the source content/course
                  type: object
                date_shift_options[new_start_date]:
                  required: false
                  displayName: date_shift_options[new_start_date]
                  description: The new start date for the content/course
                  type: object
                date_shift_options[new_end_date]:
                  required: false
                  displayName: date_shift_options[new_end_date]
                  description: The new end date for the source content/course
                  type: object
                date_shift_options[day_substitutions][X]:
                  required: false
                  displayName: date_shift_options[day_substitutions][X]
                  description: |
                    Move anything scheduled for day 'X' to the specified day. (0-Sunday,

                    1-Monday, 2-Tuesday, 3-Wednesday, 4-Thursday, 5-Friday, 6-Saturday)
                  type: integer
                  format: int64
                date_shift_options[remove_dates]:
                  required: false
                  displayName: date_shift_options[remove_dates]
                  description: |
                    Whether to remove dates in the copied course. Cannot be used

                    in conjunction with *shift_dates*.
                  type: boolean
                selective_import:
                  required: false
                  displayName: selective_import
                  description: |
                    If set, perform a selective import instead of importing all content.

                    The migration will identify the contents of the package and then stop

                    in the +waiting_for_select+ workflow state. At this point, use the

                    {api:ContentMigrationsController#content_list List items endpoint}

                    to enumerate the contents of the package, identifying the copy

                    parameters for the desired content. Then call the

                    {api:ContentMigrationsController#update Update endpoint} and provide these

                    copy parameters to start the import.
                  type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{content_migration_id}/migration_issues:
          uriParameters:
            content_migration_id:
              required: true
              displayName: content_migration_id
              description: ID
              type: string
          get:
            displayName: list_migration_issues_groups
            description: List migration issues
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /{id}:
            uriParameters:
              id:
                required: true
                displayName: id
                description: ID
                type: string
            get:
              displayName: get_migration_issue_groups
              description: Get a migration issue
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            put:
              displayName: update_migration_issue_groups
              description: Update a migration issue
              body:
                multipart/form-data:
                  type: object
                  properties:
                    workflow_state:
                      required: true
                      displayName: workflow_state
                      description: Set the workflow_state of the issue.
                      type: string
                      enum:
                      - active
                      - resolved
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_content_migration_groups
            description: Get a content migration
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: update_content_migration_groups
            description: Update a content migration
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /selective_data:
            get:
              displayName: list_items_for_selective_import_groups
              description: List items for selective import
              queryParameters:
                type:
                  required: false
                  displayName: type
                  description: The type of content to enumerate.
                  type: string
                  enum:
                  - context_modules
                  - assignments
                  - quizzes
                  - assessment_question_banks
                  - discussion_topics
                  - wiki_pages
                  - context_external_tools
                  - tool_profiles
                  - announcements
                  - calendar_events
                  - rubrics
                  - groups
                  - learning_outcomes
                  - attachments
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
        /migrators:
          get:
            displayName: list_migration_systems_groups
            description: List Migration Systems
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /discussion_topics:
        get:
          displayName: list_discussion_topics_groups
          description: List discussion topics
          queryParameters:
            include:
              required: false
              displayName: include
              description: |
                If "all_dates" is passed, all dates associated with graded discussions'

                assignments will be included.

                if "sections" is passed, includes the course sections that are associated

                with the topic, if the topic is specific to certain sections of the course.

                If "sections_user_count" is passed, then:
                  (a) If sections were asked for *and* the topic is specific to certain
                      course sections, includes the number of users in each
                      section. (as part of the section json asked for above)
                  (b) Else, includes at the root level the total number of users in the
                      topic's context (group or course) that the topic applies to.
                If "overrides" is passed, the overrides for the assignment will be included
              type: string
              enum:
              - all_dates
              - sections
              - sections_user_count
              - overrides
            order_by:
              required: false
              displayName: order_by
              description: Determines the order of the discussion topic list. Defaults to "position".
              type: string
              enum:
              - position
              - recent_activity
              - title
            scope:
              required: false
              displayName: scope
              description: |
                Only return discussion topics in the given state(s). Defaults to including

                all topics. Filtering is done after pagination, so pages

                may be smaller than requested if topics are filtered.

                Can pass multiple states as comma separated string.
              type: string
              enum:
              - locked
              - unlocked
              - pinned
              - unpinned
            only_announcements:
              required: false
              displayName: only_announcements
              description: Return announcements instead of discussion topics. Defaults to false
              type: boolean
            filter_by:
              required: false
              displayName: filter_by
              description: The state of the discussion topic to return. Currently only supports unread state.
              type: string
              enum:
              - all
              - unread
            search_term:
              required: false
              displayName: search_term
              description: The partial title of the discussion topics to match and return.
              type: string
            exclude_context_module_locked_topics:
              required: false
              displayName: exclude_context_module_locked_topics
              description: |
                For students, exclude topics that are locked by module progression.

                Defaults to false.
              type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_new_discussion_topic_groups
          description: Create a new discussion topic
          body:
            multipart/form-data:
              type: object
              properties:
                title:
                  required: false
                  displayName: title
                  description: no description
                  type: string
                message:
                  required: false
                  displayName: message
                  description: no description
                  type: string
                discussion_type:
                  required: false
                  displayName: discussion_type
                  description: The type of discussion. Defaults to side_comment if not value is given. Accepted values are 'side_comment', for discussions that only allow one level of nested comments, and 'threaded' for fully threaded discussions.
                  type: string
                  enum:
                  - side_comment
                  - threaded
                published:
                  required: false
                  displayName: published
                  description: |
                    Whether this topic is published (true) or draft state (false). Only

                    teachers and TAs have the ability to create draft state topics.
                  type: boolean
                delayed_post_at:
                  required: false
                  displayName: delayed_post_at
                  description: If a timestamp is given, the topic will not be published until that time.
                  type: object
                allow_rating:
                  required: false
                  displayName: allow_rating
                  description: Whether or not users can rate entries in this topic.
                  type: boolean
                lock_at:
                  required: false
                  displayName: lock_at
                  description: |
                    If a timestamp is given, the topic will be scheduled to lock at the

                    provided timestamp. If the timestamp is in the past, the topic will be

                    locked.
                  type: object
                podcast_enabled:
                  required: false
                  displayName: podcast_enabled
                  description: If true, the topic will have an associated podcast feed.
                  type: boolean
                podcast_has_student_posts:
                  required: false
                  displayName: podcast_has_student_posts
                  description: |
                    If true, the podcast will include posts from students as well. Implies

                    podcast_enabled.
                  type: boolean
                require_initial_post:
                  required: false
                  displayName: require_initial_post
                  description: |
                    If true then a user may not respond to other replies until that user has

                    made an initial reply. Defaults to false.
                  type: boolean
                assignment:
                  required: false
                  displayName: assignment
                  description: |
                    To create an assignment discussion, pass the assignment parameters as a

                    sub-object. See the {api:AssignmentsApiController#create Create an Assignment API}

                    for the available parameters. The name parameter will be ignored, as it's

                    taken from the discussion title. If you want to make a discussion that was

                    an assignment NOT an assignment, pass set_assignment = false as part of

                    the assignment object
                  type: object
                is_announcement:
                  required: false
                  displayName: is_announcement
                  description: |
                    If true, this topic is an announcement. It will appear in the

                    announcement's section rather than the discussions section. This requires

                    announcment-posting permissions.
                  type: boolean
                pinned:
                  required: false
                  displayName: pinned
                  description: If true, this topic will be listed in the "Pinned Discussion" section
                  type: boolean
                position_after:
                  required: false
                  displayName: position_after
                  description: |
                    By default, discussions are sorted chronologically by creation date, you

                    can pass the id of another topic to have this one show up after the other

                    when they are listed.
                  type: string
                group_category_id:
                  required: false
                  displayName: group_category_id
                  description: |
                    If present, the topic will become a group discussion assigned

                    to the group.
                  type: integer
                  format: int64
                only_graders_can_rate:
                  required: false
                  displayName: only_graders_can_rate
                  description: If true, only graders will be allowed to rate entries.
                  type: boolean
                sort_by_rating:
                  required: false
                  displayName: sort_by_rating
                  description: If true, entries will be sorted by rating.
                  type: boolean
                attachment:
                  required: false
                  displayName: attachment
                  description: |
                    A multipart/form-data form-field-style attachment.

                    Attachments larger than 1 kilobyte are subject to quota restrictions.
                  type: file
                specific_sections:
                  required: false
                  displayName: specific_sections
                  description: |
                    A comma-separated list of sections ids to which the discussion topic

                    should be made specific too.  If it is not desired to make the discussion

                    topic specific to sections, then this parameter may be omitted or set to

                    "all".  Can only be present only on announcements and only those that are

                    for a course (as opposed to a group).
                  type: string
          responses:
            200:
              description: Success
        /{topic_id}:
          uriParameters:
            topic_id:
              required: true
              displayName: topic_id
              description: ID
              type: string
          put:
            displayName: update_topic_groups
            description: Update a topic
            body:
              multipart/form-data:
                type: object
                properties:
                  title:
                    required: false
                    displayName: title
                    description: no description
                    type: string
                  message:
                    required: false
                    displayName: message
                    description: no description
                    type: string
                  discussion_type:
                    required: false
                    displayName: discussion_type
                    description: The type of discussion. Defaults to side_comment if not value is given. Accepted values are 'side_comment', for discussions that only allow one level of nested comments, and 'threaded' for fully threaded discussions.
                    type: string
                    enum:
                    - side_comment
                    - threaded
                  published:
                    required: false
                    displayName: published
                    description: |
                      Whether this topic is published (true) or draft state (false). Only

                      teachers and TAs have the ability to create draft state topics.
                    type: boolean
                  delayed_post_at:
                    required: false
                    displayName: delayed_post_at
                    description: If a timestamp is given, the topic will not be published until that time.
                    type: object
                  lock_at:
                    required: false
                    displayName: lock_at
                    description: |
                      If a timestamp is given, the topic will be scheduled to lock at the

                      provided timestamp. If the timestamp is in the past, the topic will be

                      locked.
                    type: object
                  podcast_enabled:
                    required: false
                    displayName: podcast_enabled
                    description: If true, the topic will have an associated podcast feed.
                    type: boolean
                  podcast_has_student_posts:
                    required: false
                    displayName: podcast_has_student_posts
                    description: |
                      If true, the podcast will include posts from students as well. Implies

                      podcast_enabled.
                    type: boolean
                  require_initial_post:
                    required: false
                    displayName: require_initial_post
                    description: |
                      If true then a user may not respond to other replies until that user has

                      made an initial reply. Defaults to false.
                    type: boolean
                  assignment:
                    required: false
                    displayName: assignment
                    description: |
                      To create an assignment discussion, pass the assignment parameters as a

                      sub-object. See the {api:AssignmentsApiController#create Create an Assignment API}

                      for the available parameters. The name parameter will be ignored, as it's

                      taken from the discussion title. If you want to make a discussion that was

                      an assignment NOT an assignment, pass set_assignment = false as part of

                      the assignment object
                    type: object
                  is_announcement:
                    required: false
                    displayName: is_announcement
                    description: |
                      If true, this topic is an announcement. It will appear in the

                      announcement's section rather than the discussions section. This requires

                      announcment-posting permissions.
                    type: boolean
                  pinned:
                    required: false
                    displayName: pinned
                    description: If true, this topic will be listed in the "Pinned Discussion" section
                    type: boolean
                  position_after:
                    required: false
                    displayName: position_after
                    description: |
                      By default, discussions are sorted chronologically by creation date, you

                      can pass the id of another topic to have this one show up after the other

                      when they are listed.
                    type: string
                  group_category_id:
                    required: false
                    displayName: group_category_id
                    description: |
                      If present, the topic will become a group discussion assigned

                      to the group.
                    type: integer
                    format: int64
                  allow_rating:
                    required: false
                    displayName: allow_rating
                    description: If true, users will be allowed to rate entries.
                    type: boolean
                  only_graders_can_rate:
                    required: false
                    displayName: only_graders_can_rate
                    description: If true, only graders will be allowed to rate entries.
                    type: boolean
                  sort_by_rating:
                    required: false
                    displayName: sort_by_rating
                    description: If true, entries will be sorted by rating.
                    type: boolean
                  specific_sections:
                    required: false
                    displayName: specific_sections
                    description: |
                      A comma-separated list of sections ids to which the discussion topic

                      should be made specific too.  If it is not desired to make the discussion

                      topic specific to sections, then this parameter may be omitted or set to

                      "all".  Can only be present only on announcements and only those that are

                      for a course (as opposed to a group).
                    type: string
            responses:
              200:
                description: Success
          delete:
            displayName: delete_topic_groups
            description: Delete a topic
            responses:
              200:
                description: Success
          get:
            displayName: get_single_topic_groups
            description: Get a single topic
            queryParameters:
              include:
                required: false
                displayName: include
                description: |
                  If "all_dates" is passed, all dates associated with graded discussions'

                  assignments will be included.

                  if "sections" is passed, includes the course sections that are associated

                  with the topic, if the topic is specific to certain sections of the course.

                  If "sections_user_count" is passed, then:
                    (a) If sections were asked for *and* the topic is specific to certain
                        course sections, includes the number of users in each
                        section. (as part of the section json asked for above)
                    (b) Else, includes at the root level the total number of users in the
                        topic's context (group or course) that the topic applies to.
                  If "overrides" is passed, the overrides for the assignment will be included
                type: string
                enum:
                - all_dates
                - sections
                - sections_user_count
                - overrides
            responses:
              200:
                description: Success
          /view:
            get:
              displayName: get_full_topic_groups
              description: Get the full topic
              responses:
                200:
                  description: Success
          /entries:
            post:
              displayName: post_entry_groups
              description: Post an entry
              body:
                multipart/form-data:
                  type: object
                  properties:
                    message:
                      required: false
                      displayName: message
                      description: The body of the entry.
                      type: string
                    attachment:
                      required: false
                      displayName: attachment
                      description: |
                        a multipart/form-data form-field-style

                        attachment. Attachments larger than 1 kilobyte are subject to quota

                        restrictions.
                      type: string
              responses:
                200:
                  description: Success
            get:
              displayName: list_topic_entries_groups
              description: List topic entries
              responses:
                200:
                  description: Success
            /{id}:
              uriParameters:
                id:
                  required: true
                  displayName: id
                  description: ID
                  type: string
              put:
                displayName: update_entry_groups
                description: Update an entry
                body:
                  multipart/form-data:
                    type: object
                    properties:
                      message:
                        required: false
                        displayName: message
                        description: The updated body of the entry.
                        type: string
                responses:
                  200:
                    description: Success
              delete:
                displayName: delete_entry_groups
                description: Delete an entry
                responses:
                  200:
                    description: Success
            /{entry_id}:
              uriParameters:
                entry_id:
                  required: true
                  displayName: entry_id
                  description: ID
                  type: string
              /replies:
                post:
                  displayName: post_reply_groups
                  description: Post a reply
                  body:
                    multipart/form-data:
                      type: object
                      properties:
                        message:
                          required: false
                          displayName: message
                          description: The body of the entry.
                          type: string
                        attachment:
                          required: false
                          displayName: attachment
                          description: |
                            a multipart/form-data form-field-style

                            attachment. Attachments larger than 1 kilobyte are subject to quota

                            restrictions.
                          type: string
                  responses:
                    200:
                      description: Success
                get:
                  displayName: list_entry_replies_groups
                  description: List entry replies
                  responses:
                    200:
                      description: Success
              /read:
                put:
                  displayName: mark_entry_as_read_groups
                  description: Mark entry as read
                  body:
                    multipart/form-data:
                      type: object
                      properties:
                        forced_read_state:
                          required: false
                          displayName: forced_read_state
                          description: |
                            A boolean value to set the entry's forced_read_state. No change is made if

                            this argument is not specified.
                          type: boolean
                  responses:
                    200:
                      description: Success
                delete:
                  displayName: mark_entry_as_unread_groups
                  description: Mark entry as unread
                  queryParameters:
                    forced_read_state:
                      required: false
                      displayName: forced_read_state
                      description: |
                        A boolean value to set the entry's forced_read_state. No change is made if

                        this argument is not specified.
                      type: boolean
                  responses:
                    200:
                      description: Success
              /rating:
                post:
                  displayName: rate_entry_groups
                  description: Rate entry
                  body:
                    multipart/form-data:
                      type: object
                      properties:
                        rating:
                          required: false
                          displayName: rating
                          description: A rating to set on this entry. Only 0 and 1 are accepted.
                          type: integer
                          format: int64
                  responses:
                    200:
                      description: Success
          /entry_list:
            get:
              displayName: list_entries_groups
              description: List entries
              queryParameters:
                ids:
                  required: false
                  displayName: ids
                  description: |
                    A list of entry ids to retrieve. Entries will be returned in id order,

                    smallest id first.
                  type: array
                  items:
                    type: string
              responses:
                200:
                  description: Success
          /read:
            put:
              displayName: mark_topic_as_read_groups
              description: Mark topic as read
              responses:
                200:
                  description: Success
            delete:
              displayName: mark_topic_as_unread_groups
              description: Mark topic as unread
              responses:
                200:
                  description: Success
          /read_all:
            put:
              displayName: mark_all_entries_as_read_groups
              description: Mark all entries as read
              body:
                multipart/form-data:
                  type: object
                  properties:
                    forced_read_state:
                      required: false
                      displayName: forced_read_state
                      description: |
                        A boolean value to set all of the entries' forced_read_state. No change

                        is made if this argument is not specified.
                      type: boolean
              responses:
                200:
                  description: Success
            delete:
              displayName: mark_all_entries_as_unread_groups
              description: Mark all entries as unread
              queryParameters:
                forced_read_state:
                  required: false
                  displayName: forced_read_state
                  description: |
                    A boolean value to set all of the entries' forced_read_state. No change is

                    made if this argument is not specified.
                  type: boolean
              responses:
                200:
                  description: Success
          /subscribed:
            put:
              displayName: subscribe_to_topic_groups
              description: Subscribe to a topic
              responses:
                200:
                  description: Success
            delete:
              displayName: unsubscribe_from_topic_groups
              description: Unsubscribe from a topic
              responses:
                200:
                  description: Success
        /reorder:
          post:
            displayName: reorder_pinned_topics_groups
            description: Reorder pinned topics
            body:
              multipart/form-data:
                type: object
                properties:
                  order:
                    required: true
                    displayName: order
                    description: |
                      The ids of the pinned discussion topics in the desired order.

                      (For example, "order=104,102,103".)
                    type: array
                    items:
                      type: integer
                      format: int32
            responses:
              200:
                description: Success
      /external_tools:
        get:
          displayName: list_external_tools_groups
          description: List external tools
          queryParameters:
            search_term:
              required: false
              displayName: search_term
              description: The partial name of the tools to match and return.
              type: string
            selectable:
              required: false
              displayName: selectable
              description: If true, then only tools that are meant to be selectable are returned
              type: boolean
            include_parents:
              required: false
              displayName: include_parents
              description: If true, then include tools installed in all accounts above the current context
              type: boolean
          responses:
            200:
              description: Success
      /files:
        get:
          displayName: list_files_groups
          description: List files
          queryParameters:
            content_types:
              required: false
              displayName: content_types
              description: |
                Filter results by content-type. You can specify type/subtype pairs (e.g.,

                'image/jpeg'), or simply types (e.g., 'image', which will match

                'image/gif', 'image/jpeg', etc.).
              type: array
              items:
                type: string
            search_term:
              required: false
              displayName: search_term
              description: The partial name of the files to match and return.
              type: string
            include:
              required: false
              displayName: include
              description: |
                Array of additional information to include.


                "user":: the user who uploaded the file or last edited its content

                "usage_rights":: copyright and license information for the file (see UsageRights)
              type: string
              enum:
              - user
            only:
              required: false
              displayName: only
              description: |
                Array of information to restrict to. Overrides include[]


                "names":: only returns file name information
              type: array
              items:
                type: object
            sort:
              required: false
              displayName: sort
              description: Sort results by this field. Defaults to 'name'. Note that `sort=user` implies `include[]=user`.
              type: string
              enum:
              - name
              - size
              - created_at
              - updated_at
              - content_type
              - user
            order:
              required: false
              displayName: order
              description: The sorting order. Defaults to 'asc'.
              type: string
              enum:
              - asc
              - desc
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: array
                  items:
                    type: file
        post:
          displayName: upload_file
          description: Upload a file
          responses:
            200:
              description: Success
        /quota:
          get:
            displayName: get_quota_information_groups
            description: Get quota information
            responses:
              200:
                description: Success
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_file_groups
            description: Get file
            queryParameters:
              include:
                required: false
                displayName: include
                description: |
                  Array of additional information to include.


                  "user":: the user who uploaded the file or last edited its content

                  "usage_rights":: copyright and license information for the file (see UsageRights)
                type: string
                enum:
                - user
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: file
      /folders:
        get:
          displayName: list_all_folders_groups
          description: List all folders
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_folder_groups
          description: Create folder
          body:
            multipart/form-data:
              type: object
              properties:
                name:
                  required: true
                  displayName: name
                  description: The name of the folder
                  type: string
                parent_folder_id:
                  required: false
                  displayName: parent_folder_id
                  description: The id of the folder to store the file in. If this and parent_folder_path are sent an error will be returned. If neither is given, a default folder will be used.
                  type: string
                parent_folder_path:
                  required: false
                  displayName: parent_folder_path
                  description: The path of the folder to store the new folder in. The path separator is the forward slash `/`, never a back slash. The parent folder will be created if it does not already exist. This parameter only applies to new folders in a context that has folders, such as a user, a course, or a group. If this and parent_folder_id are sent an error will be returned. If neither is given, a default folder will be used.
                  type: string
                lock_at:
                  required: false
                  displayName: lock_at
                  description: The datetime to lock the folder at
                  type: object
                unlock_at:
                  required: false
                  displayName: unlock_at
                  description: The datetime to unlock the folder at
                  type: object
                locked:
                  required: false
                  displayName: locked
                  description: Flag the folder as locked
                  type: boolean
                hidden:
                  required: false
                  displayName: hidden
                  description: Flag the folder as hidden
                  type: boolean
                position:
                  required: false
                  displayName: position
                  description: Set an explicit sort position for the folder
                  type: integer
                  format: int64
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /by_path:
          get:
            displayName: resolve_path_groups
            description: Resolve path
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /*full_path:
            get:
              displayName: resolve_path_groups_full_path
              description: Resolve path
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_folder_groups
            description: Get folder
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /usage_rights:
        put:
          displayName: set_usage_rights_groups
          description: Set usage rights
          body:
            multipart/form-data:
              type: object
              properties:
                file_ids:
                  required: true
                  displayName: file_ids
                  description: List of ids of files to set usage rights for.
                  type: array
                  items:
                    type: string
                usage_rights[use_justification]:
                  required: true
                  displayName: usage_rights[use_justification]
                  description: The intellectual property justification for using the files in Canvas
                  type: string
                  enum:
                  - own_copyright
                  - used_by_permission
                  - fair_use
                  - public_domain
                  - creative_commons
                folder_ids:
                  required: false
                  displayName: folder_ids
                  description: |
                    List of ids of folders to search for files to set usage rights for.

                    Note that new files uploaded to these folders do not automatically inherit these rights.
                  type: array
                  items:
                    type: string
                publish:
                  required: false
                  displayName: publish
                  description: Whether the file(s) or folder(s) should be published on save, provided that usage rights have been specified (set to `true` to publish on save).
                  type: boolean
                usage_rights[legal_copyright]:
                  required: false
                  displayName: usage_rights[legal_copyright]
                  description: The legal copyright line for the files
                  type: string
                usage_rights[license]:
                  required: false
                  displayName: usage_rights[license]
                  description: The license that applies to the files. See the {api:UsageRightsController#licenses List licenses endpoint} for the supported license types.
                  type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        delete:
          displayName: remove_usage_rights_groups
          description: Remove usage rights
          queryParameters:
            file_ids:
              required: true
              displayName: file_ids
              description: List of ids of files to remove associated usage rights from.
              type: array
              items:
                type: string
            folder_ids:
              required: false
              displayName: folder_ids
              description: List of ids of folders. Usage rights will be removed from all files in these folders.
              type: array
              items:
                type: string
          responses:
            200:
              description: Success
      /content_licenses:
        get:
          displayName: list_licenses_groups
          description: List licenses
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /invite:
        post:
          displayName: invite_others_to_group
          description: Invite others to a group
          body:
            multipart/form-data:
              type: object
              properties:
                invitees:
                  required: true
                  displayName: invitees
                  description: An array of email addresses to be sent invitations.
                  type: array
                  items:
                    type: string
          responses:
            200:
              description: Success
      /users:
        get:
          displayName: list_group_s_users
          description: List group's users
          queryParameters:
            search_term:
              required: false
              displayName: search_term
              description: |
                The partial name or full ID of the users to match and return in the

                results list. Must be at least 3 characters.
              type: string
            include:
              required: false
              displayName: include
              description: "- \"avatar_url\": Include users' avatar_urls."
              type: string
              enum:
              - avatar_url
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{user_id}:
          uriParameters:
            user_id:
              required: true
              displayName: user_id
              description: ID
              type: string
          get:
            displayName: get_single_group_membership_users
            description: Get a single group membership
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: update_membership_users
            description: Update a membership
            body:
              multipart/form-data:
                type: object
                properties:
                  workflow_state:
                    required: false
                    displayName: workflow_state
                    description: Currently, the only allowed value is "accepted"
                    type: string
                    enum:
                    - accepted
                  moderator:
                    required: false
                    displayName: moderator
                    description: no description
                    type: string
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: leave_group_users
            description: Leave a group
            responses:
              200:
                description: Success
      /preview_html:
        post:
          displayName: preview_processed_html
          description: Preview processed html
          body:
            multipart/form-data:
              type: object
              properties:
                html:
                  required: false
                  displayName: html
                  description: The html content to process
                  type: string
          responses:
            200:
              description: Success
      /activity_stream:
        get:
          displayName: group_activity_stream
          description: Group activity stream
          responses:
            200:
              description: Success
        /summary:
          get:
            displayName: group_activity_stream_summary
            description: Group activity stream summary
            responses:
              200:
                description: Success
      /permissions:
        get:
          displayName: permissions
          description: Permissions
          queryParameters:
            permissions:
              required: false
              displayName: permissions
              description: |
                List of permissions to check against the authenticated user.

                Permission names are documented in the {api:RoleOverridesController#add_role Create a role} endpoint.
              type: array
              items:
                type: string
          responses:
            200:
              description: Success
      /memberships:
        get:
          displayName: list_group_memberships
          description: List group memberships
          queryParameters:
            filter_states:
              required: false
              displayName: filter_states
              description: |
                Only list memberships with the given workflow_states. By default it will

                return all memberships.
              type: string
              enum:
              - accepted
              - invited
              - requested
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_membership
          description: Create a membership
          body:
            multipart/form-data:
              type: object
              properties:
                user_id:
                  required: false
                  displayName: user_id
                  description: no description
                  type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{membership_id}:
          uriParameters:
            membership_id:
              required: true
              displayName: membership_id
              description: ID
              type: string
          get:
            displayName: get_single_group_membership_memberships
            description: Get a single group membership
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: update_membership_memberships
            description: Update a membership
            body:
              multipart/form-data:
                type: object
                properties:
                  workflow_state:
                    required: false
                    displayName: workflow_state
                    description: Currently, the only allowed value is "accepted"
                    type: string
                    enum:
                    - accepted
                  moderator:
                    required: false
                    displayName: moderator
                    description: no description
                    type: string
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: leave_group_memberships
            description: Leave a group
            responses:
              200:
                description: Success
      /front_page:
        get:
          displayName: show_front_page_groups
          description: Show front page
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        put:
          displayName: update_create_front_page_groups
          description: Update/create front page
          body:
            multipart/form-data:
              type: object
              properties:
                wiki_page[title]:
                  required: false
                  displayName: wiki_page[title]
                  description: |
                    The title for the new page. NOTE: changing a page's title will change its

                    url. The updated url will be returned in the result.
                  type: string
                wiki_page[body]:
                  required: false
                  displayName: wiki_page[body]
                  description: The content for the new page.
                  type: string
                wiki_page[editing_roles]:
                  required: false
                  displayName: wiki_page[editing_roles]
                  description: |
                    Which user roles are allowed to edit this page. Any combination

                    of these roles is allowed (separated by commas).


                    "teachers":: Allows editing by teachers in the course.

                    "students":: Allows editing by students in the course.

                    "members":: For group wikis, allows editing by members of the group.

                    "public":: Allows editing by any user.
                  type: string
                wiki_page[notify_of_update]:
                  required: false
                  displayName: wiki_page[notify_of_update]
                  description: Whether participants should be notified when this page changes.
                  type: boolean
                wiki_page[published]:
                  required: false
                  displayName: wiki_page[published]
                  description: Whether the page is published (true) or draft state (false).
                  type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /pages:
        get:
          displayName: list_pages_groups
          description: List pages
          queryParameters:
            sort:
              required: false
              displayName: sort
              description: Sort results by this field.
              type: string
              enum:
              - title
              - created_at
              - updated_at
            order:
              required: false
              displayName: order
              description: The sorting order. Defaults to 'asc'.
              type: string
              enum:
              - asc
              - desc
            search_term:
              required: false
              displayName: search_term
              description: The partial title of the pages to match and return.
              type: string
            published:
              required: false
              displayName: published
              description: |
                If true, include only published paqes. If false, exclude published

                pages. If not present, do not filter on published status.
              type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_page_groups
          description: Create page
          body:
            multipart/form-data:
              type: object
              properties:
                wiki_page[title]:
                  required: true
                  displayName: wiki_page[title]
                  description: The title for the new page.
                  type: string
                wiki_page[body]:
                  required: false
                  displayName: wiki_page[body]
                  description: The content for the new page.
                  type: string
                wiki_page[editing_roles]:
                  required: false
                  displayName: wiki_page[editing_roles]
                  description: |
                    Which user roles are allowed to edit this page. Any combination

                    of these roles is allowed (separated by commas).


                    "teachers":: Allows editing by teachers in the course.

                    "students":: Allows editing by students in the course.

                    "members":: For group wikis, allows editing by members of the group.

                    "public":: Allows editing by any user.
                  type: string
                wiki_page[notify_of_update]:
                  required: false
                  displayName: wiki_page[notify_of_update]
                  description: Whether participants should be notified when this page changes.
                  type: boolean
                wiki_page[published]:
                  required: false
                  displayName: wiki_page[published]
                  description: Whether the page is published (true) or draft state (false).
                  type: boolean
                wiki_page[front_page]:
                  required: false
                  displayName: wiki_page[front_page]
                  description: Set an unhidden page as the front page (if true)
                  type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{url}:
          uriParameters:
            url:
              required: true
              displayName: url
              description: ID
              type: string
          get:
            displayName: show_page_groups
            description: Show page
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: update_create_page_groups
            description: Update/create page
            body:
              multipart/form-data:
                type: object
                properties:
                  wiki_page[title]:
                    required: false
                    displayName: wiki_page[title]
                    description: |
                      The title for the new page. NOTE: changing a page's title will change its

                      url. The updated url will be returned in the result.
                    type: string
                  wiki_page[body]:
                    required: false
                    displayName: wiki_page[body]
                    description: The content for the new page.
                    type: string
                  wiki_page[editing_roles]:
                    required: false
                    displayName: wiki_page[editing_roles]
                    description: |
                      Which user roles are allowed to edit this page. Any combination

                      of these roles is allowed (separated by commas).


                      "teachers":: Allows editing by teachers in the course.

                      "students":: Allows editing by students in the course.

                      "members":: For group wikis, allows editing by members of the group.

                      "public":: Allows editing by any user.
                    type: string
                  wiki_page[notify_of_update]:
                    required: false
                    displayName: wiki_page[notify_of_update]
                    description: Whether participants should be notified when this page changes.
                    type: boolean
                  wiki_page[published]:
                    required: false
                    displayName: wiki_page[published]
                    description: Whether the page is published (true) or draft state (false).
                    type: boolean
                  wiki_page[front_page]:
                    required: false
                    displayName: wiki_page[front_page]
                    description: Set an unhidden page as the front page (if true)
                    type: boolean
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: delete_page_groups
            description: Delete page
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /revisions:
            get:
              displayName: list_revisions_groups
              description: List revisions
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            /latest:
              get:
                displayName: show_revision_groups_latest
                description: Show revision
                queryParameters:
                  summary:
                    required: false
                    displayName: summary
                    description: If set, exclude page content from results
                    type: boolean
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
            /{revision_id}:
              uriParameters:
                revision_id:
                  required: true
                  displayName: revision_id
                  description: ID
                  type: string
              get:
                displayName: show_revision_groups_revision_id
                description: Show revision
                queryParameters:
                  summary:
                    required: false
                    displayName: summary
                    description: If set, exclude page content from results
                    type: boolean
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
              post:
                displayName: revert_to_revision_groups
                description: Revert to revision
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
      /tabs:
        get:
          displayName: list_available_tabs_for_course_or_group_groups
          description: List available tabs for a course or group
          queryParameters:
            include:
              required: false
              displayName: include
              description: '"external":: Optionally include external tool tabs in the returned list of tabs (Only has effect for courses, not groups)'
              type: string
              enum:
              - external
          responses:
            200:
              description: Success
  /jwts:
    post:
      displayName: create_jwt
      description: Create JWT
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
    /refresh:
      post:
        displayName: refresh_jwt
        description: Refresh JWT
        body:
          multipart/form-data:
            type: object
            properties:
              jwt:
                required: true
                displayName: jwt
                description: |
                  An existing JWT token to be refreshed. The new token will have

                  the same context and workflows as the existing token.
                type: string
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
  /outcomes/{id}:
    uriParameters:
      id:
        required: true
        displayName: id
        description: ID
        type: string
    get:
      displayName: show_outcome
      description: Show an outcome
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
    put:
      displayName: update_outcome
      description: Update an outcome
      body:
        multipart/form-data:
          type: object
          properties:
            title:
              required: false
              displayName: title
              description: The new outcome title.
              type: string
            display_name:
              required: false
              displayName: display_name
              description: |
                A friendly name shown in reports for outcomes with cryptic titles,

                such as common core standards names.
              type: string
            description:
              required: false
              displayName: description
              description: The new outcome description.
              type: string
            vendor_guid:
              required: false
              displayName: vendor_guid
              description: A custom GUID for the learning standard.
              type: string
            mastery_points:
              required: false
              displayName: mastery_points
              description: The new mastery threshold for the embedded rubric criterion.
              type: integer
              format: int64
            ratings[description]:
              required: false
              displayName: ratings[description]
              description: The description of a new rating level for the embedded rubric criterion.
              type: array
              items:
                type: string
            ratings[points]:
              required: false
              displayName: ratings[points]
              description: |
                The points corresponding to a new rating level for the embedded rubric

                criterion.
              type: array
              items:
                type: integer
                format: int32
            calculation_method:
              required: false
              displayName: calculation_method
              description: The new calculation method.
              type: string
              enum:
              - decaying_average
              - n_mastery
              - latest
              - highest
            calculation_int:
              required: false
              displayName: calculation_int
              description: The new calculation int.  Only applies if the calculation_method is "decaying_average" or "n_mastery"
              type: integer
              format: int64
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
  /planner_notes:
    get:
      displayName: list_planner_notes
      description: List planner notes
      queryParameters:
        start_date:
          required: false
          displayName: start_date
          description: |
            Only return notes with todo dates since the start_date (inclusive).

            No default. The value should be formatted as: yyyy-mm-dd or

            ISO 8601 YYYY-MM-DDTHH:MM:SSZ.
          type: object
        end_date:
          required: false
          displayName: end_date
          description: |
            Only return notes with todo dates before the end_date (inclusive).

            No default. The value should be formatted as: yyyy-mm-dd or

            ISO 8601 YYYY-MM-DDTHH:MM:SSZ.

            If end_date and start_date are both specified and equivalent,

            then only notes with todo dates on that day are returned.
          type: object
        context_codes:
          required: false
          displayName: context_codes
          description: |
            List of context codes of courses whose notes you want to see.

            If not specified, defaults to all contexts that the user belongs to.

            The format of this field is the context type, followed by an

            underscore, followed by the context id. For example: course_42

            Including a code matching the user's own context code (e.g. user_1)

            will include notes that are not associated with any particular course.
          type: array
          items:
            type: string
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
    post:
      displayName: create_planner_note
      description: Create a planner note
      body:
        multipart/form-data:
          type: object
          properties:
            title:
              required: false
              displayName: title
              description: The title of the planner note.
              type: string
            details:
              required: false
              displayName: details
              description: Text of the planner note.
              type: string
            todo_date:
              required: false
              displayName: todo_date
              description: |
                The date where this planner note should appear in the planner.

                The value should be formatted as: yyyy-mm-dd.
              type: object
            course_id:
              required: false
              displayName: course_id
              description: |
                The ID of the course to associate with the planner note. The caller must be able to view the course in order to

                associate it with a planner note.
              type: integer
              format: int64
            linked_object_type:
              required: false
              displayName: linked_object_type
              description: |
                The type of a learning object to link to this planner note. Must be used in conjunction wtih linked_object_id

                and course_id. Valid linked_object_type values are:

                'announcement', 'assignment', 'discussion_topic', 'wiki_page', 'quiz'
              type: string
            linked_object_id:
              required: false
              displayName: linked_object_id
              description: |
                The id of a learning object to link to this planner note. Must be used in conjunction with linked_object_type

                and course_id. The object must be in the same course as specified by course_id. If the title argument is not

                provided, the planner note will use the learning object's title as its title. Only one planner note may be

                linked to a specific learning object.
              type: integer
              format: int64
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
    /{id}:
      uriParameters:
        id:
          required: true
          displayName: id
          description: ID
          type: string
      get:
        displayName: show_planner_note
        description: Show a planner note
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      put:
        displayName: update_planner_note
        description: Update a planner note
        body:
          multipart/form-data:
            type: object
            properties:
              title:
                required: false
                displayName: title
                description: The title of the planner note.
                type: string
              details:
                required: false
                displayName: details
                description: Text of the planner note.
                type: string
              todo_date:
                required: false
                displayName: todo_date
                description: |
                  The date where this planner note should appear in the planner.

                  The value should be formatted as: yyyy-mm-dd.
                type: object
              course_id:
                required: false
                displayName: course_id
                description: |
                  The ID of the course to associate with the planner note. The caller must be able to view the course in order to

                  associate it with a planner note. Use a null or empty value to remove a planner note from a course. Note that if

                  the planner note is linked to a learning object, its course_id cannot be changed.
                type: integer
                format: int64
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      delete:
        displayName: delete_planner_note
        description: Delete a planner note
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
  /polls:
    get:
      displayName: list_polls
      description: List polls
      responses:
        200:
          description: Success
    post:
      displayName: create_single_poll
      description: Create a single poll
      body:
        multipart/form-data:
          type: object
          properties:
            polls[question]:
              required: true
              displayName: polls[question]
              description: The title of the poll.
              type: array
              items:
                type: string
            polls[description]:
              required: false
              displayName: polls[description]
              description: A brief description or instructions for the poll.
              type: array
              items:
                type: string
      responses:
        200:
          description: Success
    /{id}:
      uriParameters:
        id:
          required: true
          displayName: id
          description: ID
          type: string
      get:
        displayName: get_single_poll
        description: Get a single poll
        responses:
          200:
            description: Success
      put:
        displayName: update_single_poll
        description: Update a single poll
        body:
          multipart/form-data:
            type: object
            properties:
              polls[question]:
                required: true
                displayName: polls[question]
                description: The title of the poll.
                type: array
                items:
                  type: string
              polls[description]:
                required: false
                displayName: polls[description]
                description: A brief description or instructions for the poll.
                type: array
                items:
                  type: string
        responses:
          200:
            description: Success
      delete:
        displayName: delete_poll
        description: Delete a poll
        responses:
          200:
            description: Success
    /{poll_id}:
      uriParameters:
        poll_id:
          required: true
          displayName: poll_id
          description: ID
          type: string
      /poll_sessions:
        get:
          displayName: list_poll_sessions_for_poll
          description: List poll sessions for a poll
          responses:
            200:
              description: Success
        post:
          displayName: create_single_poll_session
          description: Create a single poll session
          body:
            multipart/form-data:
              type: object
              properties:
                poll_sessions[course_id]:
                  required: true
                  displayName: poll_sessions[course_id]
                  description: The id of the course this session is associated with.
                  type: array
                  items:
                    type: integer
                    format: int32
                poll_sessions[course_section_id]:
                  required: false
                  displayName: poll_sessions[course_section_id]
                  description: The id of the course section this session is associated with.
                  type: array
                  items:
                    type: integer
                    format: int32
                poll_sessions[has_public_results]:
                  required: false
                  displayName: poll_sessions[has_public_results]
                  description: Whether or not results are viewable by students.
                  type: array
                  items:
                    type: boolean
          responses:
            200:
              description: Success
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_results_for_single_poll_session
            description: Get the results for a single poll session
            responses:
              200:
                description: Success
          put:
            displayName: update_single_poll_session
            description: Update a single poll session
            body:
              multipart/form-data:
                type: object
                properties:
                  poll_sessions[course_id]:
                    required: false
                    displayName: poll_sessions[course_id]
                    description: The id of the course this session is associated with.
                    type: array
                    items:
                      type: integer
                      format: int32
                  poll_sessions[course_section_id]:
                    required: false
                    displayName: poll_sessions[course_section_id]
                    description: The id of the course section this session is associated with.
                    type: array
                    items:
                      type: integer
                      format: int32
                  poll_sessions[has_public_results]:
                    required: false
                    displayName: poll_sessions[has_public_results]
                    description: Whether or not results are viewable by students.
                    type: array
                    items:
                      type: boolean
            responses:
              200:
                description: Success
          delete:
            displayName: delete_poll_session
            description: Delete a poll session
            responses:
              200:
                description: Success
          /open:
            get:
              displayName: open_poll_session
              description: Open a poll session
              responses:
                200:
                  description: Success
          /close:
            get:
              displayName: close_opened_poll_session
              description: Close an opened poll session
              responses:
                200:
                  description: Success
        /{poll_session_id}:
          uriParameters:
            poll_session_id:
              required: true
              displayName: poll_session_id
              description: ID
              type: string
          /poll_submissions:
            post:
              displayName: create_single_poll_submission
              description: Create a single poll submission
              body:
                multipart/form-data:
                  type: object
                  properties:
                    poll_submissions[poll_choice_id]:
                      required: true
                      displayName: poll_submissions[poll_choice_id]
                      description: The chosen poll choice for this submission.
                      type: array
                      items:
                        type: integer
                        format: int32
              responses:
                200:
                  description: Success
            /{id}:
              uriParameters:
                id:
                  required: true
                  displayName: id
                  description: ID
                  type: string
              get:
                displayName: get_single_poll_submission
                description: Get a single poll submission
                responses:
                  200:
                    description: Success
      /poll_choices:
        get:
          displayName: list_poll_choices_in_poll
          description: List poll choices in a poll
          responses:
            200:
              description: Success
        post:
          displayName: create_single_poll_choice
          description: Create a single poll choice
          body:
            multipart/form-data:
              type: object
              properties:
                poll_choices[text]:
                  required: true
                  displayName: poll_choices[text]
                  description: The descriptive text of the poll choice.
                  type: array
                  items:
                    type: string
                poll_choices[is_correct]:
                  required: false
                  displayName: poll_choices[is_correct]
                  description: Whether this poll choice is considered correct or not. Defaults to false.
                  type: array
                  items:
                    type: boolean
                poll_choices[position]:
                  required: false
                  displayName: poll_choices[position]
                  description: The order this poll choice should be returned in the context it's sibling poll choices.
                  type: array
                  items:
                    type: integer
                    format: int32
          responses:
            200:
              description: Success
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_single_poll_choice
            description: Get a single poll choice
            responses:
              200:
                description: Success
          put:
            displayName: update_single_poll_choice
            description: Update a single poll choice
            body:
              multipart/form-data:
                type: object
                properties:
                  poll_choices[text]:
                    required: true
                    displayName: poll_choices[text]
                    description: The descriptive text of the poll choice.
                    type: array
                    items:
                      type: string
                  poll_choices[is_correct]:
                    required: false
                    displayName: poll_choices[is_correct]
                    description: Whether this poll choice is considered correct or not.  Defaults to false.
                    type: array
                    items:
                      type: boolean
                  poll_choices[position]:
                    required: false
                    displayName: poll_choices[position]
                    description: The order this poll choice should be returned in the context it's sibling poll choices.
                    type: array
                    items:
                      type: integer
                      format: int32
            responses:
              200:
                description: Success
          delete:
            displayName: delete_poll_choice
            description: Delete a poll choice
            responses:
              200:
                description: Success
  /progress/{id}:
    uriParameters:
      id:
        required: true
        displayName: id
        description: ID
        type: string
    get:
      displayName: query_progress
      description: Query progress
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
  /quiz_submissions/{quiz_submission_id}/questions:
    uriParameters:
      quiz_submission_id:
        required: true
        displayName: quiz_submission_id
        description: ID
        type: string
    get:
      displayName: get_all_quiz_submission_questions
      description: Get all quiz submission questions.
      queryParameters:
        include:
          required: false
          displayName: include
          description: Associations to include with the quiz submission question.
          type: string
          enum:
          - quiz_question
      responses:
        200:
          description: Success
    post:
      displayName: answering_questions
      description: Answering questions
      body:
        multipart/form-data:
          type: object
          properties:
            attempt:
              required: true
              displayName: attempt
              description: |
                The attempt number of the quiz submission being taken. Note that this

                must be the latest attempt index, as questions for earlier attempts can

                not be modified.
              type: integer
              format: int64
            validation_token:
              required: true
              displayName: validation_token
              description: |
                The unique validation token you received when the Quiz Submission was

                created.
              type: string
            access_code:
              required: false
              displayName: access_code
              description: Access code for the Quiz, if any.
              type: string
            quiz_questions:
              required: false
              displayName: quiz_questions
              description: |
                Set of question IDs and the answer value.


                See {Appendix: Question Answer Formats} for the accepted answer formats

                for each question type.
              type: array
              items:
                type: object
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
    /{id}:
      uriParameters:
        id:
          required: true
          displayName: id
          description: ID
          type: string
      /flag:
        put:
          displayName: flagging_question
          description: Flagging a question.
          body:
            multipart/form-data:
              type: object
              properties:
                attempt:
                  required: true
                  displayName: attempt
                  description: |
                    The attempt number of the quiz submission being taken. Note that this

                    must be the latest attempt index, as questions for earlier attempts can

                    not be modified.
                  type: integer
                  format: int64
                validation_token:
                  required: true
                  displayName: validation_token
                  description: |
                    The unique validation token you received when the Quiz Submission was

                    created.
                  type: string
                access_code:
                  required: false
                  displayName: access_code
                  description: Access code for the Quiz, if any.
                  type: string
          responses:
            200:
              description: Success
      /unflag:
        put:
          displayName: unflagging_question
          description: Unflagging a question.
          body:
            multipart/form-data:
              type: object
              properties:
                attempt:
                  required: true
                  displayName: attempt
                  description: |
                    The attempt number of the quiz submission being taken. Note that this

                    must be the latest attempt index, as questions for earlier attempts can

                    not be modified.
                  type: integer
                  format: int64
                validation_token:
                  required: true
                  displayName: validation_token
                  description: |
                    The unique validation token you received when the Quiz Submission was

                    created.
                  type: string
                access_code:
                  required: false
                  displayName: access_code
                  description: Access code for the Quiz, if any.
                  type: string
          responses:
            200:
              description: Success
  /shared_brand_configs/{id}:
    uriParameters:
      id:
        required: true
        displayName: id
        description: ID
        type: string
    delete:
      displayName: un_share_brandconfig_theme
      description: Un-share a BrandConfig (Theme)
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
  /epub_exports:
    get:
      displayName: list_courses_with_their_latest_epub_export
      description: List courses with their latest ePub export
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
  /users:
    /activity_stream:
      get:
        displayName: list_activity_stream_activity_stream
        description: List the activity stream
        queryParameters:
          only_active_courses:
            required: false
            displayName: only_active_courses
            description: If true, will only return objects for courses the user is actively participating in
            type: boolean
        responses:
          200:
            description: Success
    /{id}:
      uriParameters:
        id:
          required: true
          displayName: id
          description: ID
          type: string
      get:
        displayName: show_user_details
        description: Show user details
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      put:
        displayName: edit_user
        description: Edit a user
        body:
          multipart/form-data:
            type: object
            properties:
              user[name]:
                required: false
                displayName: user[name]
                description: The full name of the user. This name will be used by teacher for grading.
                type: string
              user[short_name]:
                required: false
                displayName: user[short_name]
                description: User's name as it will be displayed in discussions, messages, and comments.
                type: string
              user[sortable_name]:
                required: false
                displayName: user[sortable_name]
                description: User's name as used to sort alphabetically in lists.
                type: string
              user[time_zone]:
                required: false
                displayName: user[time_zone]
                description: |
                  The time zone for the user. Allowed time zones are

                  {http://www.iana.org/time-zones IANA time zones} or friendlier

                  {http://api.rubyonrails.org/classes/ActiveSupport/TimeZone.html Ruby on Rails time zones}.
                type: string
              user[email]:
                required: false
                displayName: user[email]
                description: The default email address of the user.
                type: string
              user[locale]:
                required: false
                displayName: user[locale]
                description: |
                  The user's preferred language, from the list of languages Canvas supports.

                  This is in RFC-5646 format.
                type: string
              user[avatar][token]:
                required: false
                displayName: user[avatar][token]
                description: |
                  A unique representation of the avatar record to assign as the user's

                  current avatar. This token can be obtained from the user avatars endpoint.

                  This supersedes the user [avatar] [url] argument, and if both are included

                  the url will be ignored. Note: this is an internal representation and is

                  subject to change without notice. It should be consumed with this api

                  endpoint and used in the user update endpoint, and should not be

                  constructed by the client.
                type: string
              user[avatar][url]:
                required: false
                displayName: user[avatar][url]
                description: |
                  To set the user's avatar to point to an external url, do not include a

                  token and instead pass the url here. Warning: For maximum compatibility,

                  please use 128 px square images.
                type: string
              user[title]:
                required: false
                displayName: user[title]
                description: |
                  Sets a title on the user profile. (See {api:ProfileController#settings Get user profile}.)

                  Profiles must be enabled on the root account.
                type: string
              user[bio]:
                required: false
                displayName: user[bio]
                description: |
                  Sets a bio on the user profile. (See {api:ProfileController#settings Get user profile}.)

                  Profiles must be enabled on the root account.
                type: string
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      /settings:
        get:
          displayName: update_user_settings
          description: Update user settings.
          queryParameters:
            manual_mark_as_read:
              required: false
              displayName: manual_mark_as_read
              description: |
                If true, require user to manually mark discussion posts as read (don't

                auto-mark as read).
              type: boolean
            collapse_global_nav:
              required: false
              displayName: collapse_global_nav
              description: If true, the user's page loads with the global navigation collapsed
              type: boolean
          responses:
            200:
              description: Success
      /colors:
        get:
          displayName: get_custom_colors
          description: Get custom colors
          responses:
            200:
              description: Success
        /{asset_string}:
          uriParameters:
            asset_string:
              required: true
              displayName: asset_string
              description: ID
              type: string
          get:
            displayName: get_custom_color
            description: Get custom color
            responses:
              200:
                description: Success
          put:
            displayName: update_custom_color
            description: Update custom color
            body:
              multipart/form-data:
                type: object
                properties:
                  hexcode:
                    required: false
                    displayName: hexcode
                    description: |
                      The hexcode of the color to set for the context, if you choose to pass the

                      hexcode as a query parameter rather than in the request body you should

                      NOT include the '#' unless you escape it first.
                    type: string
            responses:
              200:
                description: Success
      /dashboard_positions:
        get:
          displayName: get_dashboard_positions
          description: Get dashboard positions
          responses:
            200:
              description: Success
        put:
          displayName: update_dashboard_positions
          description: Update dashboard positions
          responses:
            200:
              description: Success
      /split:
        post:
          displayName: split_merged_users_into_separate_users
          description: Split merged users into separate users
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /merge_into:
        /{destination_user_id}:
          uriParameters:
            destination_user_id:
              required: true
              displayName: destination_user_id
              description: ID
              type: string
          put:
            displayName: merge_user_into_another_user_destination_user_id
            description: Merge user into another user
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
        /accounts/{destination_account_id}/users/{destination_user_id}:
          uriParameters:
            destination_account_id:
              required: true
              displayName: destination_account_id
              description: ID
              type: string
            destination_user_id:
              required: true
              displayName: destination_user_id
              description: ID
              type: string
          put:
            displayName: merge_user_into_another_user_accounts
            description: Merge user into another user
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
    /{user_id}:
      uriParameters:
        user_id:
          required: true
          displayName: user_id
          description: ID
          type: string
      /calendar_events:
        get:
          displayName: list_calendar_events_for_user
          description: List calendar events for a user
          queryParameters:
            type:
              required: false
              displayName: type
              description: Defaults to "event"
              type: string
            start_date:
              required: false
              displayName: start_date
              description: |
                Only return events since the start_date (inclusive).

                Defaults to today. The value should be formatted as: yyyy-mm-dd or ISO 8601 YYYY-MM-DDTHH:MM:SSZ.
              type: object
            end_date:
              required: false
              displayName: end_date
              description: |
                Only return events before the end_date (inclusive).

                Defaults to start_date. The value should be formatted as: yyyy-mm-dd or ISO 8601 YYYY-MM-DDTHH:MM:SSZ.

                If end_date is the same as start_date, then only events on that day are

                returned.
              type: object
            undated:
              required: false
              displayName: undated
              description: |
                Defaults to false (dated events only).

                If true, only return undated events and ignore start_date and end_date.
              type: boolean
            all_events:
              required: false
              displayName: all_events
              description: |
                Defaults to false (uses start_date, end_date, and undated criteria).

                If true, all events are returned, ignoring start_date, end_date, and undated criteria.
              type: boolean
            context_codes:
              required: false
              displayName: context_codes
              description: |
                List of context codes of courses/groups/users whose events you want to see.

                If not specified, defaults to the current user (i.e personal calendar,

                no course/group events). Limited to 10 context codes, additional ones are

                ignored. The format of this field is the context type, followed by an

                underscore, followed by the context id. For example: course_42
              type: array
              items:
                type: string
            excludes:
              required: false
              displayName: excludes
              description: Array of attributes to exclude. Possible values are "description", "child_events" and "assignment"
              type: array
              items:
                type: object
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /communication_channels:
        get:
          displayName: list_user_communication_channels
          description: List user communication channels
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_communication_channel
          description: Create a communication channel
          body:
            multipart/form-data:
              type: object
              properties:
                communication_channel[address]:
                  required: true
                  displayName: communication_channel[address]
                  description: An email address or SMS number. Not required for "push" type channels.
                  type: string
                communication_channel[type]:
                  required: true
                  displayName: communication_channel[type]
                  description: |
                    The type of communication channel.


                    In order to enable push notification support, the server must be

                    properly configured (via sns.yml) to communicate with Amazon

                    Simple Notification Services, and the developer key used to create

                    the access token from this request must have an SNS ARN configured on

                    it.
                  type: string
                  enum:
                  - email
                  - sms
                  - push
                communication_channel[token]:
                  required: false
                  displayName: communication_channel[token]
                  description: |
                    A registration id, device token, or equivalent token given to an app when

                    registering with a push notification provider. Only valid for "push" type channels.
                  type: string
                skip_confirmation:
                  required: false
                  displayName: skip_confirmation
                  description: |
                    Only valid for site admins and account admins making requests; If true, the channel is

                    automatically validated and no confirmation email or SMS is sent.

                    Otherwise, the user must respond to a confirmation message to confirm the

                    channel.
                  type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          delete:
            displayName: delete_communication_channel_id
            description: Delete a communication channel
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
        /{type}/{address}:
          uriParameters:
            type:
              required: true
              displayName: type
              description: ID
              type: string
            address:
              required: true
              displayName: address
              description: ID
              type: string
          delete:
            displayName: delete_communication_channel_type
            description: Delete a communication channel
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /notification_preferences:
            get:
              displayName: list_preferences_type
              description: List preferences
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            /{notification}:
              uriParameters:
                notification:
                  required: true
                  displayName: notification
                  description: ID
                  type: string
              get:
                displayName: get_preference_type
                description: Get a preference
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
        /{communication_channel_id}:
          uriParameters:
            communication_channel_id:
              required: true
              displayName: communication_channel_id
              description: ID
              type: string
          /notification_preferences:
            get:
              displayName: list_preferences_communication_channel_id
              description: List preferences
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            /{notification}:
              uriParameters:
                notification:
                  required: true
                  displayName: notification
                  description: ID
                  type: string
              get:
                displayName: get_preference_communication_channel_id
                description: Get a preference
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
          /notification_preference_categories:
            get:
              displayName: list_of_preference_categories
              description: List of preference categories
              responses:
                200:
                  description: Success
      /content_exports:
        get:
          displayName: list_content_exports_users
          description: List content exports
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: export_content_users
          description: Export content
          body:
            multipart/form-data:
              type: object
              properties:
                export_type:
                  required: true
                  displayName: export_type
                  description: |
                    "common_cartridge":: Export the contents of the course in the Common Cartridge (.imscc) format

                    "qti":: Export quizzes from a course in the QTI format

                    "zip":: Export files from a course, group, or user in a zip file
                  type: string
                  enum:
                  - common_cartridge
                  - qti
                  - zip
                skip_notifications:
                  required: false
                  displayName: skip_notifications
                  description: "Don't send the notifications about the export to the user. Default: false"
                  type: boolean
                select:
                  required: false
                  displayName: select
                  description: |
                    The select parameter allows exporting specific data. The keys are object types like 'files',

                    'folders', 'pages', etc. The value for each key is a list of object ids. An id can be an

                    integer or a string.


                    Multiple object types can be selected in the same call. However, not all object types are

                    valid for every export_type. Common Cartridge supports all object types. Zip and QTI only

                    support the object types as described below.


                    "folders":: Also supported for zip export_type.

                    "files":: Also supported for zip export_type.

                    "quizzes":: Also supported for qti export_type.
                  type: object
                  additionalProperties: true
                  properties: {}
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: show_content_export_users
            description: Show content export
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /content_migrations:
        get:
          displayName: list_content_migrations_users
          description: List content migrations
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_content_migration_users
          description: Create a content migration
          body:
            multipart/form-data:
              type: object
              properties:
                migration_type:
                  required: true
                  displayName: migration_type
                  description: |
                    The type of the migration. Use the

                    {api:ContentMigrationsController#available_migrators Migrator} endpoint to

                    see all available migrators. Default allowed values:

                    canvas_cartridge_importer, common_cartridge_importer,

                    course_copy_importer, zip_file_importer, qti_converter, moodle_converter
                  type: string
                pre_attachment[name]:
                  required: false
                  displayName: pre_attachment[name]
                  description: |
                    Required if uploading a file. This is the first step in uploading a file

                    to the content migration. See the {file:file_uploads.html File Upload

                    Documentation} for details on the file upload workflow.
                  type: string
                pre_attachment[*]:
                  required: false
                  displayName: pre_attachment[*]
                  description: |
                    Other file upload properties, See {file:file_uploads.html File Upload

                    Documentation}
                  type: string
                settings[file_url]:
                  required: false
                  displayName: settings[file_url]
                  description: A URL to download the file from. Must not require authentication.
                  type: string
                settings[source_course_id]:
                  required: false
                  displayName: settings[source_course_id]
                  description: |
                    The course to copy from for a course copy migration. (required if doing

                    course copy)
                  type: string
                settings[folder_id]:
                  required: false
                  displayName: settings[folder_id]
                  description: The folder to unzip the .zip file into for a zip_file_import.
                  type: string
                settings[overwrite_quizzes]:
                  required: false
                  displayName: settings[overwrite_quizzes]
                  description: |
                    Whether to overwrite quizzes with the same identifiers between content

                    packages.
                  type: boolean
                settings[question_bank_id]:
                  required: false
                  displayName: settings[question_bank_id]
                  description: |
                    The existing question bank ID to import questions into if not specified in

                    the content package.
                  type: integer
                  format: int64
                settings[question_bank_name]:
                  required: false
                  displayName: settings[question_bank_name]
                  description: |
                    The question bank to import questions into if not specified in the content

                    package, if both bank id and name are set, id will take precedence.
                  type: string
                date_shift_options[shift_dates]:
                  required: false
                  displayName: date_shift_options[shift_dates]
                  description: Whether to shift dates in the copied course
                  type: boolean
                date_shift_options[old_start_date]:
                  required: false
                  displayName: date_shift_options[old_start_date]
                  description: The original start date of the source content/course
                  type: object
                date_shift_options[old_end_date]:
                  required: false
                  displayName: date_shift_options[old_end_date]
                  description: The original end date of the source content/course
                  type: object
                date_shift_options[new_start_date]:
                  required: false
                  displayName: date_shift_options[new_start_date]
                  description: The new start date for the content/course
                  type: object
                date_shift_options[new_end_date]:
                  required: false
                  displayName: date_shift_options[new_end_date]
                  description: The new end date for the source content/course
                  type: object
                date_shift_options[day_substitutions][X]:
                  required: false
                  displayName: date_shift_options[day_substitutions][X]
                  description: |
                    Move anything scheduled for day 'X' to the specified day. (0-Sunday,

                    1-Monday, 2-Tuesday, 3-Wednesday, 4-Thursday, 5-Friday, 6-Saturday)
                  type: integer
                  format: int64
                date_shift_options[remove_dates]:
                  required: false
                  displayName: date_shift_options[remove_dates]
                  description: |
                    Whether to remove dates in the copied course. Cannot be used

                    in conjunction with *shift_dates*.
                  type: boolean
                selective_import:
                  required: false
                  displayName: selective_import
                  description: |
                    If set, perform a selective import instead of importing all content.

                    The migration will identify the contents of the package and then stop

                    in the +waiting_for_select+ workflow state. At this point, use the

                    {api:ContentMigrationsController#content_list List items endpoint}

                    to enumerate the contents of the package, identifying the copy

                    parameters for the desired content. Then call the

                    {api:ContentMigrationsController#update Update endpoint} and provide these

                    copy parameters to start the import.
                  type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{content_migration_id}/migration_issues:
          uriParameters:
            content_migration_id:
              required: true
              displayName: content_migration_id
              description: ID
              type: string
          get:
            displayName: list_migration_issues_users
            description: List migration issues
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /{id}:
            uriParameters:
              id:
                required: true
                displayName: id
                description: ID
                type: string
            get:
              displayName: get_migration_issue_users
              description: Get a migration issue
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            put:
              displayName: update_migration_issue_users
              description: Update a migration issue
              body:
                multipart/form-data:
                  type: object
                  properties:
                    workflow_state:
                      required: true
                      displayName: workflow_state
                      description: Set the workflow_state of the issue.
                      type: string
                      enum:
                      - active
                      - resolved
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_content_migration_users
            description: Get a content migration
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: update_content_migration_users
            description: Update a content migration
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /selective_data:
            get:
              displayName: list_items_for_selective_import_users
              description: List items for selective import
              queryParameters:
                type:
                  required: false
                  displayName: type
                  description: The type of content to enumerate.
                  type: string
                  enum:
                  - context_modules
                  - assignments
                  - quizzes
                  - assessment_question_banks
                  - discussion_topics
                  - wiki_pages
                  - context_external_tools
                  - tool_profiles
                  - announcements
                  - calendar_events
                  - rubrics
                  - groups
                  - learning_outcomes
                  - attachments
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
        /migrators:
          get:
            displayName: list_migration_systems_users
            description: List Migration Systems
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /courses:
        get:
          displayName: list_courses_for_user
          description: List courses for a user
          queryParameters:
            include:
              required: false
              displayName: include
              description: |
                - "needs_grading_count": Optional information to include with each Course.
                  When needs_grading_count is given, and the current user has grading
                  rights, the total number of submissions needing grading for all
                  assignments is returned.
                - "syllabus_body": Optional information to include with each Course.
                  When syllabus_body is given the user-generated html for the course
                  syllabus is returned.
                - "public_description": Optional information to include with each Course.
                  When public_description is given the user-generated text for the course
                  public description is returned.
                - "total_scores": Optional information to include with each Course.
                  When total_scores is given, any student enrollments will also
                  include the fields 'computed_current_score', 'computed_final_score',
                  'computed_current_grade', and 'computed_final_grade' (see Enrollment
                  documentation for more information on these fields). This argument
                  is ignored if the course is configured to hide final grades.
                - "current_grading_period_scores": Optional information to include with
                  each Course. When current_grading_period_scores is given and total_scores
                  is given, any student enrollments will also include the fields
                  'has_grading_periods',
                  'totals_for_all_grading_periods_option', 'current_grading_period_title',
                  'current_grading_period_id', current_period_computed_current_score',
                  'current_period_computed_final_score',
                  'current_period_computed_current_grade', and
                  'current_period_computed_final_grade', as well as (if the user has permission)
                  'current_period_unposted_current_score',
                  'current_period_unposted_final_score',
                  'current_period_unposted_current_grade', and
                  'current_period_unposted_final_grade' (see Enrollment documentation for
                  more information on these fields). In addition, when this argument is
                  passed, the course will have a 'has_grading_periods' attribute
                  on it. This argument is ignored if the course is configured to hide final
                  grades or if the total_scores argument is not included.
                - "term": Optional information to include with each Course. When
                  term is given, the information for the enrollment term for each course
                  is returned.
                - "account": Optional information to include with each Course. When
                  account is given, the account json for each course is returned.
                - "course_progress": Optional information to include with each Course.
                  When course_progress is given, each course will include a
                  'course_progress' object with the fields: 'requirement_count', an integer
                  specifying the total number of requirements in the course,
                  'requirement_completed_count', an integer specifying the total number of
                  requirements in this course that have been completed, and
                  'next_requirement_url', a string url to the next requirement item, and
                  'completed_at', the date the course was completed (null if incomplete).
                  'next_requirement_url' will be null if all requirements have been
                  completed or the current module does not require sequential progress.
                  "course_progress" will return an error message if the course is not
                  module based or the user is not enrolled as a student in the course.
                - "sections": Section enrollment information to include with each Course.
                  Returns an array of hashes containing the section ID (id), section name
                  (name), start and end dates (start_at, end_at), as well as the enrollment
                  type (enrollment_role, e.g. 'StudentEnrollment').
                - "storage_quota_used_mb": The amount of storage space used by the files in this course

                - "total_students": Optional information to include with each Course.
                  Returns an integer for the total amount of active and invited students.
                - "passback_status": Include the grade passback_status

                - "favorites": Optional information to include with each Course.
                  Indicates if the user has marked the course as a favorite course.
                - "teachers": Teacher information to include with each Course.
                  Returns an array of hashes containing the {api:Users:UserDisplay UserDisplay} information
                  for each teacher in the course.
                - "observed_users": Optional information to include with each Course.
                  Will include data for observed users if the current user has an
                  observer enrollment.
                - "tabs": Optional information to include with each Course.
                  Will include the list of tabs configured for each course.  See the
                  {api:TabsController#index List available tabs API} for more information.
                - "course_image": Optional course image data for when there is a course image
                  and the course image feature flag has been enabled
                - "concluded": Optional information to include with each Course. Indicates whether
                  the course has been concluded, taking course and term dates into account.
              type: string
              enum:
              - needs_grading_count
              - syllabus_body
              - public_description
              - total_scores
              - current_grading_period_scores
              - term
              - account
              - course_progress
              - sections
              - storage_quota_used_mb
              - total_students
              - passback_status
              - favorites
              - teachers
              - observed_users
              - course_image
              - concluded
            state:
              required: false
              displayName: state
              description: |
                If set, only return courses that are in the given state(s).

                By default, "available" is returned for students and observers, and

                anything except "deleted", for all other enrollment types
              type: string
              enum:
              - unpublished
              - available
              - completed
              - deleted
            enrollment_state:
              required: false
              displayName: enrollment_state
              description: |
                When set, only return courses where the user has an enrollment with the given state.

                This will respect section/course/term date overrides.
              type: string
              enum:
              - active
              - invited_or_pending
              - completed
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{course_id}/assignments:
          uriParameters:
            course_id:
              required: true
              displayName: course_id
              description: ID
              type: string
          get:
            displayName: list_assignments_for_user
            description: List assignments for user
            responses:
              200:
                description: Success
      /enrollments:
        get:
          displayName: list_enrollments_users
          description: List enrollments
          queryParameters:
            type:
              required: false
              displayName: type
              description: |
                A list of enrollment types to return. Accepted values are

                'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment',

                'DesignerEnrollment', and 'ObserverEnrollment.' If omitted, all enrollment

                types are returned. This argument is ignored if `role` is given.
              type: array
              items:
                type: string
            role:
              required: false
              displayName: role
              description: |
                A list of enrollment roles to return. Accepted values include course-level

                roles created by the {api:RoleOverridesController#add_role Add Role API}

                as well as the base enrollment types accepted by the `type` argument above.
              type: array
              items:
                type: string
            state:
              required: false
              displayName: state
              description: |
                Filter by enrollment state. If omitted, 'active' and 'invited' enrollments

                are returned. When querying a user's enrollments (either via user_id

                argument or via user enrollments endpoint), the following additional

                synthetic states are supported: "current_and_invited"|"current_and_future"|"current_and_concluded"
              type: string
              enum:
              - active
              - invited
              - creation_pending
              - deleted
              - rejected
              - completed
              - inactive
            include:
              required: false
              displayName: include
              description: |
                Array of additional information to include on the enrollment or user records.

                "avatar_url" and "group_ids" will be returned on the user record.
              type: string
              enum:
              - avatar_url
              - group_ids
              - locked
              - observed_users
              - can_be_removed
            grading_period_id:
              required: false
              displayName: grading_period_id
              description: |
                Return grades for the given grading_period.  If this parameter is not

                specified, the returned grades will be for the whole course.
              type: integer
              format: int64
            enrollment_term_id:
              required: false
              displayName: enrollment_term_id
              description: |
                Returns only enrollments for the specified enrollment term. This parameter

                only applies to the user enrollments path. May pass the ID from the

                enrollment terms api or the SIS id prepended with 'sis_term_id:'.
              type: integer
              format: int64
            sis_account_id:
              required: false
              displayName: sis_account_id
              description: |
                Returns only enrollments for the specified SIS account ID(s). Does not

                look into sub_accounts. May pass in array or string.
              type: array
              items:
                type: string
            sis_course_id:
              required: false
              displayName: sis_course_id
              description: |
                Returns only enrollments matching the specified SIS course ID(s).

                May pass in array or string.
              type: array
              items:
                type: string
            sis_section_id:
              required: false
              displayName: sis_section_id
              description: |
                Returns only section enrollments matching the specified SIS section ID(s).

                May pass in array or string.
              type: array
              items:
                type: string
            sis_user_id:
              required: false
              displayName: sis_user_id
              description: |
                Returns only enrollments for the specified SIS user ID(s). May pass in

                array or string.
              type: array
              items:
                type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /features:
        get:
          displayName: list_features_users
          description: List features
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /enabled:
          get:
            displayName: list_enabled_features_users
            description: List enabled features
            responses:
              200:
                description: Success
        /flags/{feature}:
          uriParameters:
            feature:
              required: true
              displayName: feature
              description: ID
              type: string
          get:
            displayName: get_feature_flag_users
            description: Get feature flag
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: set_feature_flag_users
            description: Set feature flag
            body:
              multipart/form-data:
                type: object
                properties:
                  state:
                    required: false
                    displayName: state
                    description: |
                      "off":: The feature is not available for the course, user, or account and sub-accounts.

                      "allowed":: (valid only on accounts) The feature is off in the account, but may be enabled in
                                  sub-accounts and courses by setting a feature flag on the sub-account or course.
                      "on":: The feature is turned on unconditionally for the user, course, or account and sub-accounts.
                    type: string
                    enum:
                    - off
                    - allowed
                    - on
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: remove_feature_flag_users
            description: Remove feature flag
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /files:
        get:
          displayName: list_files_users
          description: List files
          queryParameters:
            content_types:
              required: false
              displayName: content_types
              description: |
                Filter results by content-type. You can specify type/subtype pairs (e.g.,

                'image/jpeg'), or simply types (e.g., 'image', which will match

                'image/gif', 'image/jpeg', etc.).
              type: array
              items:
                type: string
            search_term:
              required: false
              displayName: search_term
              description: The partial name of the files to match and return.
              type: string
            include:
              required: false
              displayName: include
              description: |
                Array of additional information to include.


                "user":: the user who uploaded the file or last edited its content

                "usage_rights":: copyright and license information for the file (see UsageRights)
              type: string
              enum:
              - user
            only:
              required: false
              displayName: only
              description: |
                Array of information to restrict to. Overrides include[]


                "names":: only returns file name information
              type: array
              items:
                type: object
            sort:
              required: false
              displayName: sort
              description: Sort results by this field. Defaults to 'name'. Note that `sort=user` implies `include[]=user`.
              type: string
              enum:
              - name
              - size
              - created_at
              - updated_at
              - content_type
              - user
            order:
              required: false
              displayName: order
              description: The sorting order. Defaults to 'asc'.
              type: string
              enum:
              - asc
              - desc
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: array
                  items:
                    type: file
        post:
          displayName: upload_file
          description: Upload a file
          responses:
            200:
              description: Success
        /quota:
          get:
            displayName: get_quota_information_users
            description: Get quota information
            responses:
              200:
                description: Success
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_file_users
            description: Get file
            queryParameters:
              include:
                required: false
                displayName: include
                description: |
                  Array of additional information to include.


                  "user":: the user who uploaded the file or last edited its content

                  "usage_rights":: copyright and license information for the file (see UsageRights)
                type: string
                enum:
                - user
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: file
      /folders:
        get:
          displayName: list_all_folders_users
          description: List all folders
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_folder_users
          description: Create folder
          body:
            multipart/form-data:
              type: object
              properties:
                name:
                  required: true
                  displayName: name
                  description: The name of the folder
                  type: string
                parent_folder_id:
                  required: false
                  displayName: parent_folder_id
                  description: The id of the folder to store the file in. If this and parent_folder_path are sent an error will be returned. If neither is given, a default folder will be used.
                  type: string
                parent_folder_path:
                  required: false
                  displayName: parent_folder_path
                  description: The path of the folder to store the new folder in. The path separator is the forward slash `/`, never a back slash. The parent folder will be created if it does not already exist. This parameter only applies to new folders in a context that has folders, such as a user, a course, or a group. If this and parent_folder_id are sent an error will be returned. If neither is given, a default folder will be used.
                  type: string
                lock_at:
                  required: false
                  displayName: lock_at
                  description: The datetime to lock the folder at
                  type: object
                unlock_at:
                  required: false
                  displayName: unlock_at
                  description: The datetime to unlock the folder at
                  type: object
                locked:
                  required: false
                  displayName: locked
                  description: Flag the folder as locked
                  type: boolean
                hidden:
                  required: false
                  displayName: hidden
                  description: Flag the folder as hidden
                  type: boolean
                position:
                  required: false
                  displayName: position
                  description: Set an explicit sort position for the folder
                  type: integer
                  format: int64
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /by_path:
          get:
            displayName: resolve_path_users
            description: Resolve path
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          /*full_path:
            get:
              displayName: resolve_path_users_full_path
              description: Resolve path
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_folder_users
            description: Get folder
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /usage_rights:
        put:
          displayName: set_usage_rights_users
          description: Set usage rights
          body:
            multipart/form-data:
              type: object
              properties:
                file_ids:
                  required: true
                  displayName: file_ids
                  description: List of ids of files to set usage rights for.
                  type: array
                  items:
                    type: string
                usage_rights[use_justification]:
                  required: true
                  displayName: usage_rights[use_justification]
                  description: The intellectual property justification for using the files in Canvas
                  type: string
                  enum:
                  - own_copyright
                  - used_by_permission
                  - fair_use
                  - public_domain
                  - creative_commons
                folder_ids:
                  required: false
                  displayName: folder_ids
                  description: |
                    List of ids of folders to search for files to set usage rights for.

                    Note that new files uploaded to these folders do not automatically inherit these rights.
                  type: array
                  items:
                    type: string
                publish:
                  required: false
                  displayName: publish
                  description: Whether the file(s) or folder(s) should be published on save, provided that usage rights have been specified (set to `true` to publish on save).
                  type: boolean
                usage_rights[legal_copyright]:
                  required: false
                  displayName: usage_rights[legal_copyright]
                  description: The legal copyright line for the files
                  type: string
                usage_rights[license]:
                  required: false
                  displayName: usage_rights[license]
                  description: The license that applies to the files. See the {api:UsageRightsController#licenses List licenses endpoint} for the supported license types.
                  type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        delete:
          displayName: remove_usage_rights_users
          description: Remove usage rights
          queryParameters:
            file_ids:
              required: true
              displayName: file_ids
              description: List of ids of files to remove associated usage rights from.
              type: array
              items:
                type: string
            folder_ids:
              required: false
              displayName: folder_ids
              description: List of ids of folders. Usage rights will be removed from all files in these folders.
              type: array
              items:
                type: string
          responses:
            200:
              description: Success
      /content_licenses:
        get:
          displayName: list_licenses_users
          description: List licenses
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /logins:
        get:
          displayName: list_user_logins_users
          description: List user logins
          responses:
            200:
              description: Success
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          delete:
            displayName: delete_user_login
            description: Delete a user login
            responses:
              200:
                description: Success
      /observees:
        get:
          displayName: list_observees
          description: List observees
          queryParameters:
            include:
              required: false
              displayName: include
              description: '- "avatar_url": Optionally include avatar_url.'
              type: string
              enum:
              - avatar_url
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: add_observee_with_credentials
          description: Add an observee with credentials
          body:
            multipart/form-data:
              type: object
              properties:
                observee[unique_id]:
                  required: false
                  displayName: observee[unique_id]
                  description: The login id for the user to observe.  Required if access_token is omitted.
                  type: string
                observee[password]:
                  required: false
                  displayName: observee[password]
                  description: The password for the user to observe. Required if access_token is omitted.
                  type: string
                access_token:
                  required: false
                  displayName: access_token
                  description: The access token for the user to observe.  Required if <tt>observee[unique_id]</tt> or <tt>observee[password]</tt> are omitted.
                  type: string
                pairing_code:
                  required: false
                  displayName: pairing_code
                  description: A generated pairing code for the user to observe. Required if the Observer pairing code feature flag is enabled
                  type: string
                root_account_id:
                  required: false
                  displayName: root_account_id
                  description: |
                    The ID for the root account to associate with the observation link.

                    Defaults to the current domain account.

                    If 'all' is specified, a link will be created for each root account associated

                    to both the observer and observee.
                  type: integer
                  format: int64
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{observee_id}:
          uriParameters:
            observee_id:
              required: true
              displayName: observee_id
              description: ID
              type: string
          get:
            displayName: show_observee
            description: Show an observee
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: add_observee
            description: Add an observee
            body:
              multipart/form-data:
                type: object
                properties:
                  root_account_id:
                    required: false
                    displayName: root_account_id
                    description: |
                      The ID for the root account to associate with the observation link.

                      If not specified, a link will be created for each root account associated

                      to both the observer and observee.
                    type: integer
                    format: int64
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: remove_observee
            description: Remove an observee
            queryParameters:
              root_account_id:
                required: false
                displayName: root_account_id
                description: If specified, only removes the link for the given root account
                type: integer
                format: int64
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /missing_submissions:
        get:
          displayName: list_missing_submissions
          description: List Missing Submissions
          queryParameters:
            include:
              required: false
              displayName: include
              description: |
                "planner_overrides":: Optionally include the assignment's associated planner override, if it exists, for the current user.
                                      These will be returned under a +planner_override+ key
                "course":: Optionally include the assignments' courses
              type: string
              enum:
              - planner_overrides
              - course
            filter:
              required: false
              displayName: filter
              description: '"submittable":: Only return assignments that the current user can submit (i.e. filter out locked assignments)'
              type: string
              enum:
              - submittable
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /profile:
        get:
          displayName: get_user_profile
          description: Get user profile
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /avatars:
        get:
          displayName: list_avatar_options
          description: List avatar options
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /page_views:
        get:
          displayName: list_user_page_views
          description: List user page views
          queryParameters:
            start_time:
              required: false
              displayName: start_time
              description: The beginning of the time range from which you want page views.
              type: object
            end_time:
              required: false
              displayName: end_time
              description: The end of the time range from which you want page views.
              type: object
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /custom_data:
        put:
          displayName: store_custom_data
          description: Store custom data
          body:
            multipart/form-data:
              type: object
              properties:
                ns:
                  required: true
                  displayName: ns
                  description: |
                    The namespace under which to store the data.  This should be something other

                    Canvas API apps aren't likely to use, such as a reverse DNS for your organization.
                  type: string
                data:
                  required: true
                  displayName: data
                  description: |
                    The data you want to store for the user, at the specified scope.  If the data is

                    composed of (possibly nested) JSON objects, scopes will be generated for the (nested)

                    keys (see examples).
                  type: object
          responses:
            200:
              description: Success
        get:
          displayName: load_custom_data
          description: Load custom data
          queryParameters:
            ns:
              required: true
              displayName: ns
              description: |
                The namespace from which to retrieve the data.  This should be something other

                Canvas API apps aren't likely to use, such as a reverse DNS for your organization.
              type: string
          responses:
            200:
              description: Success
        delete:
          displayName: delete_custom_data
          description: Delete custom data
          queryParameters:
            ns:
              required: true
              displayName: ns
              description: |
                The namespace from which to delete the data.  This should be something other

                Canvas API apps aren't likely to use, such as a reverse DNS for your organization.
              type: string
          responses:
            200:
              description: Success
    /self:
      /bookmarks:
        get:
          displayName: list_bookmarks
          description: List bookmarks
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_bookmark
          description: Create bookmark
          body:
            multipart/form-data:
              type: object
              properties:
                name:
                  required: false
                  displayName: name
                  description: The name of the bookmark
                  type: string
                url:
                  required: false
                  displayName: url
                  description: The url of the bookmark
                  type: string
                position:
                  required: false
                  displayName: position
                  description: The position of the bookmark. Defaults to the bottom.
                  type: integer
                  format: int64
                data:
                  required: false
                  displayName: data
                  description: The data associated with the bookmark
                  type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          get:
            displayName: get_bookmark
            description: Get bookmark
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: update_bookmark
            description: Update bookmark
            body:
              multipart/form-data:
                type: object
                properties:
                  name:
                    required: false
                    displayName: name
                    description: The name of the bookmark
                    type: string
                  url:
                    required: false
                    displayName: url
                    description: The url of the bookmark
                    type: string
                  position:
                    required: false
                    displayName: position
                    description: The position of the bookmark. Defaults to the bottom.
                    type: integer
                    format: int64
                  data:
                    required: false
                    displayName: data
                    description: The data associated with the bookmark
                    type: string
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: delete_bookmark
            description: Delete bookmark
            responses:
              200:
                description: Success
      /groups:
        get:
          displayName: list_your_groups
          description: List your groups
          queryParameters:
            context_type:
              required: false
              displayName: context_type
              description: Only include groups that are in this type of context.
              type: string
              enum:
              - Account
              - Course
            include:
              required: false
              displayName: include
              description: |
                - "tabs": Include the list of tabs configured for each group.  See the
                  {api:TabsController#index List available tabs API} for more information.
              type: string
              enum:
              - tabs
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /activity_stream:
        get:
          displayName: list_activity_stream_self
          description: List the activity stream
          queryParameters:
            only_active_courses:
              required: false
              displayName: only_active_courses
              description: If true, will only return objects for courses the user is actively participating in
              type: boolean
          responses:
            200:
              description: Success
        delete:
          displayName: hide_all_stream_items
          description: Hide all stream items
          responses:
            200:
              description: Success
        /summary:
          get:
            displayName: activity_stream_summary
            description: Activity stream summary
            responses:
              200:
                description: Success
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          delete:
            displayName: hide_stream_item
            description: Hide a stream item
            responses:
              200:
                description: Success
      /todo:
        get:
          displayName: list_todo_items
          description: List the TODO items
          queryParameters:
            include:
              required: false
              displayName: include
              description: |
                "ungraded_quizzes":: Optionally include ungraded quizzes (such as practice quizzes and surveys) in the list.
                                     These will be returned under a +quiz+ key instead of an +assignment+ key in response elements.
              type: string
              enum:
              - ungraded_quizzes
          responses:
            200:
              description: Success
      /todo_item_count:
        get:
          displayName: list_counts_for_todo_items
          description: List counts for todo items
          queryParameters:
            include:
              required: false
              displayName: include
              description: |
                "ungraded_quizzes":: Optionally include ungraded quizzes (such as practice quizzes and surveys) in the list.
                                     These will be returned under a +quiz+ key instead of an +assignment+ key in response elements.
              type: string
              enum:
              - ungraded_quizzes
          responses:
            200:
              description: Success
      /upcoming_events:
        get:
          displayName: list_upcoming_assignments_calendar_events
          description: List upcoming assignments, calendar events
          responses:
            200:
              description: Success
      /pandata_events_token:
        post:
          displayName: get_pandata_events_jwt_token_and_its_expiration_date
          description: Get a Pandata Events jwt token and its expiration date
          body:
            multipart/form-data:
              type: object
              properties:
                app_key:
                  required: false
                  displayName: app_key
                  description: The pandata events appKey for this mobile app
                  type: string
          responses:
            200:
              description: Success
      /course_nicknames:
        get:
          displayName: list_course_nicknames
          description: List course nicknames
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        delete:
          displayName: clear_course_nicknames
          description: Clear course nicknames
          responses:
            200:
              description: Success
        /{course_id}:
          uriParameters:
            course_id:
              required: true
              displayName: course_id
              description: ID
              type: string
          get:
            displayName: get_course_nickname
            description: Get course nickname
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          put:
            displayName: set_course_nickname
            description: Set course nickname
            body:
              multipart/form-data:
                type: object
                properties:
                  nickname:
                    required: true
                    displayName: nickname
                    description: The nickname to set.  It must be non-empty and shorter than 60 characters.
                    type: string
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: remove_course_nickname
            description: Remove course nickname
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /communication_channels:
        /push:
          delete:
            displayName: delete_push_notification_endpoint
            description: Delete a push notification endpoint
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
        /{communication_channel_id}:
          uriParameters:
            communication_channel_id:
              required: true
              displayName: communication_channel_id
              description: ID
              type: string
          /notification_preference_categories/{category}:
            uriParameters:
              category:
                required: true
                displayName: category
                description: The name of the category. Must be parameterized (e.g. The category "Course Content" should be "course_content")
                type: string
            put:
              displayName: update_preferences_by_category
              description: Update preferences by category
              body:
                multipart/form-data:
                  type: object
                  properties:
                    notification_preferences[frequency]:
                      required: true
                      displayName: notification_preferences[frequency]
                      description: The desired frequency for each notification in the category
                      type: string
              responses:
                200:
                  description: Success
          /notification_preferences:
            put:
              displayName: update_multiple_preferences_communication_channel_id
              description: Update multiple preferences
              body:
                multipart/form-data:
                  type: object
                  properties:
                    notification_preferences[<X>][frequency]:
                      required: true
                      displayName: notification_preferences[<X>][frequency]
                      description: The desired frequency for <X> notification
                      type: string
              responses:
                200:
                  description: Success
            /{notification}:
              uriParameters:
                notification:
                  required: true
                  displayName: notification
                  description: ID
                  type: string
              put:
                displayName: update_preference_communication_channel_id
                description: Update a preference
                body:
                  multipart/form-data:
                    type: object
                    properties:
                      notification_preferences[frequency]:
                        required: true
                        displayName: notification_preferences[frequency]
                        description: The desired frequency for this notification
                        type: string
                responses:
                  200:
                    description: Success
        /{type}:
          uriParameters:
            type:
              required: true
              displayName: type
              description: ID
              type: string
          /{address}:
            uriParameters:
              address:
                required: true
                displayName: address
                description: ID
                type: string
            /notification_preferences:
              put:
                displayName: update_multiple_preferences_type
                description: Update multiple preferences
                body:
                  multipart/form-data:
                    type: object
                    properties:
                      notification_preferences[<X>][frequency]:
                        required: true
                        displayName: notification_preferences[<X>][frequency]
                        description: The desired frequency for <X> notification
                        type: string
                responses:
                  200:
                    description: Success
              /{notification}:
                uriParameters:
                  notification:
                    required: true
                    displayName: notification
                    description: ID
                    type: string
                put:
                  displayName: update_preference_type
                  description: Update a preference
                  body:
                    multipart/form-data:
                      type: object
                      properties:
                        notification_preferences[frequency]:
                          required: true
                          displayName: notification_preferences[frequency]
                          description: The desired frequency for this notification
                          type: string
                  responses:
                    200:
                      description: Success
      /favorites:
        /courses:
          get:
            displayName: list_favorite_courses
            description: List favorite courses
            queryParameters:
              exclude_blueprint_courses:
                required: false
                displayName: exclude_blueprint_courses
                description: When set, only return courses that are not configured as blueprint courses.
                type: boolean
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: reset_course_favorites
            description: Reset course favorites
            responses:
              200:
                description: Success
          /{id}:
            uriParameters:
              id:
                required: true
                displayName: id
                description: |
                  The ID or SIS ID of the course to add.  The current user must be

                  registered in the course.
                type: string
            post:
              displayName: add_course_to_favorites
              description: Add course to favorites
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            delete:
              displayName: remove_course_from_favorites
              description: Remove course from favorites
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
        /groups:
          get:
            displayName: list_favorite_groups
            description: List favorite groups
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: reset_group_favorites
            description: Reset group favorites
            responses:
              200:
                description: Success
          /{id}:
            uriParameters:
              id:
                required: true
                displayName: id
                description: |
                  The ID or SIS ID of the group to add.  The current user must be

                  a member of the group.
                type: string
            post:
              displayName: add_group_to_favorites
              description: Add group to favorites
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            delete:
              displayName: remove_group_from_favorites
              description: Remove group from favorites
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
  /sections:
    /{course_section_id}/assignments/{assignment_id}/override:
      uriParameters:
        course_section_id:
          required: true
          displayName: course_section_id
          description: ID
          type: string
        assignment_id:
          required: true
          displayName: assignment_id
          description: ID
          type: string
      get:
        displayName: redirect_to_assignment_override_for_section
        description: Redirect to the assignment override for a section
        responses:
          200:
            description: Success
    /{id}:
      uriParameters:
        id:
          required: true
          displayName: id
          description: ID
          type: string
      put:
        displayName: edit_section
        description: Edit a section
        body:
          multipart/form-data:
            type: object
            properties:
              course_section[name]:
                required: false
                displayName: course_section[name]
                description: The name of the section
                type: string
              course_section[sis_section_id]:
                required: false
                displayName: course_section[sis_section_id]
                description: The sis ID of the section. Must have manage_sis permission to set.
                type: string
              course_section[integration_id]:
                required: false
                displayName: course_section[integration_id]
                description: The integration_id of the section. Must have manage_sis permission to set.
                type: string
              course_section[start_at]:
                required: false
                displayName: course_section[start_at]
                description: Section start date in ISO8601 format, e.g. 2011-01-01T01:00Z
                type: object
              course_section[end_at]:
                required: false
                displayName: course_section[end_at]
                description: Section end date in ISO8601 format. e.g. 2011-01-01T01:00Z
                type: object
              course_section[restrict_enrollments_to_section_dates]:
                required: false
                displayName: course_section[restrict_enrollments_to_section_dates]
                description: Set to true to restrict user enrollments to the start and end dates of the section.
                type: boolean
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      get:
        displayName: get_section_information_sections
        description: Get section information
        queryParameters:
          include:
            required: false
            displayName: include
            description: |
              - "students": Associations to include with the group. Note: this is only
                available if you have permission to view users or grades in the course
              - "avatar_url": Include the avatar URLs for students returned.

              - "enrollments": If 'students' is also included, return the section
                enrollment for each student
              - "total_students": Returns the total amount of active and invited students
                for the course section
              - "passback_status": Include the grade passback status.
            type: string
            enum:
            - students
            - avatar_url
            - enrollments
            - total_students
            - passback_status
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      delete:
        displayName: delete_section
        description: Delete a section
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      /crosslist:
        delete:
          displayName: de_cross_list_section
          description: De-cross-list a Section
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{new_course_id}:
          uriParameters:
            new_course_id:
              required: true
              displayName: new_course_id
              description: ID
              type: string
          post:
            displayName: cross_list_section
            description: Cross-list a Section
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
    /{section_id}:
      uriParameters:
        section_id:
          required: true
          displayName: section_id
          description: ID
          type: string
      /enrollments:
        get:
          displayName: list_enrollments_sections
          description: List enrollments
          queryParameters:
            type:
              required: false
              displayName: type
              description: |
                A list of enrollment types to return. Accepted values are

                'StudentEnrollment', 'TeacherEnrollment', 'TaEnrollment',

                'DesignerEnrollment', and 'ObserverEnrollment.' If omitted, all enrollment

                types are returned. This argument is ignored if `role` is given.
              type: array
              items:
                type: string
            role:
              required: false
              displayName: role
              description: |
                A list of enrollment roles to return. Accepted values include course-level

                roles created by the {api:RoleOverridesController#add_role Add Role API}

                as well as the base enrollment types accepted by the `type` argument above.
              type: array
              items:
                type: string
            state:
              required: false
              displayName: state
              description: |
                Filter by enrollment state. If omitted, 'active' and 'invited' enrollments

                are returned. When querying a user's enrollments (either via user_id

                argument or via user enrollments endpoint), the following additional

                synthetic states are supported: "current_and_invited"|"current_and_future"|"current_and_concluded"
              type: string
              enum:
              - active
              - invited
              - creation_pending
              - deleted
              - rejected
              - completed
              - inactive
            include:
              required: false
              displayName: include
              description: |
                Array of additional information to include on the enrollment or user records.

                "avatar_url" and "group_ids" will be returned on the user record.
              type: string
              enum:
              - avatar_url
              - group_ids
              - locked
              - observed_users
              - can_be_removed
            user_id:
              required: false
              displayName: user_id
              description: |
                Filter by user_id (only valid for course or section enrollment

                queries). If set to the current user's id, this is a way to

                determine if the user has any enrollments in the course or section,

                independent of whether the user has permission to view other people

                on the roster.
              type: string
            grading_period_id:
              required: false
              displayName: grading_period_id
              description: |
                Return grades for the given grading_period.  If this parameter is not

                specified, the returned grades will be for the whole course.
              type: integer
              format: int64
            enrollment_term_id:
              required: false
              displayName: enrollment_term_id
              description: |
                Returns only enrollments for the specified enrollment term. This parameter

                only applies to the user enrollments path. May pass the ID from the

                enrollment terms api or the SIS id prepended with 'sis_term_id:'.
              type: integer
              format: int64
            sis_account_id:
              required: false
              displayName: sis_account_id
              description: |
                Returns only enrollments for the specified SIS account ID(s). Does not

                look into sub_accounts. May pass in array or string.
              type: array
              items:
                type: string
            sis_course_id:
              required: false
              displayName: sis_course_id
              description: |
                Returns only enrollments matching the specified SIS course ID(s).

                May pass in array or string.
              type: array
              items:
                type: string
            sis_section_id:
              required: false
              displayName: sis_section_id
              description: |
                Returns only section enrollments matching the specified SIS section ID(s).

                May pass in array or string.
              type: array
              items:
                type: string
            sis_user_id:
              required: false
              displayName: sis_user_id
              description: |
                Returns only enrollments for the specified SIS user ID(s). May pass in

                array or string.
              type: array
              items:
                type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: enroll_user_sections
          description: Enroll a user
          body:
            multipart/form-data:
              type: object
              properties:
                enrollment[user_id]:
                  required: true
                  displayName: enrollment[user_id]
                  description: The ID of the user to be enrolled in the course.
                  type: string
                enrollment[type]:
                  required: true
                  displayName: enrollment[type]
                  description: |
                    Enroll the user as a student, teacher, TA, observer, or designer. If no

                    value is given, the type will be inferred by enrollment[role] if supplied,

                    otherwise 'StudentEnrollment' will be used.
                  type: string
                  enum:
                  - StudentEnrollment
                  - TeacherEnrollment
                  - TaEnrollment
                  - ObserverEnrollment
                  - DesignerEnrollment
                enrollment[role]:
                  required: false
                  displayName: enrollment[role]
                  description: Assigns a custom course-level role to the user.
                  type: object
                enrollment[role_id]:
                  required: false
                  displayName: enrollment[role_id]
                  description: Assigns a custom course-level role to the user.
                  type: integer
                  format: int64
                enrollment[enrollment_state]:
                  required: false
                  displayName: enrollment[enrollment_state]
                  description: |
                    If set to 'active,' student will be immediately enrolled in the course.

                    Otherwise they will be required to accept a course invitation. Default is

                    'invited.'.


                    If set to 'inactive', student will be listed in the course roster for

                    teachers, but will not be able to participate in the course until

                    their enrollment is activated.
                  type: string
                  enum:
                  - active
                  - invited
                  - inactive
                enrollment[course_section_id]:
                  required: false
                  displayName: enrollment[course_section_id]
                  description: |
                    The ID of the course section to enroll the student in. If the

                    section-specific URL is used, this argument is redundant and will be

                    ignored.
                  type: integer
                  format: int64
                enrollment[limit_privileges_to_course_section]:
                  required: false
                  displayName: enrollment[limit_privileges_to_course_section]
                  description: |
                    If set, the enrollment will only allow the user to see and interact with

                    users enrolled in the section given by course_section_id.

                    * For teachers and TAs, this includes grading privileges.

                    * Section-limited students will not see any users (including teachers
                      and TAs) not enrolled in their sections.
                    * Users may have other enrollments that grant privileges to
                      multiple sections in the same course.
                  type: boolean
                enrollment[notify]:
                  required: false
                  displayName: enrollment[notify]
                  description: |
                    If true, a notification will be sent to the enrolled user.

                    Notifications are not sent by default.
                  type: boolean
                enrollment[self_enrollment_code]:
                  required: false
                  displayName: enrollment[self_enrollment_code]
                  description: |
                    If the current user is not allowed to manage enrollments in this

                    course, but the course allows self-enrollment, the user can self-

                    enroll as a student in the default section by passing in a valid

                    code. When self-enrolling, the user_id must be 'self'. The

                    enrollment_state will be set to 'active' and all other arguments

                    will be ignored.
                  type: string
                enrollment[self_enrolled]:
                  required: false
                  displayName: enrollment[self_enrolled]
                  description: |
                    If true, marks the enrollment as a self-enrollment, which gives

                    students the ability to drop the course if desired. Defaults to false.
                  type: boolean
                enrollment[associated_user_id]:
                  required: false
                  displayName: enrollment[associated_user_id]
                  description: |
                    For an observer enrollment, the ID of a student to observe. The

                    caller must have +manage_students+ permission in the course.

                    This is a one-off operation; to automatically observe all a

                    student's enrollments (for example, as a parent), please use

                    the {api:UserObserveesController#create User Observees API}.
                  type: integer
                  format: int64
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /students/submissions:
        get:
          displayName: list_submissions_for_multiple_assignments_sections
          description: List submissions for multiple assignments
          queryParameters:
            student_ids:
              required: false
              displayName: student_ids
              description: |
                List of student ids to return submissions for. If this argument is

                omitted, return submissions for the calling user. Students may only list

                their own submissions. Observers may only list those of associated

                students. The special id "all" will return submissions for all students

                in the course/section as appropriate.
              type: array
              items:
                type: string
            assignment_ids:
              required: false
              displayName: assignment_ids
              description: |
                List of assignments to return submissions for. If none are given,

                submissions for all assignments are returned.
              type: array
              items:
                type: string
            grouped:
              required: false
              displayName: grouped
              description: |
                If this argument is present, the response will be grouped by student,

                rather than a flat array of submissions.
              type: boolean
            post_to_sis:
              required: false
              displayName: post_to_sis
              description: |
                If this argument is set to true, the response will only include

                submissions for assignments that have the post_to_sis flag set to true and

                user enrollments that were added through sis.
              type: boolean
            submitted_since:
              required: false
              displayName: submitted_since
              description: |
                If this argument is set, the response will only include submissions that

                were submitted after the specified date_time. This will exclude

                submissions that do not have a submitted_at which will exclude unsubmitted

                submissions.

                The value must be formatted as ISO 8601 YYYY-MM-DDTHH:MM:SSZ.
              type: object
            graded_since:
              required: false
              displayName: graded_since
              description: |
                If this argument is set, the response will only include submissions that

                were graded after the specified date_time. This will exclude

                submissions that have not been graded.

                The value must be formatted as ISO 8601 YYYY-MM-DDTHH:MM:SSZ.
              type: object
            grading_period_id:
              required: false
              displayName: grading_period_id
              description: |
                The id of the grading period in which submissions are being requested

                (Requires grading periods to exist on the account)
              type: integer
              format: int64
            workflow_state:
              required: false
              displayName: workflow_state
              description: The current status of the submission
              type: string
              enum:
              - submitted
              - unsubmitted
              - graded
              - pending_review
            enrollment_state:
              required: false
              displayName: enrollment_state
              description: |
                The current state of the enrollments. If omitted will include all

                enrollments that are not deleted.
              type: string
              enum:
              - active
              - concluded
            state_based_on_date:
              required: false
              displayName: state_based_on_date
              description: |
                If omitted it is set to true. When set to false it will ignore the effective

                state of the student enrollments and use the workflow_state for the

                enrollments. The argument is ignored unless enrollment_state argument is

                also passed.
              type: boolean
            order:
              required: false
              displayName: order
              description: |
                The order submissions will be returned in.  Defaults to "id".  Doesn't

                affect results for "grouped" mode.
              type: string
              enum:
              - id
              - graded_at
            order_direction:
              required: false
              displayName: order_direction
              description: |
                Determines whether ordered results are returned in ascending or descending

                order.  Defaults to "ascending".  Doesn't affect results for "grouped" mode.
              type: string
            include:
              required: false
              displayName: include
              description: |
                Associations to include with the group. `total_scores` requires the

                `grouped` argument.
              type: string
              enum:
              - submission_history
              - submission_comments
              - rubric_assessment
              - assignment
              - total_scores
              - visibility
              - course
              - user
          responses:
            200:
              description: Success
      /submissions/update_grades:
        post:
          displayName: grade_or_comment_on_multiple_submissions_sections_submissions
          description: Grade or comment on multiple submissions
          body:
            multipart/form-data:
              type: object
              properties:
                grade_data[<student_id>][posted_grade]:
                  required: false
                  displayName: grade_data[<student_id>][posted_grade]
                  description: |
                    See documentation for the posted_grade argument in the

                    {api:SubmissionsApiController#update Submissions Update} documentation
                  type: string
                grade_data[<student_id>][excuse]:
                  required: false
                  displayName: grade_data[<student_id>][excuse]
                  description: |
                    See documentation for the excuse argument in the

                    {api:SubmissionsApiController#update Submissions Update} documentation
                  type: boolean
                grade_data[<student_id>][rubric_assessment]:
                  required: false
                  displayName: grade_data[<student_id>][rubric_assessment]
                  description: |
                    See documentation for the rubric_assessment argument in the

                    {api:SubmissionsApiController#update Submissions Update} documentation
                  type: object
                grade_data[<student_id>][text_comment]:
                  required: false
                  displayName: grade_data[<student_id>][text_comment]
                  description: no description
                  type: string
                grade_data[<student_id>][group_comment]:
                  required: false
                  displayName: grade_data[<student_id>][group_comment]
                  description: no description
                  type: boolean
                grade_data[<student_id>][media_comment_id]:
                  required: false
                  displayName: grade_data[<student_id>][media_comment_id]
                  description: no description
                  type: string
                grade_data[<student_id>][media_comment_type]:
                  required: false
                  displayName: grade_data[<student_id>][media_comment_type]
                  description: no description
                  type: string
                  enum:
                  - audio
                  - video
                grade_data[<student_id>][file_ids]:
                  required: false
                  displayName: grade_data[<student_id>][file_ids]
                  description: |
                    See documentation for the comment[] arguments in the

                    {api:SubmissionsApiController#update Submissions Update} documentation
                  type: array
                  items:
                    type: integer
                    format: int32
                grade_data[<student_id>][assignment_id]:
                  required: false
                  displayName: grade_data[<student_id>][assignment_id]
                  description: |
                    Specifies which assignment to grade.  This argument is not necessary when

                    using the assignment-specific endpoints.
                  type: integer
                  format: int64
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /assignments:
        /{assignment_id}:
          uriParameters:
            assignment_id:
              required: true
              displayName: assignment_id
              description: ID
              type: string
          /peer_reviews:
            get:
              displayName: get_all_peer_reviews_sections_peer_reviews
              description: Get all Peer Reviews
              queryParameters:
                include:
                  required: false
                  displayName: include
                  description: Associations to include with the peer review.
                  type: string
                  enum:
                  - submission_comments
                  - user
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
          /submissions:
            post:
              displayName: submit_assignment_sections
              description: Submit an assignment
              body:
                multipart/form-data:
                  type: object
                  properties:
                    submission[submission_type]:
                      required: true
                      displayName: submission[submission_type]
                      description: |
                        The type of submission being made. The assignment submission_types must

                        include this submission type as an allowed option, or the submission will be rejected with a 400 error.


                        The submission_type given determines which of the following parameters is

                        used. For instance, to submit a URL, submission [submission_type] must be

                        set to "online_url", otherwise the submission [url] parameter will be

                        ignored.
                      type: string
                      enum:
                      - online_text_entry
                      - online_url
                      - online_upload
                      - media_recording
                      - basic_lti_launch
                    comment[text_comment]:
                      required: false
                      displayName: comment[text_comment]
                      description: Include a textual comment with the submission.
                      type: string
                    submission[body]:
                      required: false
                      displayName: submission[body]
                      description: |
                        Submit the assignment as an HTML document snippet. Note this HTML snippet

                        will be sanitized using the same ruleset as a submission made from the

                        Canvas web UI. The sanitized HTML will be returned in the response as the

                        submission body. Requires a submission_type of "online_text_entry".
                      type: string
                    submission[url]:
                      required: false
                      displayName: submission[url]
                      description: |
                        Submit the assignment as a URL. The URL scheme must be "http" or "https",

                        no "ftp" or other URL schemes are allowed. If no scheme is given (e.g.

                        "www.example.com") then "http" will be assumed. Requires a submission_type

                        of "online_url" or "basic_lti_launch".
                      type: string
                    submission[file_ids]:
                      required: false
                      displayName: submission[file_ids]
                      description: |
                        Submit the assignment as a set of one or more previously uploaded files

                        residing in the submitting user's files section (or the group's files

                        section, for group assignments).


                        To upload a new file to submit, see the submissions {api:SubmissionsApiController#create_file Upload a file API}.


                        Requires a submission_type of "online_upload".
                      type: array
                      items:
                        type: integer
                        format: int32
                    submission[media_comment_id]:
                      required: false
                      displayName: submission[media_comment_id]
                      description: |
                        The media comment id to submit. Media comment ids can be submitted via

                        this API, however, note that there is not yet an API to generate or list

                        existing media comments, so this functionality is currently of limited use.


                        Requires a submission_type of "media_recording".
                      type: string
                    submission[media_comment_type]:
                      required: false
                      displayName: submission[media_comment_type]
                      description: The type of media comment being submitted.
                      type: string
                      enum:
                      - audio
                      - video
              responses:
                200:
                  description: Success
            get:
              displayName: list_assignment_submissions_sections
              description: List assignment submissions
              queryParameters:
                include:
                  required: false
                  displayName: include
                  description: Associations to include with the group.  "group" will add group_id and group_name.
                  type: array
                  items:
                    type: string
                grouped:
                  required: false
                  displayName: grouped
                  description: If this argument is true, the response will be grouped by student groups.
                  type: boolean
              responses:
                200:
                  description: Success
                  body:
                    text/plain:
                      displayName: response
                      type: any
            /{submission_id}/peer_reviews:
              uriParameters:
                submission_id:
                  required: true
                  displayName: submission_id
                  description: ID
                  type: string
              get:
                displayName: get_all_peer_reviews_sections_submissions
                description: Get all Peer Reviews
                queryParameters:
                  include:
                    required: false
                    displayName: include
                    description: Associations to include with the peer review.
                    type: string
                    enum:
                    - submission_comments
                    - user
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
              post:
                displayName: create_peer_review_sections
                description: Create Peer Review
                body:
                  multipart/form-data:
                    type: object
                    properties:
                      user_id:
                        required: true
                        displayName: user_id
                        description: user_id to assign as reviewer on this assignment
                        type: integer
                        format: int64
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
              delete:
                displayName: delete_peer_review_sections
                description: Delete Peer Review
                queryParameters:
                  user_id:
                    required: true
                    displayName: user_id
                    description: user_id to delete as reviewer on this assignment
                    type: integer
                    format: int64
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
            /{user_id}:
              uriParameters:
                user_id:
                  required: true
                  displayName: user_id
                  description: ID
                  type: string
              get:
                displayName: get_single_submission_sections
                description: Get a single submission
                queryParameters:
                  include:
                    required: false
                    displayName: include
                    description: Associations to include with the group.
                    type: string
                    enum:
                    - submission_history
                    - submission_comments
                    - rubric_assessment
                    - visibility
                    - course
                    - user
                responses:
                  200:
                    description: Success
              put:
                displayName: grade_or_comment_on_submission_sections
                description: Grade or comment on a submission
                body:
                  multipart/form-data:
                    type: object
                    properties:
                      comment[text_comment]:
                        required: false
                        displayName: comment[text_comment]
                        description: Add a textual comment to the submission.
                        type: string
                      comment[group_comment]:
                        required: false
                        displayName: comment[group_comment]
                        description: |
                          Whether or not this comment should be sent to the entire group (defaults

                          to false). Ignored if this is not a group assignment or if no text_comment

                          is provided.
                        type: boolean
                      comment[media_comment_id]:
                        required: false
                        displayName: comment[media_comment_id]
                        description: |
                          Add an audio/video comment to the submission. Media comments can be added

                          via this API, however, note that there is not yet an API to generate or

                          list existing media comments, so this functionality is currently of

                          limited use.
                        type: string
                      comment[media_comment_type]:
                        required: false
                        displayName: comment[media_comment_type]
                        description: The type of media comment being added.
                        type: string
                        enum:
                        - audio
                        - video
                      comment[file_ids]:
                        required: false
                        displayName: comment[file_ids]
                        description: |
                          Attach files to this comment that were previously uploaded using the

                          Submission Comment API's files action
                        type: array
                        items:
                          type: integer
                          format: int32
                      include[visibility]:
                        required: false
                        displayName: include[visibility]
                        description: Whether this assignment is visible to the owner of the submission
                        type: string
                      submission[posted_grade]:
                        required: false
                        displayName: submission[posted_grade]
                        description: |
                          Assign a score to the submission, updating both the "score" and "grade"

                          fields on the submission record. This parameter can be passed in a few

                          different formats:


                          points:: A floating point or integral value, such as "13.5". The grade
                            will be interpreted directly as the score of the assignment.
                            Values above assignment.points_possible are allowed, for awarding
                            extra credit.
                          percentage:: A floating point value appended with a percent sign, such as
                             "40%". The grade will be interpreted as a percentage score on the
                             assignment, where 100% == assignment.points_possible. Values above 100%
                             are allowed, for awarding extra credit.
                          letter grade:: A letter grade, following the assignment's defined letter
                             grading scheme. For example, "A-". The resulting score will be the high
                             end of the defined range for the letter grade. For instance, if "B" is
                             defined as 86% to 84%, a letter grade of "B" will be worth 86%. The
                             letter grade will be rejected if the assignment does not have a defined
                             letter grading scheme. For more fine-grained control of scores, pass in
                             points or percentage rather than the letter grade.
                          "pass/complete/fail/incomplete":: A string value of "pass" or "complete"
                             will give a score of 100%. "fail" or "incomplete" will give a score of
                             0.

                          Note that assignments with grading_type of "pass_fail" can only be

                          assigned a score of 0 or assignment.points_possible, nothing inbetween. If

                          a posted_grade in the "points" or "percentage" format is sent, the grade

                          will only be accepted if the grade equals one of those two values.
                        type: string
                      submission[excuse]:
                        required: false
                        displayName: submission[excuse]
                        description: Sets the "excused" status of an assignment.
                        type: boolean
                      submission[late_policy_status]:
                        required: false
                        displayName: submission[late_policy_status]
                        description: Sets the late policy status to either "late", "missing", "none", or null.
                        type: string
                      submission[seconds_late_override]:
                        required: false
                        displayName: submission[seconds_late_override]
                        description: Sets the seconds late if late policy status is "late"
                        type: integer
                        format: int64
                      rubric_assessment:
                        required: false
                        displayName: rubric_assessment
                        description: |
                          Assign a rubric assessment to this assignment submission. The

                          sub-parameters here depend on the rubric for the assignment. The general

                          format is, for each row in the rubric:


                          The points awarded for this row.
                            rubric_assessment[criterion_id][points]

                          Comments to add for this row.
                            rubric_assessment[criterion_id][comments]

                          For example, if the assignment rubric is (in JSON format):
                            !!!javascript
                            [
                              {
                                'id': 'crit1',
                                'points': 10,
                                'description': 'Criterion 1',
                                'ratings':
                                [
                                  { 'description': 'Good', 'points': 10 },
                                  { 'description': 'Poor', 'points': 3 }
                                ]
                              },
                              {
                                'id': 'crit2',
                                'points': 5,
                                'description': 'Criterion 2',
                                'ratings':
                                [
                                  { 'description': 'Complete', 'points': 5 },
                                  { 'description': 'Incomplete', 'points': 0 }
                                ]
                              }
                            ]

                          Then a possible set of values for rubric_assessment would be:
                              rubric_assessment[crit1][points]=3&rubric_assessment[crit2][points]=5&rubric_assessment[crit2][comments]=Well%20Done.
                        type: object
                responses:
                  200:
                    description: Success
              /files:
                post:
                  displayName: upload_file_sections
                  description: Upload a file
                  responses:
                    200:
                      description: Success
              /read:
                put:
                  displayName: mark_submission_as_read_sections
                  description: Mark submission as read
                  responses:
                    200:
                      description: Success
                delete:
                  displayName: mark_submission_as_unread_sections
                  description: Mark submission as unread
                  responses:
                    200:
                      description: Success
            /update_grades:
              post:
                displayName: grade_or_comment_on_multiple_submissions_sections_assignments
                description: Grade or comment on multiple submissions
                body:
                  multipart/form-data:
                    type: object
                    properties:
                      grade_data[<student_id>][posted_grade]:
                        required: false
                        displayName: grade_data[<student_id>][posted_grade]
                        description: |
                          See documentation for the posted_grade argument in the

                          {api:SubmissionsApiController#update Submissions Update} documentation
                        type: string
                      grade_data[<student_id>][excuse]:
                        required: false
                        displayName: grade_data[<student_id>][excuse]
                        description: |
                          See documentation for the excuse argument in the

                          {api:SubmissionsApiController#update Submissions Update} documentation
                        type: boolean
                      grade_data[<student_id>][rubric_assessment]:
                        required: false
                        displayName: grade_data[<student_id>][rubric_assessment]
                        description: |
                          See documentation for the rubric_assessment argument in the

                          {api:SubmissionsApiController#update Submissions Update} documentation
                        type: object
                      grade_data[<student_id>][text_comment]:
                        required: false
                        displayName: grade_data[<student_id>][text_comment]
                        description: no description
                        type: string
                      grade_data[<student_id>][group_comment]:
                        required: false
                        displayName: grade_data[<student_id>][group_comment]
                        description: no description
                        type: boolean
                      grade_data[<student_id>][media_comment_id]:
                        required: false
                        displayName: grade_data[<student_id>][media_comment_id]
                        description: no description
                        type: string
                      grade_data[<student_id>][media_comment_type]:
                        required: false
                        displayName: grade_data[<student_id>][media_comment_type]
                        description: no description
                        type: string
                        enum:
                        - audio
                        - video
                      grade_data[<student_id>][file_ids]:
                        required: false
                        displayName: grade_data[<student_id>][file_ids]
                        description: |
                          See documentation for the comment[] arguments in the

                          {api:SubmissionsApiController#update Submissions Update} documentation
                        type: array
                        items:
                          type: integer
                          format: int32
                      grade_data[<student_id>][assignment_id]:
                        required: false
                        displayName: grade_data[<student_id>][assignment_id]
                        description: |
                          Specifies which assignment to grade.  This argument is not necessary when

                          using the assignment-specific endpoints.
                        type: integer
                        format: int64
                responses:
                  200:
                    description: Success
                    body:
                      text/plain:
                        displayName: response
                        type: any
          /submission_summary:
            get:
              displayName: submission_summary_sections
              description: Submission Summary
              queryParameters:
                grouped:
                  required: false
                  displayName: grouped
                  description: If this argument is true, the response will take into account student groups.
                  type: boolean
              responses:
                200:
                  description: Success
  /audit:
    /course/courses/{course_id}:
      uriParameters:
        course_id:
          required: true
          displayName: course_id
          description: ID
          type: string
      get:
        displayName: query_by_course
        description: Query by course.
        queryParameters:
          start_time:
            required: false
            displayName: start_time
            description: The beginning of the time range from which you want events.
            type: object
          end_time:
            required: false
            displayName: end_time
            description: The end of the time range from which you want events.
            type: object
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
    /authentication:
      /logins/{login_id}:
        uriParameters:
          login_id:
            required: true
            displayName: login_id
            description: ID
            type: string
        get:
          displayName: query_by_login
          description: Query by login.
          queryParameters:
            start_time:
              required: false
              displayName: start_time
              description: |
                The beginning of the time range from which you want events.

                Events are stored for one year.
              type: object
            end_time:
              required: false
              displayName: end_time
              description: The end of the time range from which you want events.
              type: object
          responses:
            200:
              description: Success
      /accounts/{account_id}:
        uriParameters:
          account_id:
            required: true
            displayName: account_id
            description: ID
            type: string
        get:
          displayName: query_by_account
          description: Query by account.
          queryParameters:
            start_time:
              required: false
              displayName: start_time
              description: |
                The beginning of the time range from which you want events.

                Events are stored for one year.
              type: object
            end_time:
              required: false
              displayName: end_time
              description: The end of the time range from which you want events.
              type: object
          responses:
            200:
              description: Success
      /users/{user_id}:
        uriParameters:
          user_id:
            required: true
            displayName: user_id
            description: ID
            type: string
        get:
          displayName: query_by_user
          description: Query by user.
          queryParameters:
            start_time:
              required: false
              displayName: start_time
              description: |
                The beginning of the time range from which you want events.

                Events are stored for one year.
              type: object
            end_time:
              required: false
              displayName: end_time
              description: The end of the time range from which you want events.
              type: object
          responses:
            200:
              description: Success
    /grade_change:
      /assignments/{assignment_id}:
        uriParameters:
          assignment_id:
            required: true
            displayName: assignment_id
            description: ID
            type: string
        get:
          displayName: query_by_assignment
          description: Query by assignment.
          queryParameters:
            start_time:
              required: false
              displayName: start_time
              description: The beginning of the time range from which you want events.
              type: object
            end_time:
              required: false
              displayName: end_time
              description: The end of the time range from which you want events.
              type: object
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /courses/{course_id}:
        uriParameters:
          course_id:
            required: true
            displayName: course_id
            description: ID
            type: string
        get:
          displayName: query_by_course
          description: Query by course.
          queryParameters:
            start_time:
              required: false
              displayName: start_time
              description: The beginning of the time range from which you want events.
              type: object
            end_time:
              required: false
              displayName: end_time
              description: The end of the time range from which you want events.
              type: object
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /students/{student_id}:
        uriParameters:
          student_id:
            required: true
            displayName: student_id
            description: ID
            type: string
        get:
          displayName: query_by_student
          description: Query by student.
          queryParameters:
            start_time:
              required: false
              displayName: start_time
              description: The beginning of the time range from which you want events.
              type: object
            end_time:
              required: false
              displayName: end_time
              description: The end of the time range from which you want events.
              type: object
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /graders/{grader_id}:
        uriParameters:
          grader_id:
            required: true
            displayName: grader_id
            description: ID
            type: string
        get:
          displayName: query_by_grader
          description: Query by grader.
          queryParameters:
            start_time:
              required: false
              displayName: start_time
              description: The beginning of the time range from which you want events.
              type: object
            end_time:
              required: false
              displayName: end_time
              description: The end of the time range from which you want events.
              type: object
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
  /folders:
    /{id}:
      uriParameters:
        id:
          required: true
          displayName: id
          description: ID
          type: string
      get:
        displayName: get_folder_folders
        description: Get folder
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      put:
        displayName: update_folder
        description: Update folder
        body:
          multipart/form-data:
            type: object
            properties:
              name:
                required: false
                displayName: name
                description: The new name of the folder
                type: string
              parent_folder_id:
                required: false
                displayName: parent_folder_id
                description: The id of the folder to move this folder into. The new folder must be in the same context as the original parent folder.
                type: string
              lock_at:
                required: false
                displayName: lock_at
                description: The datetime to lock the folder at
                type: object
              unlock_at:
                required: false
                displayName: unlock_at
                description: The datetime to unlock the folder at
                type: object
              locked:
                required: false
                displayName: locked
                description: Flag the folder as locked
                type: boolean
              hidden:
                required: false
                displayName: hidden
                description: Flag the folder as hidden
                type: boolean
              position:
                required: false
                displayName: position
                description: Set an explicit sort position for the folder
                type: integer
                format: int64
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      delete:
        displayName: delete_folder
        description: Delete folder
        queryParameters:
          force:
            required: false
            displayName: force
            description: Set to 'true' to allow deleting a non-empty folder
            type: boolean
        responses:
          200:
            description: Success
      /files:
        get:
          displayName: list_files_folders
          description: List files
          queryParameters:
            content_types:
              required: false
              displayName: content_types
              description: |
                Filter results by content-type. You can specify type/subtype pairs (e.g.,

                'image/jpeg'), or simply types (e.g., 'image', which will match

                'image/gif', 'image/jpeg', etc.).
              type: array
              items:
                type: string
            search_term:
              required: false
              displayName: search_term
              description: The partial name of the files to match and return.
              type: string
            include:
              required: false
              displayName: include
              description: |
                Array of additional information to include.


                "user":: the user who uploaded the file or last edited its content

                "usage_rights":: copyright and license information for the file (see UsageRights)
              type: string
              enum:
              - user
            only:
              required: false
              displayName: only
              description: |
                Array of information to restrict to. Overrides include[]


                "names":: only returns file name information
              type: array
              items:
                type: object
            sort:
              required: false
              displayName: sort
              description: Sort results by this field. Defaults to 'name'. Note that `sort=user` implies `include[]=user`.
              type: string
              enum:
              - name
              - size
              - created_at
              - updated_at
              - content_type
              - user
            order:
              required: false
              displayName: order
              description: The sorting order. Defaults to 'asc'.
              type: string
              enum:
              - asc
              - desc
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: array
                  items:
                    type: file
      /folders:
        get:
          displayName: list_folders
          description: List folders
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
    /{folder_id}:
      uriParameters:
        folder_id:
          required: true
          displayName: folder_id
          description: ID
          type: string
      /folders:
        post:
          displayName: create_folder_folders
          description: Create folder
          body:
            multipart/form-data:
              type: object
              properties:
                name:
                  required: true
                  displayName: name
                  description: The name of the folder
                  type: string
                parent_folder_id:
                  required: false
                  displayName: parent_folder_id
                  description: The id of the folder to store the file in. If this and parent_folder_path are sent an error will be returned. If neither is given, a default folder will be used.
                  type: string
                parent_folder_path:
                  required: false
                  displayName: parent_folder_path
                  description: The path of the folder to store the new folder in. The path separator is the forward slash `/`, never a back slash. The parent folder will be created if it does not already exist. This parameter only applies to new folders in a context that has folders, such as a user, a course, or a group. If this and parent_folder_id are sent an error will be returned. If neither is given, a default folder will be used.
                  type: string
                lock_at:
                  required: false
                  displayName: lock_at
                  description: The datetime to lock the folder at
                  type: object
                unlock_at:
                  required: false
                  displayName: unlock_at
                  description: The datetime to unlock the folder at
                  type: object
                locked:
                  required: false
                  displayName: locked
                  description: Flag the folder as locked
                  type: boolean
                hidden:
                  required: false
                  displayName: hidden
                  description: Flag the folder as hidden
                  type: boolean
                position:
                  required: false
                  displayName: position
                  description: Set an explicit sort position for the folder
                  type: integer
                  format: int64
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /files:
        post:
          displayName: upload_file
          description: Upload a file
          responses:
            200:
              description: Success
    /{dest_folder_id}:
      uriParameters:
        dest_folder_id:
          required: true
          displayName: dest_folder_id
          description: ID
          type: string
      /copy_file:
        post:
          displayName: copy_file
          description: Copy a file
          body:
            multipart/form-data:
              type: object
              properties:
                source_file_id:
                  required: true
                  displayName: source_file_id
                  description: The id of the source file
                  type: string
                on_duplicate:
                  required: false
                  displayName: on_duplicate
                  description: |
                    What to do if a file with the same name already exists at the destination.

                    If such a file exists and this parameter is not given, the call will fail.


                    "overwrite":: Replace an existing file with the same name

                    "rename":: Add a qualifier to make the new filename unique
                  type: string
                  enum:
                  - overwrite
                  - rename
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: file
      /copy_folder:
        post:
          displayName: copy_folder
          description: Copy a folder
          body:
            multipart/form-data:
              type: object
              properties:
                source_folder_id:
                  required: true
                  displayName: source_folder_id
                  description: The id of the source folder
                  type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
  /files:
    /{id}:
      uriParameters:
        id:
          required: true
          displayName: id
          description: ID
          type: string
      get:
        displayName: get_file_files
        description: Get file
        queryParameters:
          include:
            required: false
            displayName: include
            description: |
              Array of additional information to include.


              "user":: the user who uploaded the file or last edited its content

              "usage_rights":: copyright and license information for the file (see UsageRights)
            type: string
            enum:
            - user
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: file
      put:
        displayName: update_file
        description: Update file
        body:
          multipart/form-data:
            type: object
            properties:
              name:
                required: false
                displayName: name
                description: The new display name of the file
                type: string
              parent_folder_id:
                required: false
                displayName: parent_folder_id
                description: |
                  The id of the folder to move this file into.

                  The new folder must be in the same context as the original parent folder.

                  If the file is in a context without folders this does not apply.
                type: string
              on_duplicate:
                required: false
                displayName: on_duplicate
                description: |
                  If the file is moved to a folder containing a file with the same name,

                  or renamed to a name matching an existing file, the API call will fail

                  unless this parameter is supplied.


                  "overwrite":: Replace the existing file with the same name

                  "rename":: Add a qualifier to make the new filename unique
                type: string
                enum:
                - overwrite
                - rename
              lock_at:
                required: false
                displayName: lock_at
                description: The datetime to lock the file at
                type: object
              unlock_at:
                required: false
                displayName: unlock_at
                description: The datetime to unlock the file at
                type: object
              locked:
                required: false
                displayName: locked
                description: Flag the file as locked
                type: boolean
              hidden:
                required: false
                displayName: hidden
                description: Flag the file as hidden
                type: boolean
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: file
      delete:
        displayName: delete_file
        description: Delete file
        queryParameters:
          replace:
            required: false
            displayName: replace
            description: |
              This action is irreversible.

              If replace is set to true the file contents will be replaced with a

              generic "file has been removed" file. This also destroys any previews

              that have been generated for the file.

              Must have manage files and become other users permissions
            type: boolean
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: file
      /public_url:
        get:
          displayName: get_public_inline_preview_url
          description: Get public inline preview url
          queryParameters:
            submission_id:
              required: false
              displayName: submission_id
              description: |
                The id of the submission the file is associated with.  Provide this argument to gain access to a file

                that has been submitted to an assignment (Canvas will verify that the file belongs to the submission

                and the calling user has rights to view the submission).
              type: integer
              format: int64
          responses:
            200:
              description: Success
  /global:
    /root_outcome_group:
      get:
        displayName: redirect_to_root_outcome_group_for_context_global
        description: Redirect to root outcome group for context
        responses:
          200:
            description: Success
    /outcome_groups/{id}:
      uriParameters:
        id:
          required: true
          displayName: id
          description: ID
          type: string
      get:
        displayName: show_outcome_group_global
        description: Show an outcome group
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      put:
        displayName: update_outcome_group_global
        description: Update an outcome group
        body:
          multipart/form-data:
            type: object
            properties:
              title:
                required: false
                displayName: title
                description: The new outcome group title.
                type: string
              description:
                required: false
                displayName: description
                description: The new outcome group description.
                type: string
              vendor_guid:
                required: false
                displayName: vendor_guid
                description: A custom GUID for the learning standard.
                type: string
              parent_outcome_group_id:
                required: false
                displayName: parent_outcome_group_id
                description: The id of the new parent outcome group.
                type: integer
                format: int64
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      delete:
        displayName: delete_outcome_group_global
        description: Delete an outcome group
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      /outcomes:
        get:
          displayName: list_linked_outcomes_global
          description: List linked outcomes
          queryParameters:
            outcome_style:
              required: false
              displayName: outcome_style
              description: |
                The detail level of the outcomes. Defaults to "abbrev".

                Specify "full" for more information.
              type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_link_outcome_global
          description: Create/link an outcome
          body:
            multipart/form-data:
              type: object
              properties:
                outcome_id:
                  required: false
                  displayName: outcome_id
                  description: The ID of the existing outcome to link.
                  type: integer
                  format: int64
                move_from:
                  required: false
                  displayName: move_from
                  description: The ID of the old outcome group. Only used if outcome_id is present.
                  type: integer
                  format: int64
                title:
                  required: false
                  displayName: title
                  description: The title of the new outcome. Required if outcome_id is absent.
                  type: string
                display_name:
                  required: false
                  displayName: display_name
                  description: |
                    A friendly name shown in reports for outcomes with cryptic titles,

                    such as common core standards names.
                  type: string
                description:
                  required: false
                  displayName: description
                  description: The description of the new outcome.
                  type: string
                vendor_guid:
                  required: false
                  displayName: vendor_guid
                  description: A custom GUID for the learning standard.
                  type: string
                mastery_points:
                  required: false
                  displayName: mastery_points
                  description: The mastery threshold for the embedded rubric criterion.
                  type: integer
                  format: int64
                ratings[description]:
                  required: false
                  displayName: ratings[description]
                  description: The description of a rating level for the embedded rubric criterion.
                  type: array
                  items:
                    type: string
                ratings[points]:
                  required: false
                  displayName: ratings[points]
                  description: The points corresponding to a rating level for the embedded rubric criterion.
                  type: array
                  items:
                    type: integer
                    format: int32
                calculation_method:
                  required: false
                  displayName: calculation_method
                  description: The new calculation method.  Defaults to "decaying_average"
                  type: string
                  enum:
                  - decaying_average
                  - n_mastery
                  - latest
                  - highest
                calculation_int:
                  required: false
                  displayName: calculation_int
                  description: The new calculation int.  Only applies if the calculation_method is "decaying_average" or "n_mastery". Defaults to 65
                  type: integer
                  format: int64
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{outcome_id}:
          uriParameters:
            outcome_id:
              required: true
              displayName: outcome_id
              description: The ID of the existing outcome to link.
              type: integer
              format: int64
          put:
            displayName: create_link_outcome_global_outcome_id
            description: Create/link an outcome
            body:
              multipart/form-data:
                type: object
                properties:
                  move_from:
                    required: false
                    displayName: move_from
                    description: The ID of the old outcome group. Only used if outcome_id is present.
                    type: integer
                    format: int64
                  title:
                    required: false
                    displayName: title
                    description: The title of the new outcome. Required if outcome_id is absent.
                    type: string
                  display_name:
                    required: false
                    displayName: display_name
                    description: |
                      A friendly name shown in reports for outcomes with cryptic titles,

                      such as common core standards names.
                    type: string
                  description:
                    required: false
                    displayName: description
                    description: The description of the new outcome.
                    type: string
                  vendor_guid:
                    required: false
                    displayName: vendor_guid
                    description: A custom GUID for the learning standard.
                    type: string
                  mastery_points:
                    required: false
                    displayName: mastery_points
                    description: The mastery threshold for the embedded rubric criterion.
                    type: integer
                    format: int64
                  ratings[description]:
                    required: false
                    displayName: ratings[description]
                    description: The description of a rating level for the embedded rubric criterion.
                    type: array
                    items:
                      type: string
                  ratings[points]:
                    required: false
                    displayName: ratings[points]
                    description: The points corresponding to a rating level for the embedded rubric criterion.
                    type: array
                    items:
                      type: integer
                      format: int32
                  calculation_method:
                    required: false
                    displayName: calculation_method
                    description: The new calculation method.  Defaults to "decaying_average"
                    type: string
                    enum:
                    - decaying_average
                    - n_mastery
                    - latest
                    - highest
                  calculation_int:
                    required: false
                    displayName: calculation_int
                    description: The new calculation int.  Only applies if the calculation_method is "decaying_average" or "n_mastery". Defaults to 65
                    type: integer
                    format: int64
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          delete:
            displayName: unlink_outcome_global
            description: Unlink an outcome
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /subgroups:
        get:
          displayName: list_subgroups_global
          description: List subgroups
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        post:
          displayName: create_subgroup_global
          description: Create a subgroup
          body:
            multipart/form-data:
              type: object
              properties:
                title:
                  required: true
                  displayName: title
                  description: The title of the new outcome group.
                  type: string
                description:
                  required: false
                  displayName: description
                  description: The description of the new outcome group.
                  type: string
                vendor_guid:
                  required: false
                  displayName: vendor_guid
                  description: A custom GUID for the learning standard
                  type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
      /import:
        post:
          displayName: import_outcome_group_global
          description: Import an outcome group
          body:
            multipart/form-data:
              type: object
              properties:
                source_outcome_group_id:
                  required: true
                  displayName: source_outcome_group_id
                  description: The ID of the source outcome group.
                  type: integer
                  format: int64
                async:
                  required: false
                  displayName: async
                  description: |
                    If true, perform action asynchronously.  In that case, this endpoint

                    will return a Progress object instead of an OutcomeGroup.

                    Use the {api:ProgressController#show progress endpoint}

                    to query the status of the operation.  The imported outcome group id

                    and url will be returned in the results of the Progress object

                    as "outcome_group_id" and "outcome_group_url"
                  type: boolean
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
  /planner:
    /items:
      get:
        displayName: list_planner_items
        description: List planner items
        queryParameters:
          start_date:
            required: false
            displayName: start_date
            description: |
              Only return items starting from the given date.

              The value should be formatted as: yyyy-mm-dd or ISO 8601 YYYY-MM-DDTHH:MM:SSZ.
            type: object
          end_date:
            required: false
            displayName: end_date
            description: |
              Only return items up to the given date.

              The value should be formatted as: yyyy-mm-dd or ISO 8601 YYYY-MM-DDTHH:MM:SSZ.
            type: object
          context_codes:
            required: false
            displayName: context_codes
            description: |
              List of context codes of courses and/or groups whose items you want to see.

              If not specified, defaults to all contexts associated to the current user.

              Note that concluded courses will be ignored unless specified in the includes[]

              parameter. The format of this field is the context type, followed by an underscore,

              followed by the context id. For example: course_42, group_123
            type: array
            items:
              type: string
          filter:
            required: false
            displayName: filter
            description: Only return items that have new or unread activity
            type: string
            enum:
            - new_activity
        responses:
          200:
            description: Success
    /overrides:
      get:
        displayName: list_planner_overrides
        description: List planner overrides
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      post:
        displayName: create_planner_override
        description: Create a planner override
        body:
          multipart/form-data:
            type: object
            properties:
              plannable_type:
                required: true
                displayName: plannable_type
                description: Type of the item that you are overriding in the planner
                type: string
                enum:
                - announcement
                - assignment
                - discussion_topic
                - quiz
                - wiki_page
                - planner_note
              plannable_id:
                required: true
                displayName: plannable_id
                description: ID of the item that you are overriding in the planner
                type: integer
                format: int64
              marked_complete:
                required: false
                displayName: marked_complete
                description: If this is true, the item will show in the planner as completed
                type: boolean
              dismissed:
                required: false
                displayName: dismissed
                description: If this is true, the item will not show in the opportunities list
                type: boolean
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      /{id}:
        uriParameters:
          id:
            required: true
            displayName: id
            description: ID
            type: string
        get:
          displayName: show_planner_override
          description: Show a planner override
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        put:
          displayName: update_planner_override
          description: Update a planner override
          body:
            multipart/form-data:
              type: object
              properties:
                marked_complete:
                  required: false
                  displayName: marked_complete
                  description: determines whether the planner item is marked as completed
                  type: string
                dismissed:
                  required: false
                  displayName: dismissed
                  description: determines whether the planner item shows in the opportunities list
                  type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        delete:
          displayName: delete_planner_override
          description: Delete a planner override
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
  /poll_sessions:
    /opened:
      get:
        displayName: list_opened_poll_sessions
        description: List opened poll sessions
        responses:
          200:
            description: Success
    /closed:
      get:
        displayName: list_closed_poll_sessions
        description: List closed poll sessions
        responses:
          200:
            description: Success
  /search:
    /recipients:
      get:
        displayName: find_recipients_search
        description: Find recipients
        queryParameters:
          search:
            required: false
            displayName: search
            description: |
              Search terms used for matching users/courses/groups (e.g. "bob smith"). If

              multiple terms are given (separated via whitespace), only results matching

              all terms will be returned.
            type: string
          context:
            required: false
            displayName: context
            description: Limit the search to a particular course/group (e.g. "course_3" or "group_4").
            type: string
          exclude:
            required: false
            displayName: exclude
            description: |
              Array of ids to exclude from the search. These may be user ids or

              course/group ids prefixed with "course_" or "group_" respectively,

              e.g. exclude[]=1&exclude[]=2&exclude[]=course_3
            type: array
            items:
              type: string
          type:
            required: false
            displayName: type
            description: Limit the search just to users or contexts (groups/courses).
            type: string
            enum:
            - user
            - context
          user_id:
            required: false
            displayName: user_id
            description: |
              Search for a specific user id. This ignores the other above parameters,

              and will never return more than one result.
            type: integer
            format: int64
          from_conversation_id:
            required: false
            displayName: from_conversation_id
            description: |
              When searching by user_id, only users that could be normally messaged by

              this user will be returned. This parameter allows you to specify a

              conversation that will be referenced for a shared context -- if both the

              current user and the searched user are in the conversation, the user will

              be returned. This is used to start new side conversations.
            type: integer
            format: int64
          permissions:
            required: false
            displayName: permissions
            description: |
              Array of permission strings to be checked for each matched context (e.g.

              "send_messages"). This argument determines which permissions may be

              returned in the response; it won't prevent contexts from being returned if

              they don't grant the permission(s).
            type: array
            items:
              type: string
        responses:
          200:
            description: Success
    /all_courses:
      get:
        displayName: list_all_courses
        description: List all courses
        queryParameters:
          search:
            required: false
            displayName: search
            description: |
              Search terms used for matching users/courses/groups (e.g. "bob smith"). If

              multiple terms are given (separated via whitespace), only results matching

              all terms will be returned.
            type: string
          public_only:
            required: false
            displayName: public_only
            description: Only return courses with public content. Defaults to false.
            type: boolean
          open_enrollment_only:
            required: false
            displayName: open_enrollment_only
            description: Only return courses that allow self enrollment. Defaults to false.
            type: boolean
        responses:
          200:
            description: Success
  /services:
    /kaltura:
      get:
        displayName: get_kaltura_config
        description: Get Kaltura config
        responses:
          200:
            description: Success
    /kaltura_session:
      post:
        displayName: start_kaltura_session
        description: Start Kaltura session
        responses:
          200:
            description: Success
/lti:
  /assignments/{assignment_id}:
    uriParameters:
      assignment_id:
        required: true
        displayName: assignment_id
        description: ID
        type: string
    get:
      displayName: get_single_assignment_lti
      description: Get a single assignment (lti)
      queryParameters:
        user_id:
          required: false
          displayName: user_id
          description: The id of the user. Can be a Canvas or LTI id for the user.
          type: string
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
    /files/{file_id}/originality_report:
      uriParameters:
        file_id:
          required: true
          displayName: file_id
          description: ID
          type: string
      put:
        displayName: edit_originality_report_files
        description: Edit an Originality Report
        body:
          multipart/form-data:
            type: object
            properties:
              originality_report[originality_score]:
                required: false
                displayName: originality_report[originality_score]
                description: |
                  A number between 0 and 100 representing the measure of the

                  specified file's originality.
                type: number
                format: double
              originality_report[originality_report_url]:
                required: false
                displayName: originality_report[originality_report_url]
                description: |
                  The URL where the originality report for the specified

                  file may be found.
                type: string
              originality_report[originality_report_file_id]:
                required: false
                displayName: originality_report[originality_report_file_id]
                description: |
                  The ID of the file within Canvas that contains the originality

                  report for the submitted file provided in the request URL.
                type: integer
                format: int64
              originality_report[tool_setting][resource_type_code]:
                required: false
                displayName: originality_report[tool_setting][resource_type_code]
                description: |
                  The resource type code of the resource handler Canvas should use for the

                  LTI launch for viewing originality reports. If set Canvas will launch

                  to the message with type 'basic-lti-launch-request' in the specified

                  resource handler rather than using the originality_report_url.
                type: string
              originality_report[tool_setting][resource_url]:
                required: false
                displayName: originality_report[tool_setting][resource_url]
                description: |
                  The URL Canvas should launch to when showing an LTI originality report.

                  Note that this value is inferred from the specified resource handler's

                  message "path" value (See `resource_type_code`) unless

                  it is specified. If this parameter is used a `resource_type_code`

                  must also be specified.
                type: string
              originality_report[workflow_state]:
                required: false
                displayName: originality_report[workflow_state]
                description: |
                  May be set to "pending", "error", or "scored". If an originality score

                  is provided a workflow state of "scored" will be inferred.
                type: string
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
      get:
        displayName: show_originality_report_files
        description: Show an Originality Report
        responses:
          200:
            description: Success
            body:
              text/plain:
                displayName: response
                type: any
    /submissions/{submission_id}:
      uriParameters:
        submission_id:
          required: true
          displayName: submission_id
          description: ID
          type: string
      get:
        displayName: get_single_submission
        description: Get a single submission
        responses:
          200:
            description: Success
      /originality_report:
        post:
          displayName: create_originality_report
          description: Create an Originality Report
          body:
            multipart/form-data:
              type: object
              properties:
                originality_report[originality_score]:
                  required: true
                  displayName: originality_report[originality_score]
                  description: |
                    A number between 0 and 100 representing the measure of the

                    specified file's originality.
                  type: number
                  format: double
                originality_report[file_id]:
                  required: false
                  displayName: originality_report[file_id]
                  description: |
                    The id of the file being given an originality score. Required

                    if creating a report associated with a file.
                  type: integer
                  format: int64
                originality_report[originality_report_url]:
                  required: false
                  displayName: originality_report[originality_report_url]
                  description: |
                    The URL where the originality report for the specified

                    file may be found.
                  type: string
                originality_report[originality_report_file_id]:
                  required: false
                  displayName: originality_report[originality_report_file_id]
                  description: |
                    The ID of the file within Canvas that contains the originality

                    report for the submitted file provided in the request URL.
                  type: integer
                  format: int64
                originality_report[tool_setting][resource_type_code]:
                  required: false
                  displayName: originality_report[tool_setting][resource_type_code]
                  description: |
                    The resource type code of the resource handler Canvas should use for the

                    LTI launch for viewing originality reports. If set Canvas will launch

                    to the message with type 'basic-lti-launch-request' in the specified

                    resource handler rather than using the originality_report_url.
                  type: string
                originality_report[tool_setting][resource_url]:
                  required: false
                  displayName: originality_report[tool_setting][resource_url]
                  description: |
                    The URL Canvas should launch to when showing an LTI originality report.

                    Note that this value is inferred from the specified resource handler's

                    message "path" value (See `resource_type_code`) unless

                    it is specified. If this parameter is used a `resource_type_code`

                    must also be specified.
                  type: string
                originality_report[workflow_state]:
                  required: false
                  displayName: originality_report[workflow_state]
                  description: |
                    May be set to "pending", "error", or "scored". If an originality score

                    is provided a workflow state of "scored" will be inferred.
                  type: string
          responses:
            200:
              description: Success
              body:
                text/plain:
                  displayName: response
                  type: any
        /{id}:
          uriParameters:
            id:
              required: true
              displayName: id
              description: ID
              type: string
          put:
            displayName: edit_originality_report_submissions
            description: Edit an Originality Report
            body:
              multipart/form-data:
                type: object
                properties:
                  originality_report[originality_score]:
                    required: false
                    displayName: originality_report[originality_score]
                    description: |
                      A number between 0 and 100 representing the measure of the

                      specified file's originality.
                    type: number
                    format: double
                  originality_report[originality_report_url]:
                    required: false
                    displayName: originality_report[originality_report_url]
                    description: |
                      The URL where the originality report for the specified

                      file may be found.
                    type: string
                  originality_report[originality_report_file_id]:
                    required: false
                    displayName: originality_report[originality_report_file_id]
                    description: |
                      The ID of the file within Canvas that contains the originality

                      report for the submitted file provided in the request URL.
                    type: integer
                    format: int64
                  originality_report[tool_setting][resource_type_code]:
                    required: false
                    displayName: originality_report[tool_setting][resource_type_code]
                    description: |
                      The resource type code of the resource handler Canvas should use for the

                      LTI launch for viewing originality reports. If set Canvas will launch

                      to the message with type 'basic-lti-launch-request' in the specified

                      resource handler rather than using the originality_report_url.
                    type: string
                  originality_report[tool_setting][resource_url]:
                    required: false
                    displayName: originality_report[tool_setting][resource_url]
                    description: |
                      The URL Canvas should launch to when showing an LTI originality report.

                      Note that this value is inferred from the specified resource handler's

                      message "path" value (See `resource_type_code`) unless

                      it is specified. If this parameter is used a `resource_type_code`

                      must also be specified.
                    type: string
                  originality_report[workflow_state]:
                    required: false
                    displayName: originality_report[workflow_state]
                    description: |
                      May be set to "pending", "error", or "scored". If an originality score

                      is provided a workflow state of "scored" will be inferred.
                    type: string
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
          get:
            displayName: show_originality_report_submissions
            description: Show an Originality Report
            responses:
              200:
                description: Success
                body:
                  text/plain:
                    displayName: response
                    type: any
      /history:
        get:
          displayName: get_history_of_single_submission
          description: Get the history of a single submission
          responses:
            200:
              description: Success
  /users/{id}:
    uriParameters:
      id:
        required: true
        displayName: id
        description: ID
        type: string
    get:
      displayName: get_single_user_lti
      description: Get a single user (lti)
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
  /groups/{group_id}/users:
    uriParameters:
      group_id:
        required: true
        displayName: group_id
        description: ID
        type: string
    get:
      displayName: get_all_users_in_group_lti
      description: Get all users in a group (lti)
      responses:
        200:
          description: Success
          body:
            text/plain:
              displayName: response
              type: any
  /subscriptions:
    post:
      displayName: create_webhook_subscription
      description: Create a Webhook Subscription
      body:
        multipart/form-data:
          type: object
          properties:
            submission[ContextId]:
              required: true
              displayName: submission[ContextId]
              description: The id of the context for the subscription.
              type: string
            subscription[ContextType]:
              required: true
              displayName: subscription[ContextType]
              description: |
                The type of context for the subscription. Must be 'assignment',

                'account', or 'course'.
              type: string
            subscription[EventTypes]:
              required: true
              displayName: subscription[EventTypes]
              description: |
                Array of strings representing the event types for

                the subscription.
              type: object
            subscription[Format]:
              required: true
              displayName: subscription[Format]
              description: Format to deliver the live events. Must be 'live-event' or 'caliper'.
              type: string
            subscription[TransportMetadata]:
              required: true
              displayName: subscription[TransportMetadata]
              description: "An object with a single key: 'Url'. Example: { \"Url\": \"sqs.example\" }"
              type: object
            subscription[TransportType]:
              required: true
              displayName: subscription[TransportType]
              description: Must be either 'sqs' or 'https'.
              type: string
      responses:
        200:
          description: Success
    get:
      displayName: list_all_webhook_subscription_for_tool_proxy
      description: List all Webhook Subscription for a tool proxy
      responses:
        200:
          description: Success
    /{id}:
      uriParameters:
        id:
          required: true
          displayName: id
          description: ID
          type: string
      delete:
        displayName: delete_webhook_subscription
        description: Delete a Webhook Subscription
        responses:
          200:
            description: Success
      get:
        displayName: show_single_webhook_subscription
        description: Show a single Webhook Subscription
        responses:
          200:
            description: Success
      put:
        displayName: update_webhook_subscription
        description: Update a Webhook Subscription
        responses:
          200:
            description: Success
/sis:
  /accounts/{account_id}/assignments:
    uriParameters:
      account_id:
        required: true
        displayName: account_id
        description: The ID of the account to query.
        type: integer
        format: int64
    get:
      displayName: retrieve_assignments_enabled_for_grade_export_to_sis_accounts
      description: Retrieve assignments enabled for grade export to SIS
      queryParameters:
        course_id:
          required: false
          displayName: course_id
          description: The ID of the course to query.
          type: integer
          format: int64
        starts_before:
          required: false
          displayName: starts_before
          description: When searching on an account,
          type: object
        ends_after:
          required: false
          displayName: ends_after
          description: When searching on an account,
          type: object
        include:
          required: false
          displayName: include
          description: Array of additional
          type: string
          enum:
          - student_overrides
      responses:
        200:
          description: Success
  /courses:
    /{course_id}:
      uriParameters:
        course_id:
          required: true
          displayName: course_id
          description: The ID of the course to query.
          type: integer
          format: int64
      /assignments:
        get:
          displayName: retrieve_assignments_enabled_for_grade_export_to_sis_courses
          description: Retrieve assignments enabled for grade export to SIS
          queryParameters:
            account_id:
              required: false
              displayName: account_id
              description: The ID of the account to query.
              type: integer
              format: int64
            starts_before:
              required: false
              displayName: starts_before
              description: When searching on an account,
              type: object
            ends_after:
              required: false
              displayName: ends_after
              description: When searching on an account,
              type: object
            include:
              required: false
              displayName: include
              description: Array of additional
              type: string
              enum:
              - student_overrides
          responses:
            200:
              description: Success
      /disable_post_to_sis:
        put:
          displayName: disable_assignments_currently_enabled_for_grade_export_to_sis
          description: Disable assignments currently enabled for grade export to SIS
          body:
            multipart/form-data:
              type: object
              properties:
                grading_period_id:
                  required: false
                  displayName: grading_period_id
                  description: The ID of the grading period.
                  type: integer
                  format: int64
          responses:
            200:
              description: Success
